\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Fri Aug 01 12:24:02 CEST 2014
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_SIDE_PROOF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:off , assertions-assertions\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , modelFields-modelFields\\:showSatisfiability , initialisation-initialisation\\:disableStaticInitialisation , sequences-sequences\\:on , runtimeExceptions-runtimeExceptions\\:allow , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Aug 01 12:24:02 CEST 2014
name=VerifyMin[VerifyMin\\:\\:min(int,int)].JML normal_behavior operation contract.0
contract=VerifyMin[VerifyMin\\:\\:min(int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "Martin" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "119")

(branch "dummy ID"
(rule "assignment" (formula "1") (term "1,1") (newnames "heapAtPre") (userinteraction))
(rule "methodBodyExpand" (formula "1") (term "1,1,1") (newnames "heapBefore_min,savedHeapBefore_min") (userinteraction))
(rule "impRight" (formula "1") (userinteraction))
(rule "ifElseUnfold" (formula "2") (term "1,1,1") (inst "#boolv=x") (userinteraction))
(rule "variableDeclaration" (formula "2") (term "1,1,1") (newnames "x_1") (userinteraction))
(rule "less_than_comparison_simple" (formula "2") (term "1,1,1") (userinteraction))
(rule "ifElse" (formula "2") (term "1,1,1,1") (userinteraction))
(rule "ifthenelse_split_for" (formula "2") (term "1,1,1,1") (userinteraction))
(branch "x_1 = TRUE TRUE"
   (builtin "One Step Simplification" (formula "2"))
   (builtin "One Step Simplification" (formula "1"))
   (builtin "One Step Simplification" (formula "3"))
   (rule "andLeft" (formula "2"))
   (rule "eqSymm" (formula "4") (term "0,0,1,0,1"))
   (rule "eqSymm" (formula "4") (term "1,0,0,0,0,1"))
   (rule "eqSymm" (formula "4") (term "1,1,0,0,0,1"))
   (rule "inEqSimp_ltToLeq" (formula "1"))
   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
   (rule "polySimp_addComm1" (formula "1") (term "0"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "0,0,0,0,0,1"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0,0,0,0,1"))
   (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,0,0,1"))
   (rule "inEqSimp_commuteGeq" (formula "4") (term "0,1,0,0,0,1"))
   (rule "blockReturn" (formula "4") (term "1"))
   (rule "inEqSimp_sepNegMonomial0" (formula "1"))
   (rule "polySimp_mulLiterals" (formula "1") (term "0"))
   (rule "polySimp_elimOne" (formula "1") (term "0"))
   (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,0,0,0,1"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,0,0,0,1"))
   (rule "polySimp_elimOne" (formula "4") (term "0,0,0,0,0,0,1"))
   (rule "methodCallReturn" (formula "4") (term "1"))
   (rule "assignment" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4"))
   (rule "methodCallEmpty" (formula "4") (term "1"))
   (rule "tryEmpty" (formula "4") (term "1"))
   (rule "emptyModality" (formula "4") (term "1"))
   (builtin "One Step Simplification" (formula "4") (ifInst ""  (formula "1")))
   (rule "impRight" (formula "4"))
   (rule "inEqSimp_contradEq7" (formula "5") (ifseqformula "2"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
   (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
   (rule "add_literals" (formula "5") (term "1,1,0,0"))
   (rule "times_zero_1" (formula "5") (term "1,0,0"))
   (rule "add_zero_right" (formula "5") (term "0,0"))
   (rule "leq_literals" (formula "5") (term "0"))
   (builtin "One Step Simplification" (formula "5"))
   (rule "false_right" (formula "5"))
   (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
   (rule "andLeft" (formula "1"))
   (rule "inEqSimp_homoInEq1" (formula "1"))
   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
   (rule "add_literals" (formula "1") (term "1,1,0"))
   (rule "times_zero_1" (formula "1") (term "1,0"))
   (rule "add_zero_right" (formula "1") (term "0"))
   (rule "leq_literals" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
(branch "x_1 = TRUE FALSE"
   (opengoal " ")
)
)

}
