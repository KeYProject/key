\profile "Java Profile for Symbolic Execution";

\settings {
"#Proof-Settings-Config-File
#Wed Mar 30 13:40:52 CEST 2016
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_INSTANTIATE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=1000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=methodExpansion-methodExpansion:noRestriction,assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=Symbolic Execution Strategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Wed Mar 30 13:40:52 CEST 2016
name=Example[Example\\:\\:magic(Example,Example)].JML normal_behavior operation contract.0
addSymbolicExecutionLabel=true
contract=Example[Example\\:\\:magic(Example,Example)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))
(keyLog "1" (keyUser "marti" ) (keyVersion "90bb886cd7b78027c8f6703803461f09e5699bb9"))

(autoModeTime "2207")

(branch "dummy ID"
(rule "elementOfAllLocs" (formula "1") (term "0,0,0,0,1,0,1,1") (newnames "a,b,result,exc,heapAtPre,o,f"))
(rule "concrete_or_1" (formula "1") (term "0,0,0,1,0,1,1"))
(rule "concrete_or_1" (formula "1") (term "0,0,1,0,1,1"))
(rule "simplifyUpdate2" (formula "1") (term "1"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "4"))
(rule "notLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "replace_known_right" (formula "2") (term "0") (ifseqformula "5"))
(rule "concrete_or_2" (formula "2"))
(rule "replace_known_right" (formula "3") (term "0") (ifseqformula "6"))
(rule "concrete_or_2" (formula "3"))
(rule "assignment" (formula "7") (term "1"))
(rule "sequentialToParallel2" (formula "7"))
(rule "simplifyUpdate3" (formula "7") (term "1,0"))
(rule "all_unused" (formula "7") (term "1,0,1"))
(rule "all_unused" (formula "7") (term "1,0,1"))
(rule "concrete_and_3" (formula "7") (term "0,1"))
(rule "methodBodyExpand" (formula "7") (term "1") (newnames "heapBefore_magic,savedHeapBefore_magic"))
(rule "simplifyUpdate2" (formula "7") (term "1"))
(rule "assignment_write_attribute" (formula "7") (term "1"))
(branch "Normal Execution (_a != null)"
   (rule "simplifyUpdate2" (formula "7"))
   (rule "sequentialToParallel2" (formula "8"))
   (rule "simplifyUpdate3" (formula "8") (term "1,0"))
   (rule "applyOnElementary" (formula "8") (term "1,0"))
   (rule "applyOnRigidFormula" (formula "7"))
   (rule "applyOnPV" (formula "7") (term "0"))
   (rule "simplifyUpdate1" (formula "7") (term "1"))
   (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
   (rule "applyOnPV" (formula "7") (term "1,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
   (rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
   (rule "assignment_write_attribute" (formula "7") (term "1"))
   (branch "Normal Execution (_b != null)"
      (rule "simplifyUpdate2" (formula "7"))
      (rule "sequentialToParallel2" (formula "8"))
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate3" (formula "8") (term "1,0"))
      (rule "applyOnElementary" (formula "8") (term "1,0"))
      (rule "applyOnRigidFormula" (formula "7"))
      (rule "applyOnPV" (formula "7") (term "0"))
      (rule "simplifyUpdate1" (formula "7") (term "1"))
      (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "3,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
      (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
      (rule "applyOnPV" (formula "7") (term "0,0,1,0"))
      (rule "applyOnPV" (formula "7") (term "1,0,1,0"))
      (rule "returnUnfold" (formula "7") (term "1") (inst "#v0=x"))
      (rule "variableDeclarationAssign" (formula "7") (term "1"))
      (rule "variableDeclaration" (formula "7") (term "1") (newnames "x"))
      (rule "assignment_read_attribute" (formula "7") (term "1"))
      (branch "Normal Execution (_a != null)"
         (rule "simplifyUpdate2" (formula "7"))
         (rule "sequentialToParallel2" (formula "8"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "simplifyUpdate3" (formula "8") (term "1,0"))
         (rule "applyOnElementary" (formula "8") (term "1,0"))
         (rule "applyOnRigidFormula" (formula "7"))
         (rule "applyOnPV" (formula "7") (term "0"))
         (rule "simplifyUpdate1" (formula "7") (term "1"))
         (rule "applyOnRigidTerm" (formula "7") (term "0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "0,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "1,0,1,0"))
         (rule "simplifyUpdate1" (formula "7") (term "2,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "0,0,1,0"))
         (rule "applyOnPV" (formula "7") (term "1,0,1,0"))
         (rule "pullOutSelect" (formula "7") (term "0,1,0") (inst "selectSK=Example_value_0"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "castDel" (formula "1") (term "1,0"))
         (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=Example_value_1"))
         (rule "simplifySelectOfStore" (formula "1"))
         (rule "equalUnique" (formula "1") (term "0,1,0,0"))
         (rule "concrete_not_2" (formula "1") (term "1,0,0"))
         (rule "concrete_and_3" (formula "1") (term "0,0"))
         (rule "eqClose" (formula "1") (term "0,0,0"))
         (rule "concrete_and_1" (formula "1") (term "0,0"))
         (rule "equalUnique" (formula "1") (term "0,0"))
         (rule "ifthenelse_true" (formula "1") (term "0"))
         (rule "castDel" (formula "1") (term "0"))
         (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
         (rule "hideAuxiliaryEq" (formula "1"))
         (rule "methodCallReturn" (formula "8") (term "1"))
         (rule "assignment" (formula "8") (term "1"))
         (rule "simplifyUpdate2" (formula "8") (term "1"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "methodCallEmpty" (formula "8") (term "1"))
         (rule "tryEmpty" (formula "8") (term "1"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "emptyModality" (formula "8") (term "1"))
         (rule "applyOnRigidFormula" (formula "8"))
         (rule "simplifyUpdate1" (formula "8") (term "1"))
         (rule "applyOnPV" (formula "8") (term "0"))
         (rule "eqClose" (formula "8"))
         (rule "closeTrue" (formula "8"))
      )
      (branch "Null Reference (_a = null)"
         (rule "simplifyUpdate2" (formula "1"))
         (rule "simplifyUpdate2" (formula "8"))
         (rule "applyOnRigidFormula" (formula "1"))
         (rule "simplifyUpdate1" (formula "1") (term "1"))
         (rule "applyOnPV" (formula "1") (term "0"))
         (rule "close" (formula "6") (ifseqformula "1"))
      )
   )
   (branch "Null Reference (_b = null)"
      (rule "simplifyUpdate2" (formula "8"))
      (rule "simplifyUpdate2" (formula "1"))
      (rule "applyOnRigidFormula" (formula "1"))
      (rule "applyOnPV" (formula "1") (term "0"))
      (rule "simplifyUpdate1" (formula "1") (term "1"))
      (rule "close" (formula "7") (ifseqformula "1"))
   )
)
(branch "Null Reference (_a = null)"
   (rule "simplifyUpdate2" (formula "1"))
   (rule "applyOnRigidFormula" (formula "1"))
   (rule "applyOnPV" (formula "1") (term "0"))
   (rule "simplifyUpdate1" (formula "1") (term "1"))
   (rule "close" (formula "6") (ifseqformula "1"))
)
)

}
