<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
          "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks KeY's coding conventions from:

     https://www.key-project.org/gitlab/key/KeY/wikis/Code-Conventions

  Comments which are initialed "KeY" are removed for the incremental
  checks run for KeY. The comments have been added to allow for this
  check file to be used out of the box with existing checkstyle
  frameworks within Eclipse etc.
-->
<module name="Checker">
    <property name="localeLanguage" value="en"/>
    <property name="fileExtensions" value="java"/>

    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        http://checkstyle.sourceforge.net/5.x/config.html#Checker
    -->
     <property name="basedir" value="${home.dir}"/> 


    <!-- This is a filter written for KeY which restricts checks to those 
         files that have been recently touched.
         The git-diff file defines what "has been touched" means.
	 See GitDiffFilter.java for details. -->
     <module name="GitDiffFilter"> 
       <property name="diffFilename" value="${diff.file}" /> 
     </module> 

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile">
      <property name="severity" value="info"/>
    </module>

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sf.net/config_sizes.html -->
    <module name="FileLength">
      <property name="severity" value="info"/>
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
      <property name="eachLine" value="true"/>
    </module>

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
    <module name="RegexpSingleline">   <!-- -tr-spaces -->
       <property name="severity" value="warning" />
       <property name="format" value="\s+$"/>
       <property name="minimum" value="0"/>
       <property name="maximum" value="0"/>
       <property name="message" value="Line has trailing spaces."/>
    </module>

    <module name="TreeWalker">

      <!-- Checks for Javadoc comments.                     -->
      <!-- See http://checkstyle.sf.net/config_javadoc.html -->
      <module name="JavadocMethod">
	<!-- getter and setter need not necessarily be documented ... -->
	<property name="allowMissingPropertyJavadoc" value="true" />
	<property name="scope" value="package" />
      </module>
      <module name="JavadocType">
	<property name="scope" value="package"/>
	<property name="authorFormat" value="\S"/>
      </module>

      <module name="JavadocVariable"/>
      <module name="JavadocStyle">
	<property name="checkFirstSentence" value="false" />
      </module>

      <!-- Checks for Naming Conventions.                  -->
      <!-- See http://checkstyle.sf.net/config_naming.html -->
      <module name="ConstantName"/>
      <module name="LocalFinalVariableName"/>
      <module name="LocalVariableName"/>
      <module name="MemberName"/>
      <module name="MethodName"/>
      <module name="PackageName"/>
      <module name="ParameterName"/>
      <module name="StaticVariableName"/>
      <module name="TypeName">
	<!-- This only applies to packages outside eclipse! -->
	<property name="format" value="^(I[a-z]|[A-HJ-Z])[a-zA-Z0-9]+$"/>
      </module>

      <!-- Checks for Size Violations.                    -->
      <!-- See http://checkstyle.sf.net/config_sizes.html -->
      <module name="LineLength">
	<property name="max" value="100"/>
      </module>
      <module name="MethodLength">
	<property name="max" value="60"/>
	<property name="countEmpty" value="false"/>
      </module>
	
      <!-- Checks for whitespace                               -->
      <!-- See http://checkstyle.sf.net/config_whitespace.html -->
      <module name="ParenPad">
	<property name="severity" value="info" />
      </module>
      <module name="TypecastParenPad">
	<property name="severity" value="info" />
      </module>
      <module name="WhitespaceAfter">
	<property name="severity" value="info" />
	<property name="tokens" 
		  value="COMMA, SEMI" />
      </module>
      <module name="WhitespaceAround">
	<property name="severity" value="info" />
	<property name="tokens" 
		  value="ASSIGN, ARRAY_INIT, BAND, BAND_ASSIGN, BOR, 
			 BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN,
			 COLON, DIV, DIV_ASSIGN, EQUAL, GE, GT, LAMBDA,
			 LAND, LCURLY, LE, LOR, LT, MINUS, MINUS_ASSIGN,
			 MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN,
			 QUESTION, RCURLY, SL, SLIST, SL_ASSIGN, SR,
			 SR_ASSIGN, STAR, STAR_ASSIGN"/>
      </module>

      <!-- Checks for blocks. You know, those {}'s -->
      <!-- See http://checkstyle.sf.net/config_blocks.html -->
      <module name="LeftCurly">
	<property name="option" value="eol"/>
      </module>
      <module name="NeedBraces"/>
      <module name="RightCurly"/>

      <!-- Checks for common coding problems               -->
      <!-- See http://checkstyle.sf.net/config_coding.html -->
      <module name="DeclarationOrder" />

      <module name="DefaultComesLast">
	<property name="severity" value="info" />
      </module>     

      <module name="EmptyStatement">
	<message key="empty.statement"
		 value="Empty Statement. (Replace it with an empty block containing a comment.)"/>
	<property name="severity" value="warning" />
      </module>

      <module name="EqualsHashCode">
	<property name="severity" value="warning" />
      </module>

      <module name="FallThrough">
	<property name="severity" value="warning" />
	<message key="fall.through"
		 value="Fall through from previous branch of the switch statement. (Add a clarifying comment mentioning 'falls through'.)"/>
	<message key="fall.through.last"
		 value="Fall through from the last branch of the switch statement. (Add a clarifying comment mentioning 'falls through'.)"/>
      </module>

      <module name="InnerAssignment">
	<property name="severity" value="warning" />
      </module>

      <module name="MultipleVariableDeclarations"/>

      <module name="SimplifyBooleanExpression">
	<property name="severity" value="warning" />
      </module>

      <module name="SimplifyBooleanReturn">
	<property name="severity" value="warning" />
      </module>

      <!-- Checks for class design                         -->
      <!-- See http://checkstyle.sf.net/config_design.html -->
      <module name="FinalClass">
	<property name="severity" value="warning" />
      </module>

      <module name="HideUtilityClassConstructor">
	<property name="severity" value="warning" />
      </module>

      <module name="VisibilityModifier">
	<property name="allowPublicFinalFields" value="true" />
	<property name="severity" value="warning" />
      </module>

      <!-- Miscellaneous other checks.  -->
      <!-- See http://checkstyle.sf.net/config_misc.html -->
      <module name="Indentation">
	<property name="caseIndent" value="0"/>
      </module>

      <!-- Check that ensures decrements and increments -->
      <!-- are not used within expressions -->
      <!-- See NoEmbeddedPlusPlus.java for details. -->
       <module name="NoEmbeddedPlusPlus"/> 

    </module>

</module>
