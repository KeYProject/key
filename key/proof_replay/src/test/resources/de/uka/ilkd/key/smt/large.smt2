((set-logic ALL)
(declare-fun var_j!1 (U) U)
(proof
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x453 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x451)))
(let ((?x603 (u2i ?x453)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let ((?x602 (u2i ?x459)))
(let (($x5947 (= ?x602 ?x603)))
(let (($x4396 (= ?x459 ?x453)))
(let ((?x4399 (var_j!1 ?x451)))
(let ((?x4408 (u2i ?x4399)))
(let (($x4412 (>= ?x4408 0)))
(let (($x4413 (not $x4412)))
(let (($x4411 (<= (+ (u2i (KeY_length ?x451)) (* (- 1) ?x4408)) 0)))
(let ((?x4406 (cast (keyselect KeY_heap ?x457 (arr ?x4399)) sort_int)))
(let ((?x4404 (cast (keyselect KeY_heap ?x451 (arr ?x4399)) sort_int)))
(let (($x4407 (= ?x4404 ?x4406)))
(let (($x4400 (instanceof ?x4399 sort_int)))
(let (($x4401 (not $x4400)))
(let (($x4414 (or $x4401 $x4407 $x4411 $x4413)))
(let (($x6112 (= ?x4406 ?x4404)))
(let (($x6311 (not $x6112)))
(let ((@x6313 (monotonicity (symm (commutativity (= $x6112 $x4407)) (= $x4407 $x6112)) (= (not $x4407) $x6311))))
(let (($x4457 (not $x4407)))
(let (($x4415 (not $x4414)))
(let ((@x6301 (hypothesis $x4415)))
(let (($x6129 (<= (+ (u2i KeY_i_0) (* (- 1) ?x4408)) 0)))
(let (($x6316 (not $x6129)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x463 (u2i KeY_i_0)))
(let ((?x526 (+ ?x463 ?x525)))
(let (($x1041 (>= ?x526 0)))
(let ((?x487 (* (- 1) ?x463)))
(let ((?x2138 (+ ?x487 ?x521)))
(let (($x2209 (<= ?x2138 0)))
(let ((?x1943 (+ ?x521 ?x487)))
(let (($x2044 (<= ?x1943 0)))
(let ((@x2215 (trans (monotonicity (rewrite (= ?x1943 ?x2138)) (= $x2044 $x2209)) (rewrite (= $x2209 $x1041)) (= $x2044 $x1041))))
(let ((@x6319 (unit-resolution ((_ th-lemma arith assign-bounds -1 -1) (or $x6316 (not $x1041) $x4411)) (unit-resolution (def-axiom (or $x4414 (not $x4411))) @x6301 (not $x4411)) (mp (asserted $x2044) @x2215 $x1041) $x6316)))
(let (($x3208 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x2616 (not $x466)))
(let (($x485 (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x473 $x485 $x2616)))))))))))))) :pattern ( (instanceof var_j sort_int) ) :pattern ( (arr var_j) ) :pattern ( (u2i var_j) ) :qid k!663))
))
(let (($x2636 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x2616 (not $x466)))
(let (($x485 (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x473 $x485 $x2616)))))))))))))) :qid k!663))
))
(let ((?x3211 (lambda ((var_j U) )(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x2616 (not $x466)))
(let (($x485 (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(let (($x2631 (or $x122 $x473 $x485 $x2616)))
(refl (= $x2631 $x2631)))))))))))))))))
))
(let (($x509 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x492 (and (not (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)) $x466)))
(let (($x489 (not $x492)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x473 $x489)))))))))))))) :qid k!663))
))
(let ((?x2637 (lambda ((var_j U) )(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x2616 (not $x466)))
(let (($x485 (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(let (($x2631 (or $x122 $x473 $x485 $x2616)))
(let (($x492 (and (not $x485) $x466)))
(let (($x489 (not $x492)))
(let (($x504 (or $x122 $x473 $x489)))
(let ((@x2623 (monotonicity (rewrite (= $x492 (not (or $x485 $x2616)))) (= $x489 (not (not (or $x485 $x2616)))))))
(let ((@x2627 (trans @x2623 (rewrite (= (not (not (or $x485 $x2616))) (or $x485 $x2616))) (= $x489 (or $x485 $x2616)))))
(trans (monotonicity @x2627 (= $x504 (or $x122 $x473 (or $x485 $x2616)))) (rewrite (= (or $x122 $x473 (or $x485 $x2616)) $x2631)) (= $x504 $x2631))))))))))))))))))))))
))
(let ((?x2307 (lambda ((var_j U) )(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x492 (and (not (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)) $x466)))
(let (($x489 (not $x492)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(let (($x504 (or $x122 $x473 $x489)))
(refl (~ $x504 $x504)))))))))))))))))
))
(let (($x1950 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x1940 (not (and (not (<= (+ (u2i KeY_i_0) (* (- 1) ?x102)) 0)) $x466))))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x473 $x1940))))))))))))) :qid k!663))
))
(let ((?x2128 (lambda ((var_j U) )(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x492 (and (not (>= (+ ?x102 (* (- 1) (u2i KeY_i_0))) 0)) $x466)))
(let (($x489 (not $x492)))
(let ((?x468 (arr var_j)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x472 (cast (keyselect KeY_heap ?x451 ?x468) sort_int)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let (($x473 (= ?x470 ?x472)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(let (($x504 (or $x122 $x473 $x489)))
(let (($x1940 (not (and (not (<= (+ (u2i KeY_i_0) (* (- 1) ?x102)) 0)) $x466))))
(let (($x1941 (or $x122 $x473 $x1940)))
(let (($x2123 (= $x1941 $x504)))
(trans (monotonicity (rewrite (= $x1940 $x489)) $x2123) (rewrite (= $x504 $x504)) $x2123)))))))))))))))))))
))
(let ((@x2132 (mp (asserted $x1950) (quant-intro (proof-bind ?x2128) (= $x1950 $x509)) $x509)))
(let ((@x2641 (mp (mp~ @x2132 (nnf-pos (proof-bind ?x2307) (~ $x509 $x509)) $x509) (quant-intro (proof-bind ?x2637) (= $x509 $x2636)) $x2636)))
(let (($x4100 (not $x3208)))
(let (($x6142 (or $x4100 $x4401 $x4413 $x6112 $x6129)))
(let (($x6137 (or $x4401 $x4413 $x6112 $x6129)))
(let (($x6145 (or $x4100 $x6137)))
(let ((?x6113 (+ ?x4408 ?x487)))
(let (($x6120 (>= ?x6113 0)))
(let (($x6121 (or $x4401 $x6112 $x6120 $x4413)))
(let (($x6143 (or $x4100 $x6121)))
(let ((@x6127 (monotonicity (rewrite (= ?x6113 (+ ?x487 ?x4408))) (= $x6120 (>= (+ ?x487 ?x4408) 0)))))
(let ((@x6133 (trans @x6127 (rewrite (= (>= (+ ?x487 ?x4408) 0) $x6129)) (= $x6120 $x6129))))
(let ((@x6141 (trans (monotonicity @x6133 (= $x6121 (or $x4401 $x6112 $x6129 $x4413))) (rewrite (= (or $x4401 $x6112 $x6129 $x4413) $x6137)) (= $x6121 $x6137))))
(let ((@x6151 (trans (monotonicity @x6141 (= $x6143 $x6145)) (rewrite (= $x6145 $x6142)) (= $x6143 $x6142))))
(let ((@x6323 (unit-resolution (mp ((_ quant-inst (var_j!1 ?x451)) $x6143) @x6151 $x6142) (mp @x2641 (quant-intro (proof-bind ?x3211) (= $x2636 $x3208)) $x3208) (unit-resolution (def-axiom (or $x4414 $x4400)) @x6301 $x4400) (unit-resolution (def-axiom (or $x4414 $x4412)) @x6301 $x4412) (or $x6112 $x6129))))
(let ((@x6324 (unit-resolution @x6323 @x6319 (mp (unit-resolution (def-axiom (or $x4414 $x4457)) @x6301 $x4457) @x6313 $x6311) false)))
(let (($x4344 (instanceof ?x451 |sort_int[]|)))
(let (($x4263 (subtype (typeof ?x451) |sort_int[]|)))
(let (($x6750 (= $x4344 $x4263)))
(let (($x143 (forall ((u U) (t T) )(! (let ((?x139 (typeof u)))
(let (($x140 (subtype ?x139 t)))
(let (($x138 (instanceof u t)))
(= $x138 $x140)))) :pattern ( (instanceof u t) ) :qid k!243))
))
(let ((?x2237 (lambda ((u U) (t T) )(let ((?x139 (typeof u)))
(let (($x140 (subtype ?x139 t)))
(let (($x138 (instanceof u t)))
(let (($x141 (= $x138 $x140)))
(refl (~ $x141 $x141)))))))
))
(let ((@x144 (asserted $x143)))
(let ((@x6756 (unit-resolution ((_ quant-inst (cast ?x450 |sort_int[]|) |sort_int[]|) (or (not $x143) $x6750)) (mp~ @x144 (nnf-pos (proof-bind ?x2237) (~ $x143 $x143)) $x143) (hypothesis (not $x6750)) false)))
(let (($x189 (forall ((x U) (t T) )(! (subtype (typeof (cast x t)) t) :pattern ( (cast x t) ) :qid k!293))
))
(let ((?x2265 (lambda ((x U) (t T) )(let (($x187 (subtype (typeof (cast x t)) t)))
(refl (~ $x187 $x187))))
))
(let ((@x190 (asserted $x189)))
(let ((@x5936 (unit-resolution ((_ quant-inst (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|) |sort_int[]|) (or (not $x189) $x4263)) (mp~ @x190 (nnf-pos (proof-bind ?x2265) (~ $x189 $x189)) $x189) $x4263)))
(let ((@x5906 (unit-resolution (def-axiom (or (not $x6750) $x4344 (not $x4263))) @x5936 (or (not $x6750) $x4344))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x516 (keyselect KeY_heap ?x451 |KeY_java.lang.Object::<created>|)))
(let (($x1864 (= (cast ?x516 ?x45) ?x493)))
(let (($x1058 (= ?x451 null)))
(let (($x4381 (or $x1058 $x1864)))
(let (($x1059 (not $x1058)))
(let ((@x1060 (asserted $x1059)))
(let (($x3235 (forall ((var_m3 U) )(! (let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i (var_j!1 var_m3)))) 0)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2706 (not (or $x2437 $x2450 $x2505 (not (>= (u2i ?x2435) 0))))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x631 $x685 $x827 $x2320 $x2344 $x2706)))))))))))))))))))))))))) :pattern ( (instanceof var_m3 |sort_int[]|) ) :pattern ( (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3) ) :pattern ( (KeY_length var_m3) ) :pattern ( (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|) ) :qid k!965))
))
(let (($x2693 (forall ((var_m3 U) )(! (let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i (var_j!1 var_m3)))) 0)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2706 (not (or $x2437 $x2450 $x2505 (not (>= (u2i ?x2435) 0))))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x631 $x685 $x827 $x2320 $x2344 $x2706)))))))))))))))))))))))))) :qid k!965))
))
(let ((?x3237 (lambda ((var_m3 U) )(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i (var_j!1 var_m3)))) 0)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2706 (not (or $x2437 $x2450 $x2505 (not (>= (u2i ?x2435) 0))))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2687 (or $x631 $x685 $x827 $x2320 $x2344 $x2706)))
(let (($x2690 (= $x2687 $x2687)))
(refl $x2690)))))))))))))))))))))))))))))
))
(let (($x2525 (forall ((var_m3 U) )(! (let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i ?x2435))) 0)))
(let ((?x2438 (u2i ?x2435)))
(let (($x2439 (>= ?x2438 0)))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2513 (not (or $x2437 (not (and $x2439 (not $x2505))) $x2450))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x631 $x685 $x827 $x2320 $x2344 $x2513)))))))))))))))))))))))))))) :qid k!965))
))
(let ((?x2694 (lambda ((var_m3 U) )(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i (var_j!1 var_m3)))) 0)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2706 (not (or $x2437 $x2450 $x2505 (not (>= (u2i ?x2435) 0))))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2687 (or $x631 $x685 $x827 $x2320 $x2344 $x2706)))
(let (($x2513 (not (or $x2437 (not (and (>= (u2i ?x2435) 0) (not $x2505))) $x2450))))
(let (($x2520 (or $x631 $x685 $x827 $x2320 $x2344 $x2513)))
(let (($x2688 (= $x2520 $x2687)))
(trans (monotonicity (rewrite (= $x2513 $x2706)) $x2688) (rewrite (= $x2687 $x2687)) $x2688)))))))))))))))))))))))))))))))
))
(let (($x2491 (forall ((var_m3 U) )(! (let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let (($x2343 (not $x637)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x2438 (u2i ?x2435)))
(let (($x2439 (>= ?x2438 0)))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2452 (not (or $x2437 (not (and $x2439 (not (>= (+ ?x2438 ?x525) 0)))) $x2450))))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let (($x2485 (or $x2320 $x2452 $x2344 $x2343)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x685 $x827 $x2485))))))))))))))))))))))))))))))) :qid k!965))
))
(let ((?x2526 (lambda ((var_m3 U) )(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let (($x2505 (<= (+ ?x521 (* (- 1) (u2i ?x2435))) 0)))
(let ((?x2438 (u2i ?x2435)))
(let (($x2439 (>= ?x2438 0)))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2513 (not (or $x2437 (not (and $x2439 (not $x2505))) $x2450))))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x631 (= var_m3 null)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2520 (or $x631 $x685 $x827 $x2320 $x2344 $x2513)))
(let (($x637 (not $x631)))
(let (($x2343 (not $x637)))
(let (($x2451 (or $x2437 (not (and $x2439 (not (>= (+ ?x2438 (* (- 1) ?x521)) 0)))) $x2450)))
(let (($x2452 (not $x2451)))
(let (($x2485 (or $x2320 $x2452 $x2344 $x2343)))
(let (($x2488 (or $x685 $x827 $x2485)))
(let ((@x2508 (monotonicity (rewrite (= $x2452 $x2513)) (rewrite (= $x2343 $x631)) (= $x2485 (or $x2320 $x2513 $x2344 $x631)))))
(let ((@x2516 (trans @x2508 (rewrite (= (or $x2320 $x2513 $x2344 $x631) (or $x631 $x2320 $x2344 $x2513))) (= $x2485 (or $x631 $x2320 $x2344 $x2513)))))
(trans (monotonicity @x2516 (= $x2488 (or $x685 $x827 (or $x631 $x2320 $x2344 $x2513)))) (rewrite (= (or $x685 $x827 (or $x631 $x2320 $x2344 $x2513)) $x2520)) (= $x2488 $x2520)))))))))))))))))))))))))))))))))))))))
))
(let (($x2390 (forall ((var_m3 U) )(! (let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2399 (forall ((var_j U) )(! (let ((?x468 (arr var_j)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 ?x468) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x656 (not (and $x466 (not (>= (+ ?x102 ?x525) 0))))))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x656 $x820)))))))))))))))) :qid k!952))
))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2416 (not (and $x620 $x2399 $x1877 $x637))))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x685 $x827 $x2416)))))))))))))))))))) :qid k!965))
))
(let ((?x2492 (lambda ((var_m3 U) )(let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let (($x2343 (not $x637)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2344 (not $x1877)))
(let ((?x2435 (var_j!1 var_m3)))
(let ((?x2445 (arr ?x2435)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let (($x2450 (= (cast (keyselect KeY_heap var_m3 ?x2445) sort_int) (cast (keyselect KeY_heap ?x457 ?x2445) sort_int))))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x2438 (u2i ?x2435)))
(let (($x2439 (>= ?x2438 0)))
(let (($x2437 (not (instanceof ?x2435 sort_int))))
(let (($x2452 (not (or $x2437 (not (and $x2439 (not (>= (+ ?x2438 ?x525) 0)))) $x2450))))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2320 (not $x620)))
(let (($x2485 (or $x2320 $x2452 $x2344 $x2343)))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2488 (or $x685 $x827 $x2485)))
(let (($x2399 (forall ((var_j U) )(! (let ((?x468 (arr var_j)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 ?x468) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x656 (not (and $x466 (not (>= (+ ?x102 ?x525) 0))))))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x656 $x820)))))))))))))))) :qid k!952))
))
(let (($x2416 (not (and $x620 $x2399 $x1877 $x637))))
(let (($x2409 (or $x685 $x827 $x2416)))
(let ((@x2487 (nnf-neg (refl (~ $x2320 $x2320)) (sk (~ (not $x2399) $x2452)) (refl (~ $x2344 $x2344)) (refl (~ $x2343 $x2343)) (~ $x2416 $x2485))))
(monotonicity (refl (~ $x685 $x685)) (refl (~ $x827 $x827)) @x2487 (~ $x2409 $x2488))))))))))))))))))))))))))))))))))))))
))
(let (($x2182 (forall ((var_m3 U) )(! (let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x862 (forall ((var_j U) )(! (let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x563 (u2i ?x562)))
(let ((?x840 (* (- 1) ?x563)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 (arr var_j)) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 (arr var_j)) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x820 (not (and $x466 (not (>= (+ ?x102 ?x840) 0)))))))))))))))) :qid k!952))
))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x265 (KeY_length var_m3)))
(let (($x817 (= ?x265 ?x562)))
(let (($x2187 (not (and $x817 $x862 $x1877 $x637))))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x685 $x827 $x2187)))))))))))))))))) :qid k!965))
))
(let ((?x2387 (lambda ((var_m3 U) )(let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2399 (forall ((var_j U) )(! (let ((?x468 (arr var_j)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 ?x468) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 ?x468) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x521 (u2i ?x520)))
(let ((?x525 (* (- 1) ?x521)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let (($x656 (not (and $x466 (not (>= (+ ?x102 ?x525) 0))))))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x656 $x820)))))))))))))))) :qid k!952))
))
(let ((?x450 (keyselect KeY_heap KeY_self_23 |field_java.math.BigInteger::$mag|)))
(let ((?x451 (cast ?x450 |sort_int[]|)))
(let ((?x520 (KeY_length ?x451)))
(let ((?x265 (KeY_length var_m3)))
(let (($x620 (= ?x265 ?x520)))
(let (($x2416 (not (and $x620 $x2399 $x1877 $x637))))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2409 (or $x685 $x827 $x2416)))
(let (($x862 (forall ((var_j U) )(! (let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x563 (u2i ?x562)))
(let ((?x840 (* (- 1) ?x563)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 (arr var_j)) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 (arr var_j)) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x820 (not (and $x466 (not (>= (+ ?x102 ?x840) 0)))))))))))))))) :qid k!952))
))
(let ((?x562 (KeY_length ?x457)))
(let (($x817 (= ?x265 ?x562)))
(let (($x2187 (not (and $x817 $x862 $x1877 $x637))))
(let (($x2188 (or $x685 $x827 $x2187)))
(let (($x2411 (= $x2188 $x2409)))
(trans (monotonicity (rewrite (= $x2187 $x2416)) $x2411) (rewrite (= $x2409 $x2409)) $x2411))))))))))))))))))))))))))))
))
(let (($x2029 (forall ((var_m3 U) )(! (let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x2016 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let ((?x1713 (* (- 1) ?x102)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x563 (u2i ?x562)))
(let (($x466 (>= ?x102 0)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 (arr var_j)) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 (arr var_j)) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x820 (not (and $x466 (not (<= (+ ?x563 ?x1713) 0)))))))))))))))) :qid k!952))
))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x265 (KeY_length var_m3)))
(let (($x817 (= ?x265 ?x562)))
(let (($x2021 (not (and $x817 $x2016 $x1877 $x637))))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(or $x685 $x827 $x2021)))))))))))))))))) :qid k!965))
))
(let ((?x2183 (lambda ((var_m3 U) )(let (($x631 (= var_m3 null)))
(let (($x637 (not $x631)))
(let ((?x493 (b2u true)))
(let ((?x45 (typeof TRUE)))
(let ((?x632 (keyselect KeY_heap var_m3 |KeY_java.lang.Object::<created>|)))
(let (($x1877 (or $x631 (= (cast ?x632 ?x45) ?x493))))
(let (($x862 (forall ((var_j U) )(! (let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x563 (u2i ?x562)))
(let ((?x840 (* (- 1) ?x563)))
(let ((?x102 (u2i var_j)))
(let (($x466 (>= ?x102 0)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 (arr var_j)) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 (arr var_j)) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x820 (not (and $x466 (not (>= (+ ?x102 ?x840) 0)))))))))))))))) :qid k!952))
))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x265 (KeY_length var_m3)))
(let (($x817 (= ?x265 ?x562)))
(let (($x2187 (not (and $x817 $x862 $x1877 $x637))))
(let ((?x639 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap var_m3)))
(let ((?x459 (|KeY_java.math.BigInteger::calcMagSum| KeY_heap ?x457)))
(let (($x827 (= ?x459 ?x639)))
(let (($x210 (instanceof var_m3 |sort_int[]|)))
(let (($x685 (not $x210)))
(let (($x2188 (or $x685 $x827 $x2187)))
(let (($x2016 (forall ((var_j U) )(! (let ((?x102 (u2i var_j)))
(let ((?x1713 (* (- 1) ?x102)))
(let ((?x457 (cast (keyselect KeY_heap KeY_val |field_java.math.BigInteger::$mag|) |sort_int[]|)))
(let ((?x562 (KeY_length ?x457)))
(let ((?x563 (u2i ?x562)))
(let (($x466 (>= ?x102 0)))
(let ((?x470 (cast (keyselect KeY_heap ?x457 (arr var_j)) sort_int)))
(let ((?x625 (cast (keyselect KeY_heap var_m3 (arr var_j)) sort_int)))
(let (($x820 (= ?x625 ?x470)))
(let (($x118 (instanceof var_j sort_int)))
(let (($x122 (not $x118)))
(or $x122 $x820 (not (and $x466 (not (<= (+ ?x563 ?x1713) 0)))))))))))))))) :qid k!952))
))
(let (($x2021 (not (and $x817 $x2016 $x1877 $x637))))
(let (($x1976 (or $x685 $x827 $x2021)))
(let (($x2191 (= $x1976 $x2188)))
(trans (monotonicity (rewrite (= $x2021 $x2187)) $x2191) (rewrite (= $x2188 $x2188)) $x2191))))))))))))))))))))))))
))
(let ((@x2192 (mp (asserted $x2029) (quant-intro (proof-bind ?x2183) (= $x2029 $x2182)) $x2182)))
(let ((@x2496 (mp~ (mp @x2192 (quant-intro (proof-bind ?x2387) (= $x2182 $x2390)) $x2390) (nnf-pos (proof-bind ?x2492) (~ $x2390 $x2491)) $x2491)))
(let ((@x2698 (mp (mp @x2496 (quant-intro (proof-bind ?x2526) (= $x2491 $x2525)) $x2525) (quant-intro (proof-bind ?x2694) (= $x2525 $x2693)) $x2693)))
(let (($x4382 (not $x4381)))
(let (($x4351 (not $x4344)))
(let (($x4436 (not $x3235)))
(let (($x4437 (or $x4436 $x1058 $x4351 $x4382 $x4396 $x4415)))
(let (($x4397 (= ?x520 ?x520)))
(let (($x4398 (not $x4397)))
(let (($x4416 (or $x1058 $x4351 $x4396 $x4398 $x4382 $x4415)))
(let (($x4438 (or $x4436 $x4416)))
(let (($x4431 (or $x1058 $x4351 $x4382 $x4396 $x4415)))
(let (($x4426 (or $x1058 $x4351 $x4396 false $x4382 $x4415)))
(let ((@x4425 (trans (monotonicity (rewrite (= $x4397 true)) (= $x4398 (not true))) (rewrite (= (not true) false)) (= $x4398 false))))
(let ((@x4435 (trans (monotonicity @x4425 (rewrite (= $x4415 $x4415)) (= $x4416 $x4426)) (rewrite (= $x4426 $x4431)) (= $x4416 $x4431))))
(let ((@x4446 (trans (monotonicity @x4435 (= $x4438 (or $x4436 $x4431))) (rewrite (= (or $x4436 $x4431) $x4437)) (= $x4438 $x4437))))
(let ((@x5949 (unit-resolution (mp ((_ quant-inst (cast ?x450 |sort_int[]|)) $x4438) @x4446 $x4437) (mp @x2698 (quant-intro (proof-bind ?x3237) (= $x2693 $x3235)) $x3235) @x1060 (unit-resolution (def-axiom (or $x4381 (not $x1864))) (asserted $x1864) $x4381) (or $x4351 $x4396 $x4415))))
(let ((@x5945 (unit-resolution @x5949 (unit-resolution @x5906 (lemma @x6756 $x6750) $x4344) (lemma @x6324 $x4414) $x4396)))
(let (($x610 (>= (+ ?x602 (* (- 1) ?x603)) 0)))
(let (($x615 (not $x610)))
(let ((@x2154 (mp (asserted (not (<= (+ ?x603 (* (- 1) ?x602)) 0))) (rewrite (= (not (<= (+ ?x603 (* (- 1) ?x602)) 0)) $x615)) $x615)))
(unit-resolution ((_ th-lemma arith triangle-eq) (or (not $x5947) $x610)) @x2154 (symm (monotonicity (symm @x5945 (= ?x453 ?x459)) (= ?x603 ?x602)) $x5947) false))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))

