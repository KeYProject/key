// This file is part of KeY - Integrated Deductive Software Design
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General
// Public License. See LICENSE.TXT for details.
//

\schemaVariables {
	\term int n;
	\term Seq s;
	\term RegEx a, b;
}

\rules(wdChecks:on) {
	wd_RegEx {

		\find (
			wd( regEx(s) )
		)
		\replacewith (
			wd(s)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Opt {

		\find (
			wd( opt(a) )
		)
		\replacewith (
			wd(a)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Alt {

		\find (
			wd( alt(a, b) )
		)
		\replacewith (
			wd(a) & wd(b)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Concat {

		\find (
			wd( regExConcat(a, b) )
		)
		\replacewith (
			wd(a) & wd(b)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Repeat {

		\find (
			wd( repeat(a, n) )
		)
		\replacewith (
			wd(a) & leq(0, n)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Star {

		\find (
			wd( repeatStar(a) )
		)
		\replacewith (
			wd(a)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Plus {

		\find (
			wd( repeatPlus(a) )
		)
		\replacewith (
			wd(a)
		)
		\heuristics ( simplify )
	};

	wd_RegEx_Pred_Match {

		\find (
			WD( match(a, s) )
		)
		\replacewith (
			wd(a) & wd(s)
		)
		\heuristics ( simplify )
	};
}
