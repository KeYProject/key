// This file is part of KeY - Intgrated Deductive Software Design
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 

\include ldt;

// Please note that the order in which these files are read does matter in
// order to prove derived taclets sound in KeY (you may only use taclets which
// appear before the one you are about to prove). Do not change this order
// without a good reason.

// general propositional and first-order rules
\include propRule;
\include firstOrderRules;
\include ifThenElseRules;
\include formulaNormalisationRules;
\include updateRules;

// integer rules
\include integerRulesCommon;
\include intRulesIgnoringOverflow,
         intRules,
         intRulesArith;
\include integerSimplificationRules;
\include intDiv;
\include bsum, bprod;
\include binaryAxioms, binaryLemmas;

// other theories
\include genericRules; // must go before heap, seq
\include booleanRules;
\include epsilon;
\include locSetsRules; // must go before heap
\include heapRules;
\include permissionRules;
\include reachRules;
\include seqCoreRules, seqRules;
\include seqPerm;
\include seqPerm2;

// rules for Java (order does not matter, since not provable anyway)
\include javaRules;
\include loopRules;
\include activeUse;
\include instanceAllocation;
\include java5;
\include integerAssignment2UpdateRules;
\include bigint;
\include adtProgramDecompositionRules;


// wellfounded relation
\include precRules;

// rules for strings and regular expressions
\include charListRules;
\include regExTheory; //TODO: fix rules and uncomment

// rules for information flow verification
\include seqEq;
\include infFlow;

// size rules for maps
\include mapSize;

// rules for well-definedness
\include wd;

// rules for invariant handling
\include loopInvariantRules;

// rules for for-loops
\include forLoopRules;

// rules for completion scopes
\include execRules;

// rules for loop scope invariant rules
\include loopScopeRules;
