\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 30 11:43:54 CET 2018
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_COMPLETION
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_RESTRICTED
[Strategy]MaximumNumberOfAutomaticApplications=2000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_ON
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_OFF
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Fri Nov 30 11:43:54 CET 2018
name=polyMod_ltdivDenom
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "4ff5d147d4219252f3e6efa46ebc4c1b9b97b6c2"))

(autoModeTime "659")

(branch "dummy ID"
(rule "notRight" (formula "1") (newnames "f_divNum,f_divDenom"))
(rule "eqClose" (formula "1") (term "0") (userinteraction))
(rule "concrete_impl_1" (formula "1") (userinteraction))
(rule "notLeft" (formula "1") (userinteraction))
(rule "andRight" (formula "1") (userinteraction))
(branch "Case 1"
   (rule "impRight" (formula "1") (userinteraction))
   (rule "mod_axiom" (formula "2") (term "0") (userinteraction))
   (rule "times_minus_one_1" (formula "2") (term "0,1,0") (userinteraction))
   (rule "div_axiom" (formula "2") (term "0,0,1,0") (inst "quotient=quotient_0") (userinteraction))
   (rule "cut_direct" (formula "1") (term "0") (userinteraction))
   (branch "CUT: f_divDenom = 0 TRUE"
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "polySimp_elimNeg" (formula "3") (term "0,1,0"))
      (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
      (rule "inEqSimp_ltRight" (formula "3"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "inEqSimp_gtToGeq" (formula "3"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "applyEqRigid" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "applyEq" (formula "3") (term "1,0") (ifseqformula "2"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "qeq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
   (branch "CUT: f_divDenom = 0 FALSE"
      (rule "concrete_or_2" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "cut_direct" (formula "3") (term "0") (userinteraction))
      (branch "CUT: f_divDenom >= 0 TRUE"
         (rule "ifthenelse_true_for" (formula "4") (userinteraction))
         (rule "applyEqRigid" (formula "7") (term "0,0,1,0") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "1") (userinteraction))
         (rule "times_minus_one_2" (formula "3") (term "1,1") (userinteraction))
         (rule "cut" (inst "cutFormula=gt(mul(add(quotient_0, Z(1(#))), f_divDenom), f_divNum)") (userinteraction))
         (branch "CUT: (quotient_0 + 1) * f_divDenom > f_divNum TRUE"
            (rule "hide_left" (formula "4") (userinteraction))
            (rule "cut" (inst "cutFormula=geq(add(f_divNum, mul(neg(quotient_0), f_divDenom)),
    f_divDenom)") (userinteraction))
            (branch "CUT: f_divNum + -quotient_0 * f_divDenom >= f_divDenom TRUE"
               (rule "hide_right" (formula "7") (userinteraction))
               (rule "polySimp_elimNeg" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "polySimp_mulComm1" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "inEqSimp_gtToGeq" (formula "5"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "inEqSimp_gtToGeq" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "5"))
               (rule "mul_literals" (formula "5") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1"))
               (rule "polySimp_rightDist" (formula "2") (term "1"))
               (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
               (rule "polySimp_elimOne" (formula "2") (term "1,1"))
               (rule "polySimp_rightDist" (formula "2") (term "0,1"))
               (rule "mul_literals" (formula "2") (term "0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
               (rule "inEqSimp_contradEq7" (formula "6") (ifseqformula "5"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_and_2" (formula "6"))
               (rule "false_right" (formula "6"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: f_divNum + -quotient_0 * f_divDenom >= f_divDenom FALSE"
               (rule "polySimp_elimNeg" (formula "5") (term "0,1,0"))
               (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0"))
               (rule "polySimp_mulComm1" (formula "5") (term "1,0"))
               (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_geqRight" (formula "5"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_ltRight" (formula "7"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "6"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "inEqSimp_gtToGeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "polySimp_addComm1" (formula "3") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_contradEq7" (formula "6") (ifseqformula "5"))
               (rule "times_zero_1" (formula "6") (term "1,0,0"))
               (rule "add_zero_right" (formula "6") (term "0,0"))
               (rule "leq_literals" (formula "6") (term "0"))
               (rule "concrete_and_2" (formula "6"))
               (rule "false_right" (formula "6"))
               (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_homoInEq1" (formula "2"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "1,0"))
               (rule "polySimp_mulAssoc" (formula "2") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0,1,0"))
               (rule "polySimp_elimOne" (formula "2") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "2") (term "0"))
               (rule "polySimp_addComm1" (formula "2") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "polySimp_pullOutFactor2b" (formula "2") (term "0"))
               (rule "add_literals" (formula "2") (term "1,1,0"))
               (rule "times_zero_1" (formula "2") (term "1,0"))
               (rule "add_zero_right" (formula "2") (term "0"))
               (rule "leq_literals" (formula "2"))
               (rule "closeFalse" (formula "2"))
            )
         )
         (branch "CUT: (quotient_0 + 1) * f_divDenom > f_divNum FALSE"
            (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
            (rule "polySimp_elimNeg" (formula "3") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "5") (term "0"))
            (rule "polySimp_mulComm0" (formula "3") (term "0"))
            (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "3") (term "1"))
            (rule "polySimp_addComm0" (formula "5") (term "1,0"))
            (rule "polySimp_rightDist" (formula "5") (term "0"))
            (rule "polySimp_elimOne" (formula "5") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
            (rule "inEqSimp_ltRight" (formula "7"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "inEqSimp_gtToGeq" (formula "5"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "inEqSimp_gtRight" (formula "6"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "6"))
            (rule "mul_literals" (formula "6") (term "1"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradEq7" (formula "6") (ifseqformula "5"))
            (rule "times_zero_1" (formula "6") (term "1,0,0"))
            (rule "add_zero_right" (formula "6") (term "0,0"))
            (rule "leq_literals" (formula "6") (term "0"))
            (rule "concrete_and_2" (formula "6"))
            (rule "false_right" (formula "6"))
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
            (rule "polySimp_rightDist" (formula "4") (term "1,0"))
            (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
            (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "4") (term "0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "polySimp_pullOutFactor2b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
      (branch "CUT: f_divDenom >= 0 FALSE"
         (rule "ifthenelse_false_for" (formula "3"))
         (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0"))
         (rule "polySimp_mulComm0" (formula "3") (term "0"))
         (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
         (rule "polySimp_addComm1" (formula "3") (term "1"))
         (rule "inEqSimp_geqRight" (formula "5"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_zero_right" (formula "1") (term "0,0"))
         (rule "inEqSimp_ltRight" (formula "7"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "6"))
         (rule "times_zero_1" (formula "6") (term "1,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0"))
         (rule "applyEq" (formula "1") (term "0,0,1,0") (ifseqformula "3"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "2"))
         (rule "mul_literals" (formula "2") (term "1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_contradEq7" (formula "7") (ifseqformula "6"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "leq_literals" (formula "7") (term "0"))
         (rule "concrete_and_2" (formula "7"))
         (rule "false_right" (formula "7"))
         (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
         (rule "qeq_literals" (formula "6") (term "0"))
         (rule "concrete_and_2" (formula "6"))
         (rule "closeFalse" (formula "6"))
      )
   )
)
(branch "Case 2"
   (rule "impRight" (formula "1") (userinteraction))
   (rule "mod_axiom" (formula "2") (term "0") (userinteraction))
   (rule "times_minus_one_1" (formula "2") (term "0,1,0") (userinteraction))
   (rule "div_axiom" (formula "2") (term "0,0,1,0") (inst "quotient=quotient_0") (userinteraction))
   (rule "cut_direct" (formula "1") (term "0") (userinteraction))
   (branch "CUT: f_divDenom = 0 TRUE"
      (rule "concrete_or_1" (formula "2"))
      (rule "true_left" (formula "2"))
      (rule "polySimp_elimNeg" (formula "3") (term "1"))
      (rule "polySimp_elimNeg" (formula "3") (term "0,1,0"))
      (rule "polySimp_mulComm1" (formula "3") (term "1,0"))
      (rule "inEqSimp_ltRight" (formula "3"))
      (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
      (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
      (rule "polySimp_elimOne" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "inEqSimp_ltToLeq" (formula "3"))
      (rule "times_zero_1" (formula "3") (term "1,0,0"))
      (rule "add_zero_right" (formula "3") (term "0,0"))
      (rule "applyEq" (formula "1") (term "1,0,1,0") (ifseqformula "2"))
      (rule "polySimp_mulLiterals" (formula "1") (term "1,0"))
      (rule "times_zero_1" (formula "1") (term "1,0"))
      (rule "add_zero_right" (formula "1") (term "0"))
      (rule "applyEqRigid" (formula "3") (term "1,0") (ifseqformula "2"))
      (rule "add_zero_right" (formula "3") (term "0"))
      (rule "leq_literals" (formula "3"))
      (rule "closeFalse" (formula "3"))
   )
   (branch "CUT: f_divDenom = 0 FALSE"
      (rule "concrete_or_2" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "andLeft" (formula "1") (userinteraction))
      (rule "cut_direct" (formula "3") (term "0") (userinteraction))
      (branch "CUT: f_divDenom >= 0 TRUE"
         (rule "ifthenelse_true_for" (formula "4"))
         (rule "polySimp_elimNeg" (formula "7") (term "1"))
         (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
         (rule "polySimp_mulComm0" (formula "2") (term "0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,1"))
         (rule "polySimp_mulComm0" (formula "4") (term "0"))
         (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
         (rule "polySimp_addComm1" (formula "4") (term "1"))
         (rule "inEqSimp_ltRight" (formula "7"))
         (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
         (rule "polySimp_elimOne" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "6"))
         (rule "times_zero_1" (formula "6") (term "1,0,0"))
         (rule "add_zero_right" (formula "6") (term "0,0"))
         (rule "applyEqRigid" (formula "1") (term "0,0,1,0") (ifseqformula "2"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "6"))
         (rule "mul_literals" (formula "6") (term "1"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_contradEq3" (formula "7") (ifseqformula "6"))
         (rule "times_zero_1" (formula "7") (term "1,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0"))
         (rule "qeq_literals" (formula "7") (term "0"))
         (rule "concrete_and_2" (formula "7"))
         (rule "false_right" (formula "7"))
         (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "6"))
         (rule "qeq_literals" (formula "4") (term "0"))
         (rule "concrete_and_2" (formula "4"))
         (rule "closeFalse" (formula "4"))
      )
      (branch "CUT: f_divDenom >= 0 FALSE"
         (rule "ifthenelse_false_for" (formula "3") (userinteraction))
         (rule "applyEqRigid" (formula "7") (term "0,0,1,0") (ifseqformula "1") (userinteraction))
         (rule "hide_left" (formula "1") (userinteraction))
         (rule "cut" (inst "cutFormula=gt(mul(sub(quotient_0, Z(1(#))), f_divDenom), f_divNum)") (userinteraction))
         (branch "CUT: (quotient_0 - 1) * f_divDenom > f_divNum TRUE"
            (rule "hide_left" (formula "3") (userinteraction))
            (rule "cut" (inst "cutFormula=geq(add(f_divNum, mul(neg(quotient_0), f_divDenom)),
    neg(f_divDenom))") (userinteraction))
            (branch "CUT: f_divNum + -quotient_0 * f_divDenom >= -f_divDenom TRUE"
               (rule "polySimp_elimNeg" (formula "1") (term "0,1,0"))
               (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
               (rule "polySimp_elimNeg" (formula "7") (term "1"))
               (rule "polySimp_elimNeg" (formula "1") (term "1"))
               (rule "polySimp_elimSub" (formula "2") (term "0,0"))
               (rule "mul_literals" (formula "2") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0"))
               (rule "polySimp_mulComm1" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "2") (term "1,0"))
               (rule "polySimp_rightDist" (formula "2") (term "0"))
               (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
               (rule "inEqSimp_geqRight" (formula "5"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "inEqSimp_ltRight" (formula "6"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1,0"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "2"))
               (rule "mul_literals" (formula "2") (term "1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_mulAssoc" (formula "3") (term "0,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,1"))
               (rule "polySimp_elimOne" (formula "3") (term "0,1"))
               (rule "inEqSimp_contradEq3" (formula "5") (ifseqformula "2"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "qeq_literals" (formula "5") (term "0"))
               (rule "concrete_and_2" (formula "5"))
               (rule "false_right" (formula "5"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "CUT: f_divNum + -quotient_0 * f_divDenom >= -f_divDenom FALSE"
               (rule "polySimp_elimNeg" (formula "7") (term "1"))
               (rule "polySimp_elimNeg" (formula "4") (term "0,1,0"))
               (rule "polySimp_elimSub" (formula "1") (term "0,0"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimNeg" (formula "4") (term "1"))
               (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "2") (term "0"))
               (rule "polySimp_mulComm1" (formula "4") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0"))
               (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "4") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_geqRight" (formula "5"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "inEqSimp_geqRight" (formula "4"))
               (rule "polySimp_mulAssoc" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_ltRight" (formula "6"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_addAssoc" (formula "4") (term "0"))
               (rule "polySimp_addComm1" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1"))
               (rule "polySimp_rightDist" (formula "4") (term "1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,1"))
               (rule "polySimp_rightDist" (formula "4") (term "0,1"))
               (rule "mul_literals" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulLiterals" (formula "4") (term "1,0,1"))
               (rule "polySimp_elimOne" (formula "4") (term "1,0,1"))
               (rule "inEqSimp_contradEq3" (formula "5") (ifseqformula "3"))
               (rule "times_zero_1" (formula "5") (term "1,0,0"))
               (rule "add_zero_right" (formula "5") (term "0,0"))
               (rule "qeq_literals" (formula "5") (term "0"))
               (rule "concrete_and_2" (formula "5"))
               (rule "false_right" (formula "5"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "polySimp_addComm1" (formula "1") (term "0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
         )
         (branch "CUT: (quotient_0 - 1) * f_divDenom > f_divNum FALSE"
            (rule "polySimp_elimNeg" (formula "7") (term "0,1,0"))
            (rule "polySimp_elimNeg" (formula "7") (term "1"))
            (rule "polySimp_elimSub" (formula "4") (term "0,0"))
            (rule "mul_literals" (formula "4") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0"))
            (rule "polySimp_mulComm0" (formula "2") (term "0"))
            (rule "polySimp_mulComm1" (formula "7") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "4") (term "0"))
            (rule "polySimp_mulComm0" (formula "7") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "2") (term "1"))
            (rule "polySimp_addComm0" (formula "4") (term "1,0"))
            (rule "polySimp_rightDist" (formula "4") (term "0"))
            (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
            (rule "inEqSimp_geqRight" (formula "5"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_ltRight" (formula "7"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "5"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "inEqSimp_gtRight" (formula "5"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm0" (formula "1") (term "0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "3"))
            (rule "mul_literals" (formula "3") (term "1"))
            (rule "inEqSimp_sepNegMonomial1" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1"))
            (rule "inEqSimp_contradEq3" (formula "5") (ifseqformula "2"))
            (rule "times_zero_1" (formula "5") (term "1,0,0"))
            (rule "add_zero_right" (formula "5") (term "0,0"))
            (rule "qeq_literals" (formula "5") (term "0"))
            (rule "concrete_and_2" (formula "5"))
            (rule "false_right" (formula "5"))
            (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "4"))
            (rule "andLeft" (formula "1"))
            (rule "inEqSimp_homoInEq1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "polySimp_addComm1" (formula "1") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "leq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
   )
)
)

}
