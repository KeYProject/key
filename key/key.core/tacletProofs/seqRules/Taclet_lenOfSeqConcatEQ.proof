\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Mon Dec 16 15:45:54 MET 2013
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]RETREAT_MODE_OPTIONS_KEY=RETREAT_MODE_NONE
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_EXPAND
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=500
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=Strings-Strings\\:on , reach-reach\\:on , JavaCard-JavaCard\\:on , assertions-assertions\\:on , bigint-bigint\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , initialisation-initialisation\\:disableStaticInitialisation , modelFields-modelFields\\:showSatisfiability , sequences-sequences\\:on , integerSimplificationRules-integerSimplificationRules\\:full , runtimeExceptions-runtimeExceptions\\:ban , optimisedSelectRules-optimisedSelectRules\\:on
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\proofObligation "#Proof Obligation Settings
#Mon Dec 16 15:45:54 MET 2013
name=lenOfSeqConcatEQ
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "pschmitt" ) (keyVersion "cd4d244ec17586d37f1e609c330df9c3940650fc"))

(autoModeTime "68")

(branch "dummy ID"
(rule "impRight" (formula "1") (userinteraction))
(rule "notRight" (formula "2") (userinteraction))
(rule "notLeft" (formula "2") (userinteraction))
(rule "eqSymm" (formula "1") (userinteraction))
(rule "applyEqRigid" (formula "2") (term "0,0") (ifseqformula "1") (userinteraction))
(rule "defOfSeqConcat" (formula "2") (term "0,0") (inst "uSub=uSub") (userinteraction))
(rule "eqSymm" (formula "1"))
(rule "polySimp_elimSub" (formula "2") (term "1,2,2,0,0"))
(rule "inEqSimp_ltToLeq" (formula "2") (term "0,2,0,0"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,2,0,0"))
(rule "polySimp_addComm0" (formula "2") (term "1,2,2,0,0"))
(rule "inEqSimp_sepPosMonomial0" (formula "2") (term "0,2,0,0"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0,2,0,0"))
(rule "polySimp_rightDist" (formula "2") (term "1,0,2,0,0"))
(rule "polySimp_mulLiterals" (formula "2") (term "1,1,0,2,0,0"))
(rule "mul_literals" (formula "2") (term "0,1,0,2,0,0"))
(rule "polySimp_elimOne" (formula "2") (term "1,1,0,2,0,0"))
(rule "lenOfSeqDef" (formula "2") (term "0"))
(rule "polySimp_elimSub" (formula "2") (term "1,0"))
(rule "mul_literals" (formula "2") (term "1,1,0"))
(rule "add_zero_right" (formula "2") (term "1,0"))
(builtin "One Step Simplification" (formula "2"))
(rule "orRight" (formula "2"))
(rule "polySimp_homoEq" (formula "3"))
(rule "times_zero_2" (formula "3") (term "1,0"))
(rule "add_zero_right" (formula "3") (term "0"))
(rule "inEqSimp_ltRight" (formula "2"))
(rule "add_zero_right" (formula "1") (term "0"))
(rule "polySimp_rightDist" (formula "1") (term "0"))
(rule "polySimp_mulComm0" (formula "1") (term "0,0"))
(rule "polySimp_sepPosMonomial" (formula "3"))
(rule "inEqSimp_sepNegMonomial1" (formula "1"))
(rule "polySimp_mulLiterals" (formula "1") (term "0"))
(rule "polySimp_elimOne" (formula "1") (term "0"))
(rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "3"))
(rule "inEqSimp_contradEq3" (formula "3") (ifseqformula "1"))
(rule "polySimp_mulAssoc" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0"))
(rule "polySimp_mulLiterals" (formula "3") (term "1,0,0"))
(rule "polySimp_elimOne" (formula "3") (term "1,0,0"))
(rule "polySimp_pullOutFactor2b" (formula "3") (term "0,0"))
(rule "add_literals" (formula "3") (term "1,1,0,0"))
(rule "times_zero_1" (formula "3") (term "1,0,0"))
(rule "add_literals" (formula "3") (term "0,0"))
(rule "qeq_literals" (formula "3") (term "0"))
(builtin "One Step Simplification" (formula "3"))
(rule "false_right" (formula "3"))
(rule "equalityToSeqGetAndSeqLenLeft" (formula "2") (inst "iv=iv"))
(rule "andLeft" (formula "2"))
(rule "inEqSimp_ltToLeq" (formula "3") (term "1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
(rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
(rule "lenOfSeqConcat" (formula "2") (term "0"))
(rule "polySimp_homoEq" (formula "2"))
(rule "polySimp_mulComm0" (formula "2") (term "1,0"))
(rule "polySimp_rightDist" (formula "2") (term "1,0"))
(rule "polySimp_mulComm0" (formula "2") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "2") (term "0"))
(rule "lenOfSeqConcat" (formula "3") (term "0,1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
(rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
(rule "polySimp_mulComm0" (formula "3") (term "0,1,0,0,1,0,0"))
(rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
(rule "applyEq" (formula "3") (term "0,0,1,0") (ifseqformula "4"))
(builtin "One Step Simplification" (formula "3"))
(rule "true_left" (formula "3"))
(rule "polySimp_sepNegMonomial" (formula "2"))
(rule "polySimp_mulLiterals" (formula "2") (term "0"))
(rule "polySimp_elimOne" (formula "2") (term "0"))
(rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
(rule "inEqSimp_homoInEq0" (formula "1"))
(rule "polySimp_mulComm0" (formula "1") (term "1,0"))
(rule "polySimp_rightDist" (formula "1") (term "1,0"))
(rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
(rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
(rule "polySimp_mulComm0" (formula "1") (term "0,1,0"))
(rule "polySimp_addAssoc" (formula "1") (term "0"))
(rule "polySimp_addComm1" (formula "1") (term "0,0"))
(rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
(rule "add_literals" (formula "1") (term "1,1,0"))
(rule "times_zero_1" (formula "1") (term "1,0"))
(rule "add_zero_right" (formula "1") (term "0"))
(rule "inEqSimp_sepNegMonomial1" (formula "1"))
(rule "polySimp_mulLiterals" (formula "1") (term "0"))
(rule "polySimp_elimOne" (formula "1") (term "0"))
(rule "lenNonNegative" (formula "2") (term "0,1,1"))
(rule "inEqSimp_commuteLeq" (formula "2"))
(rule "lenNonNegative" (formula "3") (term "0,1"))
(rule "inEqSimp_commuteLeq" (formula "3"))
(rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
(rule "qeq_literals" (formula "3") (term "0"))
(builtin "One Step Simplification" (formula "3"))
(rule "closeFalse" (formula "3"))
)

}
