\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Mar 04 11:08:57 CET 2022
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_OFF
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=JavaCard-JavaCard\\:off , Strings-Strings\\:on , assertions-assertions\\:safe , bigint-bigint\\:on , floatRules-floatRules\\:strictfpOnly , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , integerSimplificationRules-integerSimplificationRules\\:full , javaLoopTreatment-javaLoopTreatment\\:efficient , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , methodExpansion-methodExpansion\\:modularOnly , modelFields-modelFields\\:treatAsAxiom , moreSeqRules-moreSeqRules\\:on , permissions-permissions\\:off , programRules-programRules\\:Java , reach-reach\\:on , runtimeExceptions-runtimeExceptions\\:ban , sequences-sequences\\:on , wdChecks-wdChecks\\:off , wdOperator-wdOperator\\:L
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_RESTRICTED
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\proofObligation "#Proof Obligation Settings
#Fri Mar 04 11:08:57 CET 2022
name=seqPermTrans
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "mattias" ) (keyVersion "6e9a3bc895080585635c1442cd178f3c0b6e17ca"))
(keyLog "1" (keyUser "mattias" ) (keyVersion "6e9a3bc895080585635c1442cd178f3c0b6e17ca"))

(autoModeTime "19025")

(branch "dummy ID"
(rule "impRight" (formula "1") (newnames "f_s1,f_s3,f_s2"))
(rule "notLeft" (formula "1"))
(rule "orRight" (formula "2"))
(rule "notRight" (formula "2"))
(rule "notRight" (formula "3"))
(rule "seqPermDef" (formula "3") (inst "s=s") (inst "iv=iv") (userinteraction))
(rule "seqPermDef" (formula "2") (inst "s=s") (inst "iv=iv") (userinteraction))
(rule "seqPermDef" (formula "1") (inst "s=s") (inst "iv=iv") (userinteraction))
(rule "andLeft" (formula "1") (userinteraction))
(rule "andLeft" (formula "3") (userinteraction))
(rule "andRight" (formula "5") (userinteraction))
(branch "Case 1"
   (rule "exLeft" (formula "2") (inst "sk=s_0"))
   (rule "andLeft" (formula "2"))
   (rule "andLeft" (formula "2"))
   (rule "exLeft" (formula "6") (inst "sk=s_1"))
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "eqSymm" (formula "1"))
   (rule "eqSymm" (formula "5"))
   (rule "eqSymm" (formula "9"))
   (rule "eqSymm" (formula "4") (term "1,0"))
   (rule "eqSymm" (formula "8") (term "1,0"))
   (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
   (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "1"))
   (rule "close" (formula "9") (ifseqformula "5"))
)
(branch "Case 2"
   (rule "exLeft" (formula "2") (inst "sk=s_0") (userinteraction))
   (rule "exLeft" (formula "4") (inst "sk=s_1") (userinteraction))
   (rule "exRightHide" (formula "5") (inst "t=seqDef{int i;}(Z(0(#)),
               seqLen(s_1),
               int::seqGet(s_0, int::seqGet(s_1, i)))") (userinteraction))
   (rule "andRight" (formula "5") (userinteraction))
   (branch "Case 1"
      (rule "andRight" (formula "5") (userinteraction))
      (branch "Case 1"
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "6"))
         (rule "eqSymm" (formula "5"))
         (rule "eqSymm" (formula "1"))
         (rule "eqSymm" (formula "4") (term "1,0"))
         (rule "eqSymm" (formula "8") (term "1,0"))
         (rule "lenOfSeqDef" (formula "9") (term "0"))
         (rule "polySimp_elimSub" (formula "9") (term "1,0"))
         (rule "mul_literals" (formula "9") (term "1,1,0"))
         (rule "add_zero_right" (formula "9") (term "1,0"))
         (rule "inEqSimp_ltToLeq" (formula "4") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "8") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "8") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "9") (term "0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "4") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
         (rule "applyEq" (formula "9") (term "0,1,0,0,0") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "9") (term "1,0") (ifseqformula "6"))
          (builtin "One Step Simplification" (formula "9"))
         (rule "orRight" (formula "9"))
         (rule "eqSymm" (formula "10"))
         (rule "inEqSimp_leqRight" (formula "9"))
         (rule "times_zero_1" (formula "1") (term "1,0,0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "polySimp_addAssoc" (formula "1") (term "0"))
         (rule "add_literals" (formula "1") (term "0,0"))
         (rule "add_zero_left" (formula "1") (term "0"))
         (rule "applyEqRigid" (formula "3") (term "1") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
         (rule "applyEq" (formula "2") (term "1") (ifseqformula "6"))
         (rule "applyEqRigid" (formula "5") (term "0,1,0,0,1,0,0") (ifseqformula "3"))
         (rule "inEqSimp_invertInEq1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "times_zero_2" (formula "1") (term "1"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,1,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,1,0,0"))
         (rule "inEqSimp_strengthen0" (formula "1") (ifseqformula "10"))
         (rule "add_literals" (formula "1") (term "1"))
         (rule "inEqSimp_contradEq3" (formula "10") (ifseqformula "1"))
         (rule "times_zero_1" (formula "10") (term "1,0,0"))
         (rule "add_zero_right" (formula "10") (term "0,0"))
         (rule "qeq_literals" (formula "10") (term "0"))
          (builtin "One Step Simplification" (formula "10"))
         (rule "false_right" (formula "10"))
         (rule "nnf_imp2or" (formula "9") (term "0"))
         (rule "nnf_imp2or" (formula "5") (term "0"))
         (rule "nnf_notAnd" (formula "9") (term "0,0"))
         (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
         (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
         (rule "mul_literals" (formula "9") (term "1,0,0,0"))
         (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
         (rule "nnf_notAnd" (formula "5") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "5") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "5") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "5") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "5") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "5") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "5") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "5") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "5") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "5") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "5") (term "0,0,0"))
         (rule "mul_literals" (formula "5") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "5") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "5") (term "0,0,0"))
         (rule "mul_literals" (formula "5") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "9") (term "0"))
         (rule "commute_or_2" (formula "5") (term "0"))
         (rule "commute_or" (formula "9") (term "0,0"))
         (rule "commute_or" (formula "5") (term "0,0"))
         (rule "lenNonNegative" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "3"))
         (rule "applyEq" (formula "3") (term "0") (ifseqformula "4"))
         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "1"))
         (rule "qeq_literals" (formula "3") (term "0"))
          (builtin "One Step Simplification" (formula "3"))
         (rule "closeFalse" (formula "3"))
      )
      (branch "Case 2"
         (rule "seqNPermDefReplace" (formula "5") (inst "iv=iv") (inst "jv=jv") (userinteraction))
         (rule "seqNPermDefReplace" (formula "4") (term "1,0") (inst "iv=iv") (inst "jv=jv") (userinteraction))
         (rule "seqNPermDefReplace" (formula "2") (term "1,0") (inst "iv=iv") (inst "jv=jv") (userinteraction))
         (rule "andLeft" (formula "4"))
         (rule "andLeft" (formula "2"))
         (rule "andLeft" (formula "5"))
         (rule "andLeft" (formula "2"))
         (rule "allRight" (formula "9") (inst "sk=iv_0") (userinteraction))
         (rule "impRight" (formula "9") (userinteraction))
         (rule "instAll" (formula "10") (term "1,1,0") (ifseqformula "4") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "andLeft" (formula "1"))
            (rule "eqSymm" (formula "6") (term "1,0"))
            (rule "eqSymm" (formula "3"))
            (rule "eqSymm" (formula "7"))
            (rule "eqSymm" (formula "10") (term "1,0"))
            (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
             (builtin "One Step Simplification" (formula "11"))
            (rule "lenOfSeqDef" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,1,0,0"))
            (rule "times_zero_2" (formula "12") (term "1,1,1,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "1,1,1,0,0"))
            (rule "getOfSeqDef" (formula "12") (term "0,1,0"))
            (rule "castDel" (formula "12") (term "2,0,1,0"))
            (rule "castDel" (formula "12") (term "1,0,1,0"))
            (rule "add_zero_right" (formula "12") (term "1,1,1,0,1,0"))
            (rule "polySimp_elimSub" (formula "12") (term "1,1,0,0,1,0"))
            (rule "times_zero_2" (formula "12") (term "1,1,1,0,0,1,0"))
            (rule "add_zero_right" (formula "12") (term "1,1,0,0,1,0"))
            (rule "lenOfSeqDef" (formula "2") (term "1"))
            (rule "polySimp_elimSub" (formula "2") (term "1,1"))
            (rule "times_zero_2" (formula "2") (term "1,1,1"))
            (rule "add_zero_right" (formula "2") (term "1,1"))
            (rule "inEqSimp_ltRight" (formula "11"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
            (rule "polySimp_addComm0" (formula "1") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "0,1,1,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,1,1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
            (rule "add_zero_right" (formula "3") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
            (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "2"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "5"))
            (rule "applyEqRigid" (formula "3") (term "1,0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "12") (term "0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "6") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
            (rule "applyEq" (formula "12") (term "1,0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "6") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "5"))
            (rule "applyEq" (formula "4") (term "1") (ifseqformula "8"))
            (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "5"))
            (rule "applyEq" (formula "5") (term "1") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "12") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "6") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
            (rule "applyEq" (formula "6") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
            (rule "applyEq" (formula "7") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0"))
            (rule "polySimp_elimOne" (formula "1") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "12") (term "0,0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0,1,0,0,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "0,0,0,1,0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0,1,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0,1,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0,1,0"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
            (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "nnf_ex2all" (formula "12"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "11") (term "0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_imp2or" (formula "8") (term "0"))
            (rule "nnf_notAnd" (formula "1") (term "0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "nnf_notAnd" (formula "11") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
            (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
            (rule "mul_literals" (formula "11") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "8") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "8") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "8") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "8") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "8") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "8") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "8") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "8") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "8") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "8") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "8") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "0,0,0"))
            (rule "mul_literals" (formula "8") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "8") (term "0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_and_2" (formula "11") (term "0,1,0"))
            (rule "commute_and_2" (formula "7") (term "0,1,0"))
            (rule "commute_or" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "8") (term "0,0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "commute_and" (formula "11") (term "0,0,1,0"))
            (rule "commute_and" (formula "7") (term "0,0,1,0"))
            (rule "lenNonNegative" (formula "10") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "applyEqRigid" (formula "10") (term "0") (ifseqformula "11"))
            (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "2"))
            (rule "times_zero_1" (formula "10") (term "0,0"))
            (rule "add_zero_left" (formula "10") (term "0"))
            (rule "lenNonNegative" (formula "11") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "11"))
            (rule "lenNonNegative" (formula "6") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "6"))
            (rule "applyEqRigid" (formula "6") (term "0") (ifseqformula "7"))
            (rule "lenNonNegative" (formula "5") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "applyEqRigid" (formula "5") (term "0") (ifseqformula "6"))
            (rule "lenNonNegative" (formula "9") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "applyEqRigid" (formula "9") (term "0") (ifseqformula "10"))
            (rule "ifthenelse_to_or_left2" (formula "1") (term "0,0,0"))
            (rule "nnf_notAnd" (formula "1") (term "0,0,0,0,0"))
            (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0,0,0,0"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0,0,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,1,0,0,0,0,0"))
            (rule "add_zero_left" (formula "1") (term "0,0,1,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0,0,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0,0,0"))
            (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0,0,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0,0,0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0,0,0,0"))
            (rule "mul_literals" (formula "1") (term "1,0,0,0,0,0,0"))
            (rule "commute_or" (formula "1") (term "0,0"))
            (rule "commute_or_2" (formula "1") (term "0"))
            (rule "commute_or" (formula "1") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "1") (term "1,1,0"))
            (rule "cnf_rightDist" (formula "1") (term "0"))
            (rule "distr_forallAnd" (formula "1"))
            (rule "andLeft" (formula "1"))
            (rule "commute_or" (formula "2") (term "0"))
            (rule "shift_paren_or" (formula "1") (term "0"))
            (rule "commute_or_2" (formula "1") (term "0,0"))
            (rule "commute_or" (formula "2") (term "0,1,0"))
            (rule "cnf_rightDist" (formula "2") (term "0"))
            (rule "distr_forallAnd" (formula "2"))
            (rule "andLeft" (formula "2"))
            (rule "commute_or_2" (formula "3") (term "0"))
            (rule "shift_paren_or" (formula "2") (term "0"))
            (rule "commute_or_2" (formula "2") (term "0,0"))
            (rule "inEqSimp_or_tautInEq0" (formula "2") (term "0,0,0"))
            (rule "add_zero_right" (formula "2") (term "1,1,0,0,0"))
            (rule "qeq_literals" (formula "2") (term "1,0,0,0"))
             (builtin "One Step Simplification" (formula "2"))
            (rule "true_left" (formula "2"))
            (rule "shift_paren_or" (formula "2") (term "0,0"))
            (rule "commute_or" (formula "2") (term "0,0,0"))
            (rule "shift_paren_or" (formula "1") (term "0,0,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifthenelse_split" (formula "5") (term "0"))
            (branch "f_s1.length >= 1 TRUE"
               (rule "replace_known_left" (formula "2") (term "0,1,1,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "replace_known_left" (formula "1") (term "0,1,1,0,0") (ifseqformula "5"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "6"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
            (branch "f_s1.length >= 1 FALSE"
               (rule "replace_known_right" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "replace_known_right" (formula "2") (term "0,1,1,0,0") (ifseqformula "15"))
                (builtin "One Step Simplification" (formula "2"))
               (rule "inEqSimp_geqRight" (formula "15"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "6"))
               (rule "times_zero_2" (formula "6") (term "1,0"))
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "6"))
               (rule "mul_literals" (formula "6") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "5"))
               (rule "qeq_literals" (formula "6") (term "0"))
                (builtin "One Step Simplification" (formula "6"))
               (rule "closeFalse" (formula "6"))
            )
         )
         (branch "Case 2"
            (rule "exLeft" (formula "1") (inst "sk=jv_0") (userinteraction))
            (rule "instAll" (formula "1") (term "1,0,1") (ifseqformula "9") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch "Case 1"
               (rule "andLeft" (formula "1"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "1"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "10"))
               (rule "eqSymm" (formula "9") (term "1,0"))
               (rule "eqSymm" (formula "6"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "1"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "getOfSeqDef" (formula "15") (term "0,1,0"))
               (rule "castDel" (formula "15") (term "2,0,1,0"))
               (rule "castDel" (formula "15") (term "1,0,1,0"))
               (rule "add_zero_right" (formula "15") (term "1,1,1,0,1,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "15") (term "1,1,1,0,0,1,0"))
               (rule "add_zero_right" (formula "15") (term "1,1,0,0,1,0"))
               (rule "lenOfSeqDef" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_elimSub" (formula "15") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "1,1,1,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "1,1,1,0,0"))
               (rule "lenOfSeqDef" (formula "5") (term "1"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1"))
               (rule "times_zero_2" (formula "5") (term "1,1,1"))
               (rule "add_zero_right" (formula "5") (term "1,1"))
               (rule "inEqSimp_ltRight" (formula "14"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "0,1,1,0,0"))
               (rule "add_zero_right" (formula "15") (term "0,0,1,1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6") (term "0,1"))
               (rule "add_zero_right" (formula "6") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "6"))
               (rule "polySimp_mulComm0" (formula "6") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "6") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0,1,0"))
               (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "6") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "3") (term "0,1,0") (ifseqformula "8"))
               (rule "applyEqRigid" (formula "3") (term "0,1,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "8") (term "1") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
               (rule "applyEq" (formula "15") (term "1,0,1,0,0,1,0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "15") (term "0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "8"))
               (rule "applyEq" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "8"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "6") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0,0,1,0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "0,0,0,1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0,1,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0,1,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0,1,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "6"))
               (rule "polySimp_mulLiterals" (formula "6") (term "0"))
               (rule "polySimp_elimOne" (formula "6") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
               (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
               (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "3"))
               (rule "andLeft" (formula "1"))
               (rule "inEqSimp_homoInEq1" (formula "1"))
               (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "1,1,0"))
               (rule "times_zero_1" (formula "1") (term "1,0"))
               (rule "add_literals" (formula "1") (term "0"))
               (rule "leq_literals" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "Case 2"
               (rule "exLeft" (formula "1") (inst "sk=jv_1") (userinteraction))
               (rule "instEx" (formula "1") (term "1,0,1") (ifseqformula "12") (userinteraction))
               (rule "andRight" (formula "12") (userinteraction))
               (branch "Case 1"
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "3"))
                  (rule "andLeft" (formula "1"))
                  (rule "andLeft" (formula "4"))
                  (rule "eqSymm" (formula "9"))
                  (rule "eqSymm" (formula "16") (term "1,0"))
                  (rule "eqSymm" (formula "12") (term "1,0"))
                  (rule "eqSymm" (formula "13"))
                  (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                   (builtin "One Step Simplification" (formula "17"))
                  (rule "lenOfSeqDef" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,1,0,0"))
                  (rule "getOfSeqDef" (formula "18") (term "0,1,0"))
                  (rule "castDel" (formula "18") (term "1,0,1,0"))
                  (rule "castDel" (formula "18") (term "2,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,1,0,1,0"))
                  (rule "polySimp_elimSub" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "1,1,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "lenOfSeqDef" (formula "8") (term "1"))
                  (rule "polySimp_elimSub" (formula "8") (term "1,1"))
                  (rule "times_zero_2" (formula "8") (term "1,1,1"))
                  (rule "add_zero_right" (formula "8") (term "1,1"))
                  (rule "lenOfSeqDef" (formula "17") (term "1"))
                  (rule "polySimp_elimSub" (formula "17") (term "1,1"))
                  (rule "times_zero_2" (formula "17") (term "1,1,1"))
                  (rule "add_zero_right" (formula "17") (term "1,1"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "5"))
                  (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "0,1,1,0,0"))
                  (rule "add_zero_right" (formula "18") (term "0,0,1,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,1,0,0"))
                  (rule "inEqSimp_ltRight" (formula "17"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9") (term "0,1"))
                  (rule "add_zero_right" (formula "9") (term "0,0,1"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "8"))
                  (rule "inEqSimp_commuteLeq" (formula "2"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_ltToLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "1") (term "0,0,1,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,1,0"))
                  (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0,1,0"))
                  (rule "inEqSimp_ltToLeq" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "9") (term "0"))
                  (rule "applyEqRigid" (formula "9") (term "0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "9") (term "1,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "1") (term "0,1,0,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "6") (term "0,1,0") (ifseqformula "11"))
                  (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "1") (term "1,0,1,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "10") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "11") (term "1") (ifseqformula "14"))
                  (rule "applyEq" (formula "18") (term "0,1,0,0,0,1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "16") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEq" (formula "18") (term "1,0,1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "16") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "18") (term "0,1,0,0,1,0,0,1,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "17") (term "0,1,0,0,1,0,0") (ifseqformula "15"))
                  (rule "applyEqRigid" (formula "6") (term "0,1,0") (ifseqformula "14"))
                  (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0,1,0") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,0,1,0,0,1,0,0,1,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "12") (term "1,0,0,1,0,0,1,0"))
                  (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0,1,0"))
                  (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0,1,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1,0"))
                  (rule "apply_eq_monomials" (formula "12") (term "1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "polySimp_rightDist" (formula "12") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,0,1,0,0,1,0,0"))
                  (rule "polySimp_pullOutFactor0b" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "add_literals" (formula "12") (term "1,1,1,0,0,1,0,0"))
                  (rule "times_zero_1" (formula "12") (term "1,1,0,0,1,0,0"))
                  (rule "add_zero_right" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                  (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "1") (term "0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,0,0,1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "18") (term "0,0,1,0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "0,0,0,1,0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "17") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "6"))
                  (rule "polySimp_mulLiterals" (formula "6") (term "0"))
                  (rule "polySimp_elimOne" (formula "6") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0,1,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                  (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                  (rule "polySimp_elimOne" (formula "9") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                  (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "0,0"))
                  (rule "mul_literals" (formula "9") (term "0,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                  (rule "polySimp_mulComm0" (formula "9") (term "1"))
                  (rule "polySimp_rightDist" (formula "9") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "9") (term "1,1"))
                  (rule "mul_literals" (formula "9") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "9") (term "1,1"))
                  (rule "nnf_ex2all" (formula "19"))
                  (rule "nnf_imp2or" (formula "18") (term "0"))
                  (rule "nnf_imp2or" (formula "19") (term "0"))
                  (rule "nnf_imp2or" (formula "14") (term "0"))
                  (rule "nnf_imp2or" (formula "15") (term "0"))
                  (rule "nnf_notAnd" (formula "1") (term "0"))
                  (rule "nnf_notAnd" (formula "18") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "18") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                  (rule "times_zero_1" (formula "18") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                  (rule "mul_literals" (formula "18") (term "1,0,0,0"))
                  (rule "nnf_notAnd" (formula "19") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                  (rule "mul_literals" (formula "19") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "19") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "19") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "19") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "19") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "19") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "14") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "14") (term "0,0,0"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "0,0,0"))
                  (rule "mul_literals" (formula "14") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "14") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "14") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "15") (term "0,0"))
                  (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0,0,0"))
                  (rule "add_zero_right" (formula "15") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                  (rule "mul_literals" (formula "15") (term "1,0,0,0"))
                  (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "15") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "15") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0"))
                  (rule "nnf_notAnd" (formula "1") (term "0,0"))
                  (rule "inEqSimp_notLeq" (formula "1") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0,1,0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                  (rule "inEqSimp_notGeq" (formula "1") (term "0,0,0"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "0,0,0"))
                  (rule "mul_literals" (formula "1") (term "1,0,0,0"))
                  (rule "commute_or_2" (formula "19") (term "0"))
                  (rule "commute_or_2" (formula "15") (term "0"))
                  (rule "commute_or_2" (formula "1") (term "0"))
                  (rule "commute_and_2" (formula "18") (term "0,1,0"))
                  (rule "commute_and_2" (formula "14") (term "0,1,0"))
                  (rule "commute_or" (formula "19") (term "0,0"))
                  (rule "commute_or" (formula "15") (term "0,0"))
                  (rule "commute_or" (formula "1") (term "0,0"))
                  (rule "lenNonNegative" (formula "17") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "17"))
                  (rule "applyEqRigid" (formula "17") (term "0") (ifseqformula "18"))
                  (rule "lenNonNegative" (formula "18") (term "1"))
                  (rule "inEqSimp_commuteLeq" (formula "18"))
                  (rule "lenNonNegative" (formula "13") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "13"))
                  (rule "applyEqRigid" (formula "13") (term "0") (ifseqformula "14"))
                  (rule "seqGetAlphaCast" (formula "5") (term "0"))
                  (rule "castDel" (formula "5") (term "0"))
                   (builtin "One Step Simplification" (formula "5"))
                  (rule "true_left" (formula "5"))
                  (rule "seqGetAlphaCast" (formula "8") (term "0"))
                  (rule "castDel" (formula "8") (term "0"))
                   (builtin "One Step Simplification" (formula "8"))
                  (rule "true_left" (formula "8"))
                  (rule "lenNonNegative" (formula "12") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "12"))
                  (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                  (rule "lenNonNegative" (formula "16") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "16"))
                  (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                  (rule "commute_and" (formula "19") (term "0,0,1,0"))
                  (rule "commute_and" (formula "14") (term "0,0,1,0"))
                  (rule "ifthenelse_split" (formula "11") (term "0"))
                  (branch "f_s1.length >= 1 TRUE"
                     (rule "replace_known_left" (formula "1") (term "0,1,1,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "replace_known_left" (formula "2") (term "0,0") (ifseqformula "11"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "11"))
                     (rule "leq_literals" (formula "18") (term "0"))
                      (builtin "One Step Simplification" (formula "18"))
                     (rule "true_left" (formula "18"))
                     (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "2"))
                     (rule "andLeft" (formula "4"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,1,0"))
                     (rule "times_zero_1" (formula "4") (term "1,0"))
                     (rule "add_zero_right" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "closeFalse" (formula "4"))
                  )
                  (branch "f_s1.length >= 1 FALSE"
                     (rule "replace_known_right" (formula "2") (term "0,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "2"))
                     (rule "replace_known_right" (formula "1") (term "0,1,1,0") (ifseqformula "21"))
                      (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_geqRight" (formula "21"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "11"))
                     (rule "times_zero_2" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11"))
                     (rule "mul_literals" (formula "11") (term "1"))
                     (rule "inEqSimp_contradInEq0" (formula "9") (ifseqformula "11"))
                     (rule "qeq_literals" (formula "9") (term "0"))
                      (builtin "One Step Simplification" (formula "9"))
                     (rule "closeFalse" (formula "9"))
                  )
               )
               (branch "Case 2"
                  (rule "getOfSeqDef" (formula "12") (term "0") (userinteraction))
                  (rule "ifthenelse_split" (formula "12") (term "0") (userinteraction))
                  (branch "0 <= jv_1 & jv_1 < s_1.length - 0 TRUE"
                     (rule "andLeft" (formula "2"))
                     (rule "andLeft" (formula "4"))
                     (rule "andLeft" (formula "6"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "5"))
                     (rule "add_zero_right" (formula "18") (term "1,1,0,0") (userinteraction))
                     (rule "castDel" (formula "18") (term "0") (userinteraction))
                     (rule "eqTermCut" (formula "18") (term "1,0") (inst "s=any::seqGet(s_1, jv_1)") (userinteraction))
                     (branch "Assume int::seqGet(s_1, jv_1) = any::seqGet(s_1, jv_1)"
                        (rule "applyEqRigid" (formula "19") (term "1,0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "19") (term "0,1,0") (ifseqformula "5") (userinteraction))
                        (rule "castDel" (formula "19") (term "1,0") (userinteraction))
                        (rule "seqGetAlphaCast" (formula "19") (term "0") (userinteraction))
                        (rule "applyEqReverse" (formula "20") (term "0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "20") (term "0,0") (ifseqformula "9") (userinteraction))
                        (rule "castDel" (formula "20") (term "0"))
                         (builtin "One Step Simplification" (formula "20"))
                        (rule "closeTrue" (formula "20"))
                     )
                     (branch "Assume int::seqGet(s_1, jv_1) != any::seqGet(s_1, jv_1)"
                        (rule "notLeft" (formula "1") (userinteraction))
                        (rule "seqGetAlphaCast" (formula "18") (term "0") (userinteraction))
                        (rule "applyEqReverse" (formula "19") (term "0") (ifseqformula "1") (userinteraction))
                        (rule "applyEqRigid" (formula "19") (term "1") (ifseqformula "5") (userinteraction))
                        (rule "applyEqRigid" (formula "19") (term "0,0") (ifseqformula "5") (userinteraction))
                        (rule "castDel" (formula "19") (term "0"))
                         (builtin "One Step Simplification" (formula "19"))
                        (rule "closeTrue" (formula "19"))
                     )
                  )
                  (branch "0 <= jv_1 & jv_1 < s_1.length - 0 FALSE"
                     (rule "castDel" (formula "13") (term "0"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "3"))
                     (rule "andLeft" (formula "1"))
                     (rule "andLeft" (formula "4"))
                     (rule "eqSymm" (formula "9"))
                     (rule "eqSymm" (formula "16") (term "1,0"))
                     (rule "eqSymm" (formula "12") (term "1,0"))
                     (rule "eqSymm" (formula "13"))
                     (rule "replace_known_left" (formula "17") (term "0") (ifseqformula "1"))
                      (builtin "One Step Simplification" (formula "17"))
                     (rule "polySimp_elimSub" (formula "17") (term "1"))
                     (rule "times_zero_2" (formula "17") (term "1,1"))
                     (rule "add_zero_right" (formula "17") (term "1"))
                     (rule "close" (formula "17") (ifseqformula "2"))
                  )
               )
            )
         )
      )
   )
   (branch "Case 2"
      (rule "allRight" (formula "5") (inst "sk=iv_0") (userinteraction))
      (rule "andLeft" (formula "4") (userinteraction))
      (rule "andLeft" (formula "2") (userinteraction))
      (rule "getOfSeqDef" (formula "7") (term "1,1,1") (userinteraction))
      (rule "ifthenelse_split" (formula "7") (term "1,1,1") (userinteraction))
      (branch "0 <= iv_0 & iv_0 < s_1.length - 0 TRUE"
         (rule "add_zero_right" (formula "8") (term "1,1,0,1,1,1") (userinteraction))
         (rule "impRight" (formula "8") (userinteraction))
         (rule "castDel" (formula "9") (term "1,1") (userinteraction))
         (rule "instAll" (formula "9") (term "1,1,1") (ifseqformula "5") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "andLeft" (formula "4") (userinteraction))
            (rule "andLeft" (formula "8") (userinteraction))
            (rule "seqNPermRange" (formula "9") (inst "iv=iv") (userinteraction))
            (rule "andLeft" (formula "1"))
            (rule "andLeft" (formula "3"))
            (rule "eqSymm" (formula "12") (term "1,0"))
            (rule "eqSymm" (formula "4"))
            (rule "eqSymm" (formula "7") (term "1,0"))
            (rule "eqSymm" (formula "8"))
            (rule "eqSymm" (formula "14"))
            (rule "polySimp_elimSub" (formula "3") (term "1"))
            (rule "times_zero_2" (formula "3") (term "1,1"))
            (rule "add_zero_right" (formula "3") (term "1"))
            (rule "lenOfSeqDef" (formula "2") (term "1"))
            (rule "polySimp_elimSub" (formula "2") (term "1,1"))
            (rule "times_zero_2" (formula "2") (term "1,1,1"))
            (rule "add_zero_right" (formula "2") (term "1,1"))
            (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "13") (term "1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1,0"))
            (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
            (rule "inEqSimp_ltToLeq" (formula "3"))
            (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "3") (term "0"))
            (rule "inEqSimp_ltToLeq" (formula "2") (term "0,1"))
            (rule "add_zero_right" (formula "2") (term "0,0,1"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
            (rule "inEqSimp_ltToLeq" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
            (rule "polySimp_addComm1" (formula "2") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "13") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,1,0"))
            (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "1"))
            (rule "applyEqRigid" (formula "2") (term "1,0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "3") (term "0,1,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "2") (term "0,1,0,0,0,1,0") (ifseqformula "9"))
            (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,1") (ifseqformula "5"))
            (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "8"))
            (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,1,0") (ifseqformula "9"))
            (rule "applyEqRigid" (formula "4") (term "1") (ifseqformula "8"))
            (rule "applyEq" (formula "12") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
            (rule "apply_eq_monomials" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "5"))
            (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
            (rule "polySimp_pullOutFactor0b" (formula "7") (term "1,0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "1,1,1,0,0,1,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,1,0,0,1,0,0"))
            (rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
            (rule "applyEq" (formula "13") (term "0,1,0,0,1") (ifseqformula "8"))
            (rule "inEqSimp_sepNegMonomial0" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2") (term "0,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0,0,0,1,0"))
            (rule "polySimp_elimOne" (formula "2") (term "0,0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,1,0"))
            (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1,0"))
            (rule "mul_literals" (formula "10") (term "0,1,1,0,1,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1"))
            (rule "polySimp_mulComm0" (formula "13") (term "1,1"))
            (rule "polySimp_rightDist" (formula "13") (term "1,1"))
            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1"))
            (rule "mul_literals" (formula "13") (term "0,1,1"))
            (rule "polySimp_elimOne" (formula "13") (term "1,1,1"))
            (rule "inEqSimp_sepNegMonomial0" (formula "2"))
            (rule "polySimp_mulLiterals" (formula "2") (term "0"))
            (rule "polySimp_elimOne" (formula "2") (term "0"))
            (rule "nnf_imp2or" (formula "10") (term "0"))
            (rule "nnf_imp2or" (formula "12") (term "0"))
            (rule "nnf_imp2or" (formula "7") (term "0"))
            (rule "nnf_notAnd" (formula "10") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "10") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "10") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "10") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "10") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "10") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0"))
            (rule "times_zero_1" (formula "10") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "10") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0"))
            (rule "mul_literals" (formula "10") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "12") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
            (rule "times_zero_1" (formula "12") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
            (rule "mul_literals" (formula "12") (term "1,0,0,0"))
            (rule "nnf_notAnd" (formula "7") (term "0,0"))
            (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
            (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
            (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
            (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
            (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
            (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
            (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
            (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
            (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
            (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
            (rule "mul_literals" (formula "7") (term "1,0,0,0"))
            (rule "commute_or_2" (formula "12") (term "0"))
            (rule "commute_or_2" (formula "7") (term "0"))
            (rule "commute_and_2" (formula "10") (term "1,0"))
            (rule "commute_or" (formula "12") (term "0,0"))
            (rule "commute_or" (formula "7") (term "0,0"))
            (rule "cnf_rightDist" (formula "10") (term "0"))
            (rule "distr_forallAnd" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "commute_or" (formula "11") (term "0"))
            (rule "cnf_rightDist" (formula "10") (term "0"))
            (rule "distr_forallAnd" (formula "10"))
            (rule "andLeft" (formula "10"))
            (rule "shift_paren_or" (formula "11") (term "0"))
            (rule "lenNonNegative" (formula "9") (term "1"))
            (rule "inEqSimp_commuteLeq" (formula "9"))
            (rule "lenNonNegative" (formula "5") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "applyEq" (formula "5") (term "0") (ifseqformula "6"))
            (rule "lenNonNegative" (formula "10") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "10"))
            (rule "applyEq" (formula "10") (term "0") (ifseqformula "11"))
            (rule "lenNonNegative" (formula "4") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "4"))
            (rule "applyEq" (formula "4") (term "0") (ifseqformula "5"))
            (rule "lenNonNegative" (formula "8") (term "0"))
            (rule "inEqSimp_commuteLeq" (formula "8"))
            (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
            (rule "seqGetAlphaCast" (formula "17") (term "1,1,0"))
            (rule "castedGetAny" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "seqGetAlphaCast" (formula "17") (term "1,0"))
            (rule "castedGetAny" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "seqGetAlphaCast" (formula "17") (term "0"))
            (rule "castDel" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "seqGetAlphaCast" (formula "17") (term "1"))
            (rule "castDel" (formula "1") (term "0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "ifthenelse_split" (formula "2") (term "0"))
            (branch "f_s1.length >= 1 TRUE"
               (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "1"))
               (rule "leq_literals" (formula "9") (term "0"))
                (builtin "One Step Simplification" (formula "9"))
               (rule "true_left" (formula "9"))
               (rule "cut_direct" (formula "15") (term "0"))
               (branch "CUT: (int)s_1[iv_0] >= 0 TRUE"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "inEqSimp_leqRight" (formula "16"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "add_zero_left" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1"))
                  (rule "allLeft" (formula "14") (inst "t=iv_0"))
                  (rule "inEqSimp_commuteGeq" (formula "14") (term "1,0"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "1"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                  (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,1"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,1"))
                  (rule "polySimp_addComm0" (formula "14") (term "0,0,0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "leq_literals" (formula "14") (term "0,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (term "1") (ifseqformula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1"))
                  (rule "add_literals" (formula "14") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "14") (term "1,0,0,1"))
                  (rule "add_zero_right" (formula "14") (term "0,0,1"))
                  (rule "leq_literals" (formula "14") (term "0,1"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "14") (term "0"))
                   (builtin "One Step Simplification" (formula "14"))
                  (rule "closeFalse" (formula "14"))
               )
               (branch "CUT: (int)s_1[iv_0] >= 0 FALSE"
                   (builtin "One Step Simplification" (formula "16"))
                  (rule "false_right" (formula "16"))
                  (rule "inEqSimp_geqRight" (formula "15"))
                  (rule "times_zero_1" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "mul_literals" (formula "1") (term "1"))
                  (rule "allLeft" (formula "11") (inst "t=iv_0"))
                  (rule "inEqSimp_commuteGeq" (formula "11") (term "1,0"))
                  (rule "inEqSimp_contradInEq0" (formula "11") (term "1") (ifseqformula "1"))
                  (rule "qeq_literals" (formula "11") (term "0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (term "1") (ifseqformula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "11") (term "0,1"))
                  (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,1"))
                  (rule "add_literals" (formula "11") (term "1,1,0,0,1"))
                  (rule "times_zero_1" (formula "11") (term "1,0,0,1"))
                  (rule "add_literals" (formula "11") (term "0,0,1"))
                  (rule "leq_literals" (formula "11") (term "0,1"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "3"))
                  (rule "qeq_literals" (formula "11") (term "0"))
                   (builtin "One Step Simplification" (formula "11"))
                  (rule "closeFalse" (formula "11"))
               )
            )
            (branch "f_s1.length >= 1 FALSE"
               (rule "inEqSimp_geqRight" (formula "16"))
               (rule "mul_literals" (formula "1") (term "1,0,0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "add_zero_left" (formula "1") (term "0"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "times_zero_2" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "3"))
               (rule "mul_literals" (formula "3") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "2"))
               (rule "qeq_literals" (formula "3") (term "0"))
                (builtin "One Step Simplification" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
         )
         (branch "Case 2"
            (rule "instAll" (formula "1") (term "1,1,0") (ifseqformula "6") (userinteraction))
            (rule "impLeft" (formula "1") (userinteraction))
            (branch "Case 1"
               (rule "andLeft" (formula "5") (userinteraction))
               (rule "seqNPermRange" (formula "6") (inst "iv=iv") (userinteraction))
               (rule "andLeft" (formula "2"))
               (rule "andLeft" (formula "11"))
               (rule "andLeft" (formula "4"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "15"))
               (rule "eqSymm" (formula "5"))
               (rule "eqSymm" (formula "1"))
               (rule "eqSymm" (formula "10"))
               (rule "eqSymm" (formula "9") (term "1,0"))
               (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "2"))
                (builtin "One Step Simplification" (formula "14"))
               (rule "polySimp_elimSub" (formula "4") (term "1"))
               (rule "mul_literals" (formula "4") (term "1,1"))
               (rule "add_zero_right" (formula "4") (term "1"))
               (rule "lenOfSeqDef" (formula "3") (term "1"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1"))
               (rule "times_zero_2" (formula "3") (term "1,1,1"))
               (rule "add_zero_right" (formula "3") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "7") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltRight" (formula "14"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
               (rule "polySimp_addComm0" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "4") (term "0,1"))
               (rule "add_zero_right" (formula "4") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "4"))
               (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "3"))
               (rule "applyEq" (formula "4") (term "0,1,0,0,0,1,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "5") (term "0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "12"))
               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "15") (term "0") (ifseqformula "2"))
               (rule "applyEq" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
               (rule "applyEq" (formula "1") (term "0,1,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "14") (term "0,1,0,0,1,0,0") (ifseqformula "12"))
               (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,1,0") (ifseqformula "7"))
               (rule "applyEq" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
               (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,1,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "8") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "10") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4") (term "0,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0,0,0,1,0"))
               (rule "polySimp_elimOne" (formula "4") (term "0,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "14") (term "1,1,0,0"))
               (rule "mul_literals" (formula "14") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,1,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,1,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "8") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "8") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "8") (term "1,1,0,0"))
               (rule "mul_literals" (formula "8") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "8") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "8") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "4"))
               (rule "polySimp_mulLiterals" (formula "4") (term "0"))
               (rule "polySimp_elimOne" (formula "4") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
               (rule "andLeft" (formula "5"))
               (rule "inEqSimp_homoInEq1" (formula "5"))
               (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
               (rule "add_literals" (formula "5") (term "1,1,0"))
               (rule "times_zero_1" (formula "5") (term "1,0"))
               (rule "add_zero_right" (formula "5") (term "0"))
               (rule "leq_literals" (formula "5"))
               (rule "closeFalse" (formula "5"))
            )
            (branch "Case 2"
               (rule "andLeft" (formula "9"))
               (rule "andLeft" (formula "4"))
               (rule "andLeft" (formula "3"))
               (rule "andLeft" (formula "7"))
               (rule "eqSymm" (formula "6"))
               (rule "eqSymm" (formula "14"))
               (rule "eqSymm" (formula "2"))
               (rule "eqSymm" (formula "1"))
               (rule "eqSymm" (formula "13") (term "1,0"))
               (rule "eqSymm" (formula "9") (term "1,0"))
               (rule "eqSymm" (formula "10"))
               (rule "polySimp_elimSub" (formula "5") (term "1"))
               (rule "times_zero_2" (formula "5") (term "1,1"))
               (rule "add_zero_right" (formula "5") (term "1"))
               (rule "lenOfSeqDef" (formula "3") (term "1"))
               (rule "polySimp_elimSub" (formula "3") (term "1,1"))
               (rule "times_zero_2" (formula "3") (term "1,1,1"))
               (rule "add_zero_right" (formula "3") (term "1,1"))
               (rule "inEqSimp_ltToLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "5"))
               (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "5") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
               (rule "add_zero_right" (formula "3") (term "0,0,1"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "4"))
               (rule "applyEqRigid" (formula "3") (term "1,0,1,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "11"))
               (rule "applyEq" (formula "14") (term "0") (ifseqformula "2"))
               (rule "applyEqRigid" (formula "5") (term "0,1,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "13") (term "0,1,0,0,1,0,0") (ifseqformula "11"))
               (rule "applyEqRigid" (formula "7") (term "1") (ifseqformula "10"))
               (rule "applyEqRigid" (formula "6") (term "1") (ifseqformula "10"))
               (rule "applyEqRigid" (formula "9") (term "0,1,0,0,1,0,0") (ifseqformula "7"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "5"))
               (rule "polySimp_mulLiterals" (formula "5") (term "0"))
               (rule "polySimp_elimOne" (formula "5") (term "0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,1,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "3") (term "0,0,0"))
               (rule "nnf_imp2or" (formula "13") (term "0"))
               (rule "nnf_imp2or" (formula "9") (term "0"))
               (rule "nnf_notAnd" (formula "13") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "13") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
               (rule "mul_literals" (formula "13") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "13") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "13") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0"))
               (rule "nnf_notAnd" (formula "9") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "9") (term "0,0,0"))
               (rule "times_zero_1" (formula "9") (term "1,0,0,0,0,0"))
               (rule "add_zero_right" (formula "9") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "9") (term "0,0,0"))
               (rule "mul_literals" (formula "9") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "9") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "9") (term "1,0,0,1,0,0"))
               (rule "mul_literals" (formula "9") (term "0,1,0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "9") (term "0,0,1,0,0"))
               (rule "add_literals" (formula "9") (term "0,0,0,1,0,0"))
               (rule "add_zero_left" (formula "9") (term "0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "9") (term "1,0,0"))
               (rule "polySimp_mulLiterals" (formula "9") (term "1,1,0,0"))
               (rule "polySimp_elimOne" (formula "9") (term "1,1,0,0"))
               (rule "commute_or_2" (formula "13") (term "0"))
               (rule "commute_or_2" (formula "9") (term "0"))
               (rule "commute_or" (formula "13") (term "0,0"))
               (rule "commute_or" (formula "9") (term "0,0"))
               (rule "ifthenelse_split" (formula "3") (term "0"))
               (branch "f_s1.length >= 1 TRUE"
                  (rule "allLeft" (formula "13") (inst "t=iv_0"))
                  (rule "replace_known_right" (formula "13") (term "0,0") (ifseqformula "15"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_commuteGeq" (formula "13") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                  (rule "qeq_literals" (formula "13") (term "0,0"))
                   (builtin "One Step Simplification" (formula "13"))
                  (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "13"))
                  (rule "andLeft" (formula "5"))
                  (rule "inEqSimp_homoInEq1" (formula "5"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                  (rule "add_literals" (formula "5") (term "1,1,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0"))
                  (rule "add_zero_right" (formula "5") (term "0"))
                  (rule "leq_literals" (formula "5"))
                  (rule "closeFalse" (formula "5"))
               )
               (branch "f_s1.length >= 1 FALSE"
                  (rule "inEqSimp_geqRight" (formula "14"))
                  (rule "mul_literals" (formula "1") (term "1,0,0"))
                  (rule "add_literals" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "5"))
                  (rule "qeq_literals" (formula "4") (term "0"))
                   (builtin "One Step Simplification" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
            )
         )
      )
      (branch "0 <= iv_0 & iv_0 < s_1.length - 0 FALSE"
         (rule "impRight" (formula "8"))
         (rule "andLeft" (formula "6"))
         (rule "andLeft" (formula "3"))
         (rule "andLeft" (formula "1"))
         (rule "eqSymm" (formula "10") (term "1,0"))
         (rule "eqSymm" (formula "7"))
         (rule "eqSymm" (formula "6") (term "1,0"))
         (rule "eqSymm" (formula "3"))
         (rule "eqSymm" (formula "12"))
         (rule "replace_known_left" (formula "11") (term "0") (ifseqformula "1"))
          (builtin "One Step Simplification" (formula "11"))
         (rule "polySimp_elimSub" (formula "11") (term "1"))
         (rule "mul_literals" (formula "11") (term "1,1"))
         (rule "add_zero_right" (formula "11") (term "1"))
         (rule "lenOfSeqDef" (formula "2") (term "1"))
         (rule "polySimp_elimSub" (formula "2") (term "1,1"))
         (rule "mul_literals" (formula "2") (term "1,1,1"))
         (rule "add_zero_right" (formula "2") (term "1,1"))
         (rule "inEqSimp_ltToLeq" (formula "10") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_ltRight" (formula "11"))
         (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
         (rule "polySimp_addComm0" (formula "1") (term "0"))
         (rule "inEqSimp_ltToLeq" (formula "3") (term "0,1"))
         (rule "add_zero_right" (formula "3") (term "0,0,1"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "3"))
         (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "3") (term "0"))
         (rule "inEqSimp_commuteLeq" (formula "7") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "2"))
         (rule "applyEq" (formula "3") (term "0,1,0,0,0,1,0") (ifseqformula "9"))
         (rule "applyEq" (formula "3") (term "1,0,1,0") (ifseqformula "9"))
         (rule "applyEqRigid" (formula "1") (term "0,1,0") (ifseqformula "9"))
         (rule "applyEqRigid" (formula "5") (term "1") (ifseqformula "8"))
         (rule "applyEq" (formula "4") (term "1") (ifseqformula "8"))
         (rule "applyEq" (formula "11") (term "0,1,0,0,1,0,0") (ifseqformula "9"))
         (rule "apply_eq_monomials" (formula "7") (term "1,0,0,1,0,0") (ifseqformula "5"))
         (rule "polySimp_rightDist" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,0,1,0,0,1,0,0"))
         (rule "polySimp_pullOutFactor0b" (formula "7") (term "1,0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "1,1,1,0,0,1,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,1,0,0,1,0,0"))
         (rule "add_zero_right" (formula "7") (term "1,0,0,1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,0,0,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3") (term "0,0,1,0"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,1,0"))
         (rule "polySimp_elimOne" (formula "3") (term "0,0,0,1,0"))
         (rule "inEqSimp_sepNegMonomial1" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulComm0" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,1,0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "3"))
         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
         (rule "polySimp_elimOne" (formula "3") (term "0"))
         (rule "nnf_imp2or" (formula "11") (term "0"))
         (rule "nnf_imp2or" (formula "7") (term "0"))
         (rule "nnf_notAnd" (formula "11") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
         (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
         (rule "mul_literals" (formula "11") (term "1,0,0,0"))
         (rule "nnf_notAnd" (formula "7") (term "0,0"))
         (rule "inEqSimp_notLeq" (formula "7") (term "1,0,0"))
         (rule "polySimp_rightDist" (formula "7") (term "1,0,0,1,0,0"))
         (rule "mul_literals" (formula "7") (term "0,1,0,0,1,0,0"))
         (rule "polySimp_addAssoc" (formula "7") (term "0,0,1,0,0"))
         (rule "add_literals" (formula "7") (term "0,0,0,1,0,0"))
         (rule "add_zero_left" (formula "7") (term "0,0,1,0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "7") (term "1,0,0"))
         (rule "polySimp_mulLiterals" (formula "7") (term "1,1,0,0"))
         (rule "polySimp_elimOne" (formula "7") (term "1,1,0,0"))
         (rule "inEqSimp_notGeq" (formula "7") (term "0,0,0"))
         (rule "times_zero_1" (formula "7") (term "1,0,0,0,0,0"))
         (rule "add_zero_right" (formula "7") (term "0,0,0,0,0"))
         (rule "inEqSimp_sepPosMonomial0" (formula "7") (term "0,0,0"))
         (rule "mul_literals" (formula "7") (term "1,0,0,0"))
         (rule "commute_or_2" (formula "11") (term "0"))
         (rule "commute_or_2" (formula "7") (term "0"))
         (rule "commute_or" (formula "11") (term "0,0"))
         (rule "commute_or" (formula "7") (term "0,0"))
         (rule "ifthenelse_split" (formula "3") (term "0"))
         (branch "f_s1.length >= 1 TRUE"
            (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
            (rule "andLeft" (formula "4"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
            (rule "add_literals" (formula "4") (term "1,1,0"))
            (rule "times_zero_1" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "leq_literals" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
         (branch "f_s1.length >= 1 FALSE"
            (rule "inEqSimp_geqRight" (formula "12"))
            (rule "mul_literals" (formula "1") (term "1,0,0"))
            (rule "add_literals" (formula "1") (term "0,0"))
            (rule "add_zero_left" (formula "1") (term "0"))
            (rule "inEqSimp_homoInEq1" (formula "4"))
            (rule "times_zero_2" (formula "4") (term "1,0"))
            (rule "add_zero_right" (formula "4") (term "0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
            (rule "qeq_literals" (formula "4") (term "0"))
             (builtin "One Step Simplification" (formula "4"))
            (rule "closeFalse" (formula "4"))
         )
      )
   )
)
)
}
