\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 17 17:15:32 CEST 2018
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_EXTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=20000
[SMTSettings]integersMaximum=2147483645
[Choice]DefaultChoices=assertions-assertions\\:safe , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:treatAsAxiom , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]maxGenericSorts=2
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
"
}

\proofObligation "#Proof Obligation Settings
#Sun Jun 17 17:15:32 CEST 2018
name=bsum_num_of_bounds2
class=de.uka.ilkd.key.taclettranslation.lemma.TacletProofObligationInput
";

\proof {
(keyLog "0" (keyUser "jelle" ) (keyVersion "e5e2f2d8ee2274bb70842f78e2ed2d40e1c06c30"))

(autoModeTime "373")

(branch "dummy ID"
(rule "notRight" (formula "1") (newnames "v_uSub,f_i0,f_i2,f_phi") (userinteraction))
(rule "impLeft" (formula "1") (userinteraction))
(branch "Case 1"
   (builtin "One Step Simplification" (formula "1"))
   (rule "closeTrue" (formula "1"))
)
(branch "Case 2"
   (rule "notLeft" (formula "1") (userinteraction))
   (rule "andRight" (formula "1") (userinteraction))
   (branch "Case 1"
      (rule "int_induction" (inst "b=leq(Z(0(#)),
    bsum{int v_uSub;}(f_i0,
                      add(f_i0, nv),
                      \\if (f_phi(v_uSub))
                          \\then (Z(0(#)))
                          \\else (Z(1(#)))))") (inst "nv=nv") (userinteraction))
      (branch "Base Case"
         (rule "add_zero_right" (formula "1") (term "1,1") (userinteraction))
         (rule "bsum_empty" (formula "1") (term "1") (userinteraction))
         (branch "Precondition"
            (rule "inEqSimp_leqRight" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0"))
            (rule "add_literals" (formula "1") (term "1,1,0"))
            (rule "times_zero_1" (formula "1") (term "1,0"))
            (rule "add_zero_right" (formula "1") (term "0"))
            (rule "qeq_literals" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
         (branch "Empty Sum"
            (rule "leq_literals" (formula "1"))
            (rule "closeTrue" (formula "1"))
         )
      )
      (branch "Step Case"
         (rule "allRight" (formula "1") (inst "sk=nv_0") (userinteraction))
         (rule "impRight" (formula "1") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "bsum_induction_upper" (formula "3") (term "1") (userinteraction))
         (rule "ifthenelse_split" (formula "3") (term "1,1") (userinteraction))
         (branch "f_i0 < f_i0 + (nv_0 + 1) TRUE"
            (rule "ifthenelse_split" (formula "4") (term "1,1") (userinteraction))
            (branch "f_phi(f_i0 + (nv_0 + 1) - 1) TRUE"
               (rule "add_zero_right" (formula "5") (term "1"))
               (rule "polySimp_elimSub" (formula "1") (term "0"))
               (rule "mul_literals" (formula "1") (term "1,0"))
               (rule "polySimp_elimSub" (formula "5") (term "1,1"))
               (rule "mul_literals" (formula "5") (term "1,1,1"))
               (rule "polySimp_addComm0" (formula "2") (term "1,1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "2") (term "1"))
               (rule "polySimp_addComm0" (formula "2") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_addLiterals" (formula "1") (term "0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,1,1"))
               (rule "polySimp_addComm1" (formula "5") (term "1,1"))
               (rule "polySimp_addLiterals" (formula "5") (term "0,1,1"))
               (rule "add_zero_right" (formula "5") (term "0,1,1"))
               (rule "close" (formula "5") (ifseqformula "4"))
            )
            (branch "f_phi(f_i0 + (nv_0 + 1) - 1) FALSE"
               (rule "polySimp_elimSub" (formula "5") (term "1,0,1"))
               (rule "mul_literals" (formula "5") (term "1,1,0,1"))
               (rule "polySimp_elimSub" (formula "4") (term "0"))
               (rule "mul_literals" (formula "4") (term "1,0"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "5") (term "1,0,1,0,1"))
               (rule "polySimp_addComm0" (formula "4") (term "1,0,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_addLiterals" (formula "4") (term "0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "0,1,1,1"))
               (rule "polySimp_addComm1" (formula "5") (term "1,1,1"))
               (rule "polySimp_addLiterals" (formula "5") (term "0,1,1,1"))
               (rule "add_zero_right" (formula "5") (term "0,1,1,1"))
               (rule "inEqSimp_leqRight" (formula "6"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
               (rule "inEqSimp_leqRight" (formula "6"))
               (rule "add_zero_right" (formula "1") (term "0"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0"))
               (rule "add_literals" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1,0,0"))
               (rule "mul_literals" (formula "3") (term "0,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "polySimp_addAssoc" (formula "3") (term "0,0,0"))
               (rule "add_literals" (formula "3") (term "0,0,0,0"))
               (rule "add_zero_left" (formula "3") (term "0,0,0"))
               (rule "polySimp_pullOutFactor2" (formula "3") (term "0,0"))
               (rule "add_literals" (formula "3") (term "1,0,0"))
               (rule "times_zero_1" (formula "3") (term "0,0"))
               (rule "add_zero_left" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepNegMonomial1" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_invertInEq0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "times_zero_2" (formula "3") (term "1"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "1"))
               (rule "qeq_literals" (formula "4") (term "0"))
               (builtin "One Step Simplification" (formula "4"))
               (rule "closeFalse" (formula "4"))
            )
         )
         (branch "f_i0 < f_i0 + (nv_0 + 1) FALSE"
            (rule "add_zero_right" (formula "4") (term "1"))
            (rule "polySimp_elimSub" (formula "4") (term "1,1"))
            (rule "mul_literals" (formula "4") (term "1,1,1"))
            (rule "polySimp_addComm0" (formula "3") (term "1,1"))
            (rule "polySimp_addComm0" (formula "4") (term "1,0,1,1"))
            (rule "polySimp_addAssoc" (formula "3") (term "1"))
            (rule "polySimp_addComm0" (formula "3") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "4") (term "0,1,1"))
            (rule "polySimp_addComm1" (formula "4") (term "1,1"))
            (rule "polySimp_addLiterals" (formula "4") (term "0,1,1"))
            (rule "add_zero_right" (formula "4") (term "0,1,1"))
            (rule "close" (formula "4") (ifseqformula "2"))
         )
      )
      (branch "Use Case"
         (rule "allLeft" (formula "1") (inst "t=sub(f_i2, f_i0)") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "cut" (inst "cutFormula=geq(sub(f_i2, f_i0), Z(0(#)))") (userinteraction))
            (branch "CUT: f_i2 - f_i0 >= 0 TRUE"
               (rule "close" (formula "3") (ifseqformula "1"))
            )
            (branch "CUT: f_i2 - f_i0 >= 0 FALSE"
               (rule "cut" (inst "cutFormula=lt(sub(f_i2, f_i0), Z(0(#)))") (userinteraction))
               (branch "CUT: f_i2 - f_i0 < 0 TRUE"
                  (rule "bsum_empty" (formula "4") (term "1") (userinteraction))
                  (branch "Precondition"
                     (rule "polySimp_elimSub" (formula "3") (term "0"))
                     (rule "polySimp_elimSub" (formula "1") (term "0"))
                     (rule "polySimp_addComm0" (formula "3") (term "0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_leqRight" (formula "5"))
                     (rule "add_zero_right" (formula "1") (term "0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                     (rule "inEqSimp_leqRight" (formula "5"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "inEqSimp_geqRight" (formula "5"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "4"))
                     (rule "times_zero_1" (formula "4") (term "1,0,0"))
                     (rule "add_zero_right" (formula "4") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "4") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "4") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1"))
                     (rule "polySimp_rightDist" (formula "2") (term "1"))
                     (rule "mul_literals" (formula "2") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1"))
                     (rule "polySimp_rightDist" (formula "1") (term "1"))
                     (rule "mul_literals" (formula "1") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                     (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "1"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_homoInEq1" (formula "2"))
                     (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                     (rule "mul_literals" (formula "2") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "2") (term "0"))
                     (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                     (rule "add_literals" (formula "2") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,1,0"))
                     (rule "times_zero_1" (formula "2") (term "1,0"))
                     (rule "add_zero_right" (formula "2") (term "0"))
                     (rule "leq_literals" (formula "2"))
                     (rule "closeFalse" (formula "2"))
                  )
                  (branch "Empty Sum"
                     (rule "leq_literals" (formula "4"))
                     (rule "closeTrue" (formula "4"))
                  )
               )
               (branch "CUT: f_i2 - f_i0 < 0 FALSE"
                  (rule "polySimp_elimSub" (formula "2") (term "0"))
                  (rule "polySimp_elimSub" (formula "3") (term "0"))
                  (rule "polySimp_addComm0" (formula "2") (term "0"))
                  (rule "polySimp_addComm0" (formula "3") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "4"))
                  (rule "add_zero_right" (formula "1") (term "0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                  (rule "inEqSimp_ltRight" (formula "3"))
                  (rule "times_zero_1" (formula "1") (term "0,0"))
                  (rule "add_zero_left" (formula "1") (term "0"))
                  (rule "close" (formula "4") (ifseqformula "1"))
               )
            )
         )
         (branch "Case 2"
            (rule "sub" (formula "1") (term "1,1,1") (userinteraction))
            (rule "rotate_params" (formula "1") (term "1,1") (userinteraction))
            (rule "add_sub_elim_right" (formula "1") (term "1,1,1") (userinteraction))
            (rule "add_zero_right" (formula "1") (term "1,1") (userinteraction))
            (rule "closeAntec" (formula "1") (ifseqformula "3") (userinteraction))
         )
      )
   )
   (branch "Case 2"
      (rule "int_induction" (inst "b=   leq(f_i0, add(f_i0, nv))
-> leq(bsum{int v_uSub;}(f_i0,
                         add(f_i0, nv),
                         \\if (f_phi(v_uSub))
                             \\then (Z(0(#)))
                             \\else (Z(1(#)))),
       nv)") (inst "nv=nv") (userinteraction))
      (branch "Base Case"
         (rule "add_zero_right" (formula "1") (term "1,0") (userinteraction))
         (rule "impRight" (formula "1") (userinteraction))
         (rule "add_zero_right" (formula "2") (term "1,0") (userinteraction))
         (rule "bsum_empty" (formula "2") (term "0") (userinteraction))
         (branch "Precondition"
            (rule "close" (formula "2") (ifseqformula "1"))
         )
         (branch "Empty Sum"
            (rule "leq_literals" (formula "2"))
            (rule "closeTrue" (formula "2"))
         )
      )
      (branch "Step Case"
         (rule "allRight" (formula "1") (inst "sk=nv_0") (userinteraction))
         (rule "impRight" (formula "1") (userinteraction))
         (rule "andLeft" (formula "1") (userinteraction))
         (rule "impRight" (formula "4") (userinteraction))
         (rule "impRight" (formula "4") (userinteraction))
         (rule "impLeft" (formula "4") (userinteraction))
         (branch "Case 1"
            (rule "polySimp_elimSub" (formula "6") (term "1"))
            (rule "polySimp_addComm0" (formula "5") (term "1"))
            (rule "polySimp_addComm0" (formula "1") (term "1,1"))
            (rule "polySimp_addComm0" (formula "5") (term "1,1,0"))
            (rule "polySimp_addComm0" (formula "6") (term "1"))
            (rule "polySimp_addAssoc" (formula "1") (term "1"))
            (rule "polySimp_addComm0" (formula "1") (term "0,1"))
            (rule "polySimp_addAssoc" (formula "5") (term "1,0"))
            (rule "polySimp_addComm0" (formula "5") (term "0,1,0"))
            (rule "inEqSimp_leqRight" (formula "4"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "polySimp_addComm1" (formula "1") (term "0"))
            (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "6"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "inEqSimp_leqRight" (formula "6"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "add_literals" (formula "1") (term "0,0,0"))
            (rule "inEqSimp_commuteLeq" (formula "5"))
            (rule "inEqSimp_homoInEq0" (formula "4"))
            (rule "polySimp_addComm1" (formula "4") (term "0"))
            (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
            (rule "add_literals" (formula "4") (term "1,1,0,0"))
            (rule "times_zero_1" (formula "4") (term "1,0,0"))
            (rule "add_zero_right" (formula "4") (term "0,0"))
            (rule "inEqSimp_sepNegMonomial1" (formula "3"))
            (rule "polySimp_mulLiterals" (formula "3") (term "0"))
            (rule "polySimp_elimOne" (formula "3") (term "0"))
            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "polySimp_rightDist" (formula "2") (term "0,1"))
            (rule "mul_literals" (formula "2") (term "0,0,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "mul_literals" (formula "1") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "4"))
            (rule "mul_literals" (formula "4") (term "1"))
            (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "3"))
            (rule "qeq_literals" (formula "6") (term "0"))
            (builtin "One Step Simplification" (formula "6"))
            (rule "closeFalse" (formula "6"))
         )
         (branch "Case 2"
            (rule "bsum_induction_upper" (formula "5") (term "0") (userinteraction))
            (rule "ifthenelse_split" (formula "5") (term "1,0") (userinteraction))
            (branch "f_i0 < f_i0 + (nv_0 + 1) TRUE"
               (rule "ifthenelse_split" (formula "6") (term "1,0") (userinteraction))
               (branch "f_phi(f_i0 + (nv_0 + 1) - 1) TRUE"
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "polySimp_elimSub" (formula "8") (term "1"))
                  (rule "polySimp_elimSub" (formula "1") (term "0"))
                  (rule "mul_literals" (formula "1") (term "1,0"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0"))
                  (rule "polySimp_addComm0" (formula "3") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,0,1,0"))
                  (rule "polySimp_addAssoc" (formula "3") (term "1"))
                  (rule "polySimp_addComm0" (formula "3") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0"))
                  (rule "polySimp_addLiterals" (formula "1") (term "0,0"))
                  (rule "add_zero_right" (formula "1") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "1,0"))
                  (rule "polySimp_addLiterals" (formula "7") (term "0,1,0"))
                  (rule "add_zero_right" (formula "7") (term "0,1,0"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0,0,0"))
                  (rule "add_literals" (formula "4") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "4") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "0,0"))
                  (rule "add_zero_left" (formula "4") (term "0"))
                  (rule "inEqSimp_commuteLeq" (formula "6"))
                  (rule "inEqSimp_homoInEq0" (formula "5"))
                  (rule "polySimp_addComm1" (formula "5") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                  (rule "add_literals" (formula "5") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "5") (term "1,0,0"))
                  (rule "add_zero_right" (formula "5") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_invertInEq0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "times_zero_2" (formula "4") (term "1"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                  (rule "mul_literals" (formula "4") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
                  (rule "andLeft" (formula "7"))
                  (rule "inEqSimp_homoInEq1" (formula "7"))
                  (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                  (rule "add_literals" (formula "7") (term "1,1,0"))
                  (rule "times_zero_1" (formula "7") (term "1,0"))
                  (rule "add_zero_right" (formula "7") (term "0"))
                  (rule "leq_literals" (formula "7"))
                  (rule "closeFalse" (formula "7"))
               )
               (branch "f_phi(f_i0 + (nv_0 + 1) - 1) FALSE"
                  (rule "polySimp_elimSub" (formula "8") (term "1"))
                  (rule "polySimp_elimSub" (formula "7") (term "1,0,0"))
                  (rule "mul_literals" (formula "7") (term "1,1,0,0"))
                  (rule "polySimp_elimSub" (formula "6") (term "0"))
                  (rule "mul_literals" (formula "6") (term "1,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "2") (term "1,1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1"))
                  (rule "polySimp_addComm0" (formula "8") (term "1"))
                  (rule "polySimp_addComm0" (formula "7") (term "1,0,1,0,0"))
                  (rule "polySimp_addComm0" (formula "6") (term "1,0,0"))
                  (rule "polySimp_addComm0" (formula "7") (term "0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "1"))
                  (rule "polySimp_addComm0" (formula "1") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "2") (term "1"))
                  (rule "polySimp_addComm0" (formula "2") (term "0,1"))
                  (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "6") (term "0"))
                  (rule "polySimp_addLiterals" (formula "6") (term "0,0"))
                  (rule "add_zero_right" (formula "6") (term "0,0"))
                  (rule "polySimp_addAssoc" (formula "7") (term "0,1,1,0"))
                  (rule "polySimp_addComm1" (formula "7") (term "1,1,0"))
                  (rule "polySimp_addLiterals" (formula "7") (term "0,1,1,0"))
                  (rule "add_zero_right" (formula "7") (term "0,1,1,0"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "2"))
                  (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1,0,0"))
                  (rule "mul_literals" (formula "2") (term "0,0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                  (rule "polySimp_addComm1" (formula "2") (term "0"))
                  (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                  (rule "add_literals" (formula "2") (term "0,0,0,0"))
                  (rule "add_zero_left" (formula "2") (term "0,0,0"))
                  (rule "polySimp_pullOutFactor2" (formula "2") (term "0,0"))
                  (rule "add_literals" (formula "2") (term "1,0,0"))
                  (rule "times_zero_1" (formula "2") (term "0,0"))
                  (rule "add_zero_left" (formula "2") (term "0"))
                  (rule "inEqSimp_leqRight" (formula "8"))
                  (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                  (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "polySimp_addAssoc" (formula "1") (term "0"))
                  (rule "polySimp_addComm1" (formula "1") (term "0,0"))
                  (rule "add_literals" (formula "1") (term "0,0,0"))
                  (rule "inEqSimp_commuteLeq" (formula "5"))
                  (rule "inEqSimp_homoInEq0" (formula "4"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                  (rule "add_literals" (formula "4") (term "1,1,0,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0,0"))
                  (rule "add_zero_right" (formula "4") (term "0,0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                  (rule "polySimp_mulComm0" (formula "2") (term "1"))
                  (rule "polySimp_rightDist" (formula "2") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                  (rule "polySimp_rightDist" (formula "2") (term "0,1"))
                  (rule "mul_literals" (formula "2") (term "0,0,1"))
                  (rule "inEqSimp_invertInEq0" (formula "3"))
                  (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                  (rule "times_zero_2" (formula "3") (term "1"))
                  (rule "polySimp_elimOne" (formula "3") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                  (rule "mul_literals" (formula "3") (term "1"))
                  (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "1"))
                  (rule "andLeft" (formula "6"))
                  (rule "inEqSimp_homoInEq1" (formula "6"))
                  (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                  (rule "add_literals" (formula "6") (term "1,1,0"))
                  (rule "times_zero_1" (formula "6") (term "1,0"))
                  (rule "add_zero_right" (formula "6") (term "0"))
                  (rule "leq_literals" (formula "6"))
                  (rule "closeFalse" (formula "6"))
               )
            )
            (branch "f_i0 < f_i0 + (nv_0 + 1) FALSE"
               (rule "add_zero_right" (formula "6") (term "0"))
               (rule "polySimp_elimSub" (formula "7") (term "1"))
               (rule "polySimp_elimSub" (formula "6") (term "1,0"))
               (rule "mul_literals" (formula "6") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "5") (term "1,1"))
               (rule "polySimp_addComm0" (formula "6") (term "1"))
               (rule "polySimp_addComm0" (formula "1") (term "1,1"))
               (rule "polySimp_addComm0" (formula "7") (term "1"))
               (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0"))
               (rule "polySimp_addAssoc" (formula "5") (term "1"))
               (rule "polySimp_addComm0" (formula "5") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "1") (term "1"))
               (rule "polySimp_addComm0" (formula "1") (term "0,1"))
               (rule "polySimp_addAssoc" (formula "6") (term "0,1,0"))
               (rule "polySimp_addComm1" (formula "6") (term "1,0"))
               (rule "polySimp_addLiterals" (formula "6") (term "0,1,0"))
               (rule "add_zero_right" (formula "6") (term "0,1,0"))
               (rule "inEqSimp_leqRight" (formula "7"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "inEqSimp_ltRight" (formula "6"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "polySimp_rightDist" (formula "1") (term "0,0,0"))
               (rule "mul_literals" (formula "1") (term "0,0,0,0"))
               (rule "polySimp_pullOutFactor2b" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "1") (term "1,0,0"))
               (rule "add_zero_right" (formula "1") (term "0,0"))
               (rule "inEqSimp_leqRight" (formula "7"))
               (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
               (rule "mul_literals" (formula "1") (term "0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
               (rule "add_literals" (formula "1") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "5"))
               (rule "inEqSimp_homoInEq0" (formula "4"))
               (rule "polySimp_addComm1" (formula "4") (term "0"))
               (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
               (rule "add_literals" (formula "4") (term "1,1,0,0"))
               (rule "times_zero_1" (formula "4") (term "1,0,0"))
               (rule "add_zero_right" (formula "4") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1"))
               (rule "polySimp_rightDist" (formula "3") (term "1"))
               (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
               (rule "polySimp_elimOne" (formula "3") (term "1,1"))
               (rule "polySimp_rightDist" (formula "3") (term "0,1"))
               (rule "mul_literals" (formula "3") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial1" (formula "2"))
               (rule "polySimp_mulLiterals" (formula "2") (term "0"))
               (rule "polySimp_elimOne" (formula "2") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1"))
               (rule "polySimp_rightDist" (formula "1") (term "1"))
               (rule "mul_literals" (formula "1") (term "0,1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
               (rule "polySimp_elimOne" (formula "1") (term "1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "4"))
               (rule "mul_literals" (formula "4") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "1"))
               (rule "andLeft" (formula "7"))
               (rule "inEqSimp_homoInEq1" (formula "7"))
               (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
               (rule "add_literals" (formula "7") (term "1,1,0"))
               (rule "times_zero_1" (formula "7") (term "1,0"))
               (rule "add_zero_right" (formula "7") (term "0"))
               (rule "leq_literals" (formula "7"))
               (rule "closeFalse" (formula "7"))
            )
         )
      )
      (branch "Use Case"
         (rule "instAll" (formula "2") (term "1,1") (ifseqformula "1") (userinteraction))
         (rule "impLeft" (formula "1") (userinteraction))
         (branch "Case 1"
            (rule "impRight" (formula "3") (userinteraction))
            (rule "polySimp_elimSub" (formula "3") (term "0"))
            (rule "polySimp_elimSub" (formula "4") (term "1"))
            (rule "polySimp_addComm0" (formula "3") (term "0"))
            (rule "polySimp_addComm0" (formula "4") (term "1"))
            (rule "inEqSimp_geqRight" (formula "3"))
            (rule "times_zero_1" (formula "1") (term "1,0,0"))
            (rule "add_zero_right" (formula "1") (term "0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0"))
            (rule "inEqSimp_leqRight" (formula "4"))
            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
            (rule "polySimp_mulAssoc" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_mulComm0" (formula "1") (term "0,0,1,0,0"))
            (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
            (rule "inEqSimp_commuteLeq" (formula "3"))
            (rule "inEqSimp_homoInEq0" (formula "4") (term "0,1,0"))
            (rule "polySimp_addComm1" (formula "4") (term "0,0,1,0"))
            (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,1,0"))
            (rule "add_literals" (formula "4") (term "1,0,0,0,1,0"))
            (rule "times_zero_1" (formula "4") (term "0,0,0,1,0"))
            (rule "add_zero_left" (formula "4") (term "0,0,1,0"))
            (rule "inEqSimp_sepPosMonomial0" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1"))
            (rule "polySimp_rightDist" (formula "2") (term "1"))
            (rule "mul_literals" (formula "2") (term "0,1"))
            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
            (rule "polySimp_mulComm0" (formula "1") (term "1"))
            (rule "polySimp_rightDist" (formula "1") (term "1"))
            (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
            (rule "polySimp_elimOne" (formula "1") (term "1,1"))
            (rule "polySimp_rightDist" (formula "1") (term "0,1"))
            (rule "mul_literals" (formula "1") (term "0,0,1"))
            (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "3"))
            (rule "andLeft" (formula "2"))
            (rule "inEqSimp_homoInEq1" (formula "2"))
            (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
            (rule "polySimp_rightDist" (formula "2") (term "1,0"))
            (rule "mul_literals" (formula "2") (term "0,1,0"))
            (rule "polySimp_addAssoc" (formula "2") (term "0"))
            (rule "polySimp_addComm0" (formula "2") (term "0,0"))
            (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
            (rule "add_literals" (formula "2") (term "1,1,0"))
            (rule "times_zero_1" (formula "2") (term "1,0"))
            (rule "add_zero_right" (formula "2") (term "0"))
            (rule "leq_literals" (formula "2"))
            (rule "closeFalse" (formula "2"))
         )
         (branch "Case 2"
            (rule "impRight" (formula "3") (userinteraction))
            (rule "impLeft" (formula "2") (userinteraction))
            (branch "Case 1"
               (rule "polySimp_elimSub" (formula "3") (term "1,1"))
               (rule "polySimp_elimSub" (formula "4") (term "1"))
               (rule "polySimp_addComm0" (formula "3") (term "1,1"))
               (rule "polySimp_addComm0" (formula "4") (term "1"))
               (rule "polySimp_addAssoc" (formula "3") (term "1"))
               (rule "polySimp_pullOutFactor1" (formula "3") (term "0,1"))
               (rule "add_literals" (formula "3") (term "1,0,1"))
               (rule "times_zero_1" (formula "3") (term "0,1"))
               (rule "add_zero_left" (formula "3") (term "1"))
               (rule "close" (formula "3") (ifseqformula "1"))
            )
            (branch "Case 2"
               (rule "sub" (formula "2") (term "1,1,0") (userinteraction))
               (rule "rotate_params" (formula "2") (term "1,0") (userinteraction))
               (rule "add_sub_elim_right" (formula "2") (term "1,1,0") (userinteraction))
               (rule "add_zero_right" (formula "2") (term "1,0") (userinteraction))
               (rule "closeAntec" (formula "2") (ifseqformula "4") (userinteraction))
            )
         )
      )
   )
)
)

}
