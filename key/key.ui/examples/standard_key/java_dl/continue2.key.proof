\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Sun Jun 23 17:39:22 CEST 2019
[Labels]UseOriginLabels=true
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off , transactions-transactions\\:transactionsOn , throughout-throughout\\:toutOn , transactionAbort-transactionAbort\\:abortOn , nullPointerPolicy-nullPointerPolicy\\:nullCheck
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\classpath "classpath";
\javaSource "testcontext_java";

\programVariables {
  int i;
}

\problem {
\<{
    i=ContinueLabel.test2();
  }\> i = Z(6(#))

}

\proof {
(keyLog "0" (keyUser "bubel" ) (keyVersion "f62b517e19"))

(autoModeTime "190")

(branch "dummy ID"
(rule "staticMethodCallStaticWithAssignmentViaTypereference" (formula "1") (inst "#v0=x"))
(rule "variableDeclaration" (formula "1") (newnames "x"))
(rule "methodBodyExpand" (formula "1") (newnames "heapBefore_test2,savedHeapBefore_test2"))
 (builtin "One Step Simplification" (formula "1"))
(rule "variableDeclarationMult" (formula "1"))
(rule "variableDeclarationAssign" (formula "1"))
(rule "variableDeclaration" (formula "1") (newnames "x_1"))
(rule "assignment" (formula "1"))
(rule "variableDeclarationMult" (formula "1") (term "1"))
(rule "variableDeclarationAssign" (formula "1") (term "1"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "y"))
(rule "assignment" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "variableDeclarationAssign" (formula "1") (term "1"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "z"))
(rule "assignment" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "blockEmpty" (formula "1") (term "1"))
(rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label1") (inst "#innerLabel=_label0"))
(rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
(rule "variableDeclaration" (formula "1") (term "1") (newnames "x_2"))
(rule "greater_than_comparison_simple" (formula "1") (term "1"))
 (builtin "One Step Simplification" (formula "1"))
(rule "greater_literals" (formula "1") (term "0,0,1,0"))
 (builtin "One Step Simplification" (formula "1"))
(rule "ifSplit" (formula "1"))
(branch "if x_2 true"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "postincrement" (formula "1") (term "1"))
   (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_2"))
   (rule "variableDeclarationAssign" (formula "1") (term "1"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_3"))
   (rule "remove_parentheses_right" (formula "1") (term "1"))
   (rule "assignmentAdditionInt" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
   (rule "add_zero_left" (formula "1") (term "0,1,0"))
   (rule "widening_identity_cast_5" (formula "1") (term "1"))
   (rule "assignment" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "unusedLabel" (formula "1") (term "1"))
   (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label3") (inst "#innerLabel=_label2"))
   (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
   (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_4"))
   (rule "greater_than_comparison_simple" (formula "1") (term "1"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "greater_literals" (formula "1") (term "0,0,1,0"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "ifSplit" (formula "1"))
   (branch "if x_4 true"
       (builtin "One Step Simplification" (formula "2"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "true_left" (formula "1"))
      (rule "postdecrement" (formula "1") (term "1"))
      (rule "compound_subtraction_1" (formula "1") (term "1") (inst "#v=x_2"))
      (rule "variableDeclarationAssign" (formula "1") (term "1"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_5"))
      (rule "widening_identity_cast_5" (formula "1") (term "1"))
      (rule "assignment" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "assignmentSubtractionInt" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "translateJavaSubInt" (formula "1") (term "0,1,0"))
      (rule "sub_literals" (formula "1") (term "0,1,0"))
      (rule "unusedLabel" (formula "1") (term "1"))
      (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label5") (inst "#innerLabel=_label4"))
      (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
      (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_6"))
      (rule "equality_comparison_simple" (formula "1") (term "1"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "ifSplit" (formula "1"))
      (branch "if x_6 true"
          (builtin "One Step Simplification" (formula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "true_left" (formula "1"))
         (rule "blockBreakNoLabel" (formula "1") (term "1"))
         (rule "tryFinallyBreakLabel" (formula "1") (term "1"))
         (rule "postincrement" (formula "1") (term "1"))
         (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_1"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_7"))
         (rule "remove_parentheses_right" (formula "1") (term "1"))
         (rule "assignmentAdditionInt" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
         (rule "add_literals" (formula "1") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "1") (term "1"))
         (rule "assignment" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "blockBreakNoLabel" (formula "1") (term "1"))
         (rule "tryFinallyBreakLabel" (formula "1") (term "1"))
         (rule "postincrement" (formula "1") (term "1"))
         (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_1"))
         (rule "variableDeclarationAssign" (formula "1") (term "1"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_8"))
         (rule "remove_parentheses_right" (formula "1") (term "1"))
         (rule "assignmentAdditionInt" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
         (rule "add_literals" (formula "1") (term "0,1,0"))
         (rule "widening_identity_cast_5" (formula "1") (term "1"))
         (rule "assignment" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "blockBreakLabel" (formula "1") (term "1"))
         (rule "blockEmpty" (formula "1") (term "1"))
         (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label7") (inst "#innerLabel=_label6"))
         (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
         (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_9"))
         (rule "greater_than_comparison_simple" (formula "1") (term "1"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "greater_literals" (formula "1") (term "0,0,1,0"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "ifSplit" (formula "1"))
         (branch "if x_9 true"
             (builtin "One Step Simplification" (formula "2"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "true_left" (formula "1"))
            (rule "postincrement" (formula "1") (term "1"))
            (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_2"))
            (rule "variableDeclarationAssign" (formula "1") (term "1"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_10"))
            (rule "remove_parentheses_right" (formula "1") (term "1"))
            (rule "assignmentAdditionInt" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
            (rule "add_literals" (formula "1") (term "0,1,0"))
            (rule "widening_identity_cast_5" (formula "1") (term "1"))
            (rule "assignment" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "unusedLabel" (formula "1") (term "1"))
            (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label9") (inst "#innerLabel=_label8"))
            (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
            (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_11"))
            (rule "greater_than_comparison_simple" (formula "1") (term "1"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "greater_literals" (formula "1") (term "0,0,1,0"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "ifSplit" (formula "1"))
            (branch "if x_11 true"
                (builtin "One Step Simplification" (formula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "closeFalse" (formula "1"))
            )
            (branch "if x_11 false"
                (builtin "One Step Simplification" (formula "2"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "true_left" (formula "1"))
               (rule "tryFinallyEmpty" (formula "1") (term "1"))
               (rule "postincrement" (formula "1") (term "1"))
               (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_1"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_12"))
               (rule "remove_parentheses_right" (formula "1") (term "1"))
               (rule "assignmentAdditionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
               (rule "add_literals" (formula "1") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "blockEmpty" (formula "1") (term "1"))
               (rule "unusedLabel" (formula "1") (term "1"))
               (rule "postdecrement" (formula "1") (term "1"))
               (rule "compound_subtraction_1" (formula "1") (term "1") (inst "#v=x_2"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_13"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "assignmentSubtractionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaSubInt" (formula "1") (term "0,1,0"))
               (rule "sub_literals" (formula "1") (term "0,1,0"))
               (rule "postincrement" (formula "1") (term "1"))
               (rule "compound_int_cast_expression" (formula "1") (term "1") (inst "#v=x_1"))
               (rule "variableDeclarationAssign" (formula "1") (term "1"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_14"))
               (rule "remove_parentheses_right" (formula "1") (term "1"))
               (rule "assignmentAdditionInt" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "translateJavaAddInt" (formula "1") (term "0,1,0"))
               (rule "add_literals" (formula "1") (term "0,1,0"))
               (rule "widening_identity_cast_5" (formula "1") (term "1"))
               (rule "assignment" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "blockEmpty" (formula "1") (term "1"))
               (rule "loopUnwind" (formula "1") (term "1") (inst "#outerLabel=_label11") (inst "#innerLabel=_label10"))
               (rule "ifUnfold" (formula "1") (term "1") (inst "#boolv=x_2"))
               (rule "variableDeclaration" (formula "1") (term "1") (newnames "x_15"))
               (rule "greater_than_comparison_simple" (formula "1") (term "1"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "greater_literals" (formula "1") (term "0,0,1,0"))
                (builtin "One Step Simplification" (formula "1"))
               (rule "ifSplit" (formula "1"))
               (branch "if x_15 true"
                   (builtin "One Step Simplification" (formula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeFalse" (formula "1"))
               )
               (branch "if x_15 false"
                   (builtin "One Step Simplification" (formula "2"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "true_left" (formula "1"))
                  (rule "blockEmptyLabel" (formula "1") (term "1"))
                  (rule "blockEmpty" (formula "1") (term "1"))
                  (rule "methodCallReturn" (formula "1") (term "1"))
                  (rule "assignment" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "methodCallEmpty" (formula "1") (term "1"))
                  (rule "blockEmpty" (formula "1") (term "1"))
                  (rule "assignment" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "emptyModality" (formula "1") (term "1"))
                   (builtin "One Step Simplification" (formula "1"))
                  (rule "closeTrue" (formula "1"))
               )
            )
         )
         (branch "if x_9 false"
             (builtin "One Step Simplification" (formula "2"))
             (builtin "One Step Simplification" (formula "1"))
            (rule "closeFalse" (formula "1"))
         )
      )
      (branch "if x_6 false"
          (builtin "One Step Simplification" (formula "2"))
          (builtin "One Step Simplification" (formula "1"))
         (rule "closeFalse" (formula "1"))
      )
   )
   (branch "if x_4 false"
       (builtin "One Step Simplification" (formula "2"))
       (builtin "One Step Simplification" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
)
(branch "if x_2 false"
    (builtin "One Step Simplification" (formula "2"))
    (builtin "One Step Simplification" (formula "1"))
   (rule "closeFalse" (formula "1"))
)
)
}
