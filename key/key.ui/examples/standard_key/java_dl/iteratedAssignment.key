
/**
@provable automatic
@statistic nodes 422
@statistic branches 12
@author Sebastian Wirkert (doc)

This example demonstrates the evaluation order of iterated assignments and complex expressions.
In Java, the evaluation order is strict from the left to the right.<br>
A post increment expression returns the old value of the location which is incremented afterwards.

*/

\settings {
"#Proof-Settings-Config-File
#Fri Sep 11 22:56:40 CEST 2009
[Choice]DefaultChoices=assertions-assertions\:on , programRules-programRules\:Java , intRules-intRules\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\:disableStaticInitialisation , runtimeExceptions-runtimeExceptions\:allow
"
}


\programVariables {
  int[] a;
  int b,c;
}

\problem {
        wellFormed(heap)
        ->
	\<{ 
	  a = new int [3]; b = 0;
	  c = a[b++] = a[b++]= b++; }
         \> (c = 2 & a[0] = 2 & a[1] = 2 & b = 3)
}
