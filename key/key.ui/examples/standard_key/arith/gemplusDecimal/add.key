// This file is part of KeY - Integrated Deductive Software Design 
//
// Copyright (C) 2001-2011 Universitaet Karlsruhe (TH), Germany 
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
// Copyright (C) 2011-2013 Karlsruhe Institute of Technology, Germany 
//                         Technical University Darmstadt, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General 
// Public License. See LICENSE.TXT for details.
// 



\settings {
"#Proof-Settings-Config-File
#Sun Jul 01 13:50:01 CEST 2007
[General]SoundNotification=false
[DecisionProcedure]SmtBenchmarkArchiving=false
[View]FontIndex=0
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_EXPAND
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NONE
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[General]SuggestiveVarNames=false
[View]ShowWholeTaclet=false
[General]ProofAssistant=false
[View]MaxTooltipLines=40
[General]DnDDirectionSensitive=false
[SimultaneousUpdateSimplifier]EagerSimplification=false
[General]StupidMode=false
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=100000

[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_EXPAND
[Choice]DefaultChoices=transactions-transactions\:transactionsOn , programRules-programRules\:Java , throughout-throughout\:toutOn , transactionAbort-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation , intRules-intRules\:javaSemantics , assertions-assertions\:on , nullPointerPolicy-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtZipProblemDir=false
[Model]Source=1
[Choice]Choices=transactions-transactions\:transactionsOff-transactions\:transactionsOn , programRules-programRules\:ODL-programRules\:Java , transactionAbort-transactionAbort\:abortOff-transactionAbort\:abortOn , initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , intRules-intRules\:arithmeticSemanticsCheckingOF-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF , assertions-assertions\:safe-assertions\:off-assertions\:on , nullPointerPolicy-nullPointerPolicy\:noNullCheck-nullPointerPolicy\:nullCheck
[DecisionProcedure]SmtUseQuantifiers=true
[View]HideIntermediateProofsteps=false
[DecisionProcedure]=SIMPLIFY
[General]OuterRenaming=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_NORMAL
"
}



\javaSource "src/";

\programVariables {
	Decimal d;
	short e; short f;
}

\functions {
	int iP; int dP;
}

\problem {
	d != null
->
	inShort(e) -> inShort(f) -> inShort(iP) -> inShort(dP)
->
	( -Decimal.PRECISION < f & f < Decimal.PRECISION &
	  -Decimal.PRECISION < dP & dP < Decimal.PRECISION &
	  e + iP < 32767 & -32768 < e + iP )
->
	{ d.intPart := iP}{d.decPart := dP }
	\<{ d.add(e, f)@Decimal; }\>
	( d.intPart * Decimal.PRECISION + d.decPart =
	  iP * Decimal.PRECISION + dP + e * Decimal.PRECISION + f &
	  -Decimal.PRECISION < d.decPart & d.decPart < Decimal.PRECISION )
}
