\rules {

	sideEffectFreeFunction {
		\schemaVar \program MethodName[name=arrayFct] #arrayFct;
		\schemaVar \formula post;
		\schemaVar \program Variable #v, #a;
		\schemaVar \program NonPrimitiveType[name=java.lang.Object] #javaObjectType;


		\find ( \<{.. #v = #javaObjectType.#arrayFct(#a)@#javaObjectType; ...}\>post)
		\replacewith( {#v:=java.lang.Object::arrayFct(heap, #a)}\<{.. ...}\>post)
		\heuristics (concrete)
	};

}

\programVariables {
  int i;
  int j;
  int k;
  int[] a;
  int[] b;
  int sum;
  int x;
  boolean cond;
  int M;
  int N;
}

\problem {
wellFormed(heap) & a!=null &
noW(arrayRange(a,0,a.length-1)) & noR(arrayRange(a,0,a.length-1)) & a.length > 10
->{i:=0}
\<{while (i<=a.length-1) {
    a[i] = Object.arrayFct(a[i]);
    i++;}
}\\>true
}