\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Fri Nov 09 19:00:53 CET 2018
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , intRules-intRules\\:arithmeticSemanticsIgnoringOF , initialisation-initialisation\\:disableStaticInitialisation , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:ban , JavaCard-JavaCard\\:on , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , permissions-permissions\\:off , moreSeqRules-moreSeqRules\\:on , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[StrategyProperty]MPS_OPTIONS_KEY=MPS_MERGE
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[Strategy]Timeout=-1
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\javaSource "";

\proofObligation "#Proof Obligation Settings
#Fri Nov 09 19:00:53 CET 2018
contract=Quicksort[Quicksort\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
name=Quicksort[Quicksort\\:\\:sort([I,int,int)].JML normal_behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "root" ) (keyVersion "d8e4b96a41a38b4f772fbf45dd18a193fe0340b4"))

(autoModeTime "29186")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "array,from,to,self,exc,heapAtPre,o,f"))
(rule "translateJavaAddInt" (formula "1") (term "0,1,0,0"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,1,0,1,0,1,1,1,0"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,0,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,1,0,1,1,1,1,0"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,0,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,2,1,1,0,1,0,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "1,0,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaAddInt" (formula "1") (term "0,2,1,1,0,1,0,1,1,1,0,0,0,1,1"))
(rule "translateJavaSubInt" (formula "1") (term "0,0,1,0,0"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "2"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "4"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "6"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "8"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "10"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "12"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "13") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "12"))
(builtin "One Step Simplification" (formula "4"))
(rule "polySimp_elimSub" (formula "13") (term "0,2,1,1,0,1,0,1,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,0,2,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "13") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "mul_literals" (formula "13") (term "1,1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_elimSub" (formula "5") (term "0,0"))
(rule "polySimp_elimSub" (formula "8") (term "0,2,1,1,0,1"))
(rule "mul_literals" (formula "8") (term "1,0,2,1,1,0,1"))
(rule "polySimp_elimSub" (formula "9") (term "1,0"))
(rule "mul_literals" (formula "9") (term "1,1,0"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0,0,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0,1,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "0,2,1,1,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "0,2,1,1,0,1,0,1,1,0,0,0,1"))
(rule "polySimp_addComm0" (formula "13") (term "1,0,0,1,1,1,0,0,0,1"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "polySimp_addComm0" (formula "8") (term "0,2,1,1,0,1"))
(rule "polySimp_addComm0" (formula "9") (term "1,0"))
(rule "polySimp_addComm0" (formula "5") (term "0,0"))
(rule "polySimp_addComm1" (formula "5") (term "0"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,1,0,1,1,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0,0,1,0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "6"))
(rule "inEqSimp_commuteLeq" (formula "8") (term "0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "9") (term "0,0,0,1"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,0,1"))
(rule "assignment" (formula "13") (term "1"))
(builtin "One Step Simplification" (formula "13"))
(rule "array2seqDef" (formula "13") (term "0,0,0,0,0,1") (inst "u=u"))
(rule "array2seqDef" (formula "13") (term "1,0,0,0,0,1") (inst "u=u"))
(rule "elementOfArrayRange" (formula "13") (term "0,0,0,0,1,0,1") (inst "iv=iv"))
(rule "inEqSimp_commuteLeq" (formula "13") (term "1,0,0,1,0,0,0,0,1,0,1"))
(rule "Class_invariant_axiom_for_Quicksort" (formula "10") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "true_left" (formula "10"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_sort,savedHeapBefore_sort"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "ifUnfold" (formula "12") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
   (rule "less_than_comparison_simple" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "arrayLengthNotNegative" (formula "7") (term "1"))
   (rule "arrayLengthIsAShort" (formula "8") (term "1"))
   (builtin "One Step Simplification" (formula "8"))
   (rule "true_left" (formula "8"))
   (rule "ifSplit" (formula "13"))
   (branch "if x true"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "variableDeclarationAssign" (formula "14") (term "1"))
      (rule "variableDeclaration" (formula "14") (term "1") (newnames "splitPoint"))
      (builtin "Use Operation Contract" (formula "14") (newnames "heapBefore_split,result,exc_0,heapAfter_split,anon_heap_split") (contract "Quicksort[Quicksort::split([I,int,int)].JML normal_behavior operation contract.0"))
      (branch "Post (split)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "translateJavaSubInt" (formula "13") (term "0,2,0,1,0,1,0,1,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "13") (term "1,0,0,1,1,1,1,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0,1,0,1,1,1,1,1,0,1,1"))
         (rule "andLeft" (formula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "16"))
         (rule "andLeft" (formula "18"))
         (rule "andLeft" (formula "19"))
         (rule "andLeft" (formula "20"))
         (rule "andLeft" (formula "21"))
         (rule "polySimp_elimSub" (formula "20") (term "0,2,0,1,0,1"))
         (rule "mul_literals" (formula "20") (term "1,0,2,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "21") (term "1,0"))
         (rule "mul_literals" (formula "21") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "21") (term "0,2,1,1,0,1"))
         (rule "polySimp_addComm0" (formula "20") (term "0,2,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "21") (term "1,0"))
         (rule "inEqSimp_commuteLeq" (formula "17"))
         (rule "inEqSimp_commuteLeq" (formula "16"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0,1"))
         (rule "assignment" (formula "25") (term "1"))
         (builtin "One Step Simplification" (formula "25"))
         (rule "array2seqDef" (formula "15") (term "0") (inst "u=u"))
         (rule "array2seqDef" (formula "15") (term "1") (inst "u=u"))
         (rule "narrowSelectArrayType" (formula "15") (term "2,1") (ifseqformula "2") (ifseqformula "24"))
         (rule "pullOutSelect" (formula "18") (term "1,1,0") (inst "selectSK=arr_0"))
         (rule "applyEq" (formula "20") (term "1,1,0") (ifseqformula "18"))
         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
         (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
         (rule "replace_known_left" (formula "18") (term "0,0,0") (ifseqformula "16"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0"))
         (rule "replace_known_left" (formula "18") (term "0,0") (ifseqformula "17"))
         (builtin "One Step Simplification" (formula "18"))
         (rule "applyEqReverse" (formula "19") (term "1,1,0") (ifseqformula "18"))
         (rule "applyEqReverse" (formula "20") (term "1,1,0") (ifseqformula "18"))
         (rule "hideAuxiliaryEq" (formula "18"))
         (rule "pullOutSelect" (formula "21") (term "1,1,0,1") (inst "selectSK=arr_1"))
         (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "25")) (ifInst ""  (formula "5")))
         (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
         (builtin "One Step Simplification" (formula "21"))
         (rule "pullOutSelect" (formula "20") (term "0,1,0,1") (inst "selectSK=arr_2"))
         (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "13"))
         (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "26")) (ifInst ""  (formula "5")))
         (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
         (builtin "One Step Simplification" (formula "20"))
         (rule "inEqSimp_commuteLeq" (formula "20") (term "1,0,0"))
         (rule "Class_invariant_axiom_for_Quicksort" (formula "24") (inst "sk=sk_1") (ifseqformula "4"))
         (branch "Use Axiom"
            (rule "true_left" (formula "24"))
            (rule "methodCallUnfoldArguments" (formula "26") (term "1"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "var"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "var_1"))
            (rule "assignment" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "variableDeclarationAssign" (formula "26") (term "1"))
            (rule "variableDeclaration" (formula "26") (term "1") (newnames "var_2"))
            (rule "assignmentSubtractionInt" (formula "26") (term "1"))
            (builtin "One Step Simplification" (formula "26"))
            (rule "translateJavaSubInt" (formula "26") (term "0,1,0"))
            (rule "polySimp_elimSub" (formula "26") (term "0,1,0"))
            (rule "mul_literals" (formula "26") (term "1,0,1,0"))
            (rule "polySimp_addComm0" (formula "26") (term "0,1,0"))
            (builtin "Use Operation Contract" (formula "26") (newnames "heapBefore_sort_0,exc_1,heapAfter_sort,anon_heap_sort") (contract "Quicksort[Quicksort::sort([I,int,int)].JML normal_behavior operation contract.0"))
            (branch "Post (sort)"
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "translateJavaSubInt" (formula "25") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,0,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "25") (term "1,0,0,1,1,1,0,1,1"))
               (rule "andLeft" (formula "25"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "27"))
               (rule "andLeft" (formula "28"))
               (rule "andLeft" (formula "29"))
               (rule "andLeft" (formula "30"))
               (rule "polySimp_elimSub" (formula "29") (term "0,2,1,1,0,1"))
               (rule "mul_literals" (formula "29") (term "1,0,2,1,1,0,1"))
               (rule "polySimp_elimSub" (formula "30") (term "1,0"))
               (rule "mul_literals" (formula "30") (term "1,1,0"))
               (rule "polySimp_addComm0" (formula "28") (term "0,2,1,1,0"))
               (rule "polySimp_addComm1" (formula "30") (term "0,2,1,1,0,1"))
               (rule "add_literals" (formula "30") (term "0,0,2,1,1,0,1"))
               (rule "add_zero_left" (formula "30") (term "0,2,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "29") (term "0,2,1,1,0,1"))
               (rule "polySimp_addComm0" (formula "30") (term "1,0"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
               (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0,1"))
               (rule "inEqSimp_commuteLeq" (formula "28") (term "1,0"))
               (rule "blockEmpty" (formula "34") (term "1"))
               (rule "array2seqDef" (formula "27") (term "0") (inst "u=u"))
               (rule "array2seqDef" (formula "27") (term "1") (inst "u=u"))
               (rule "pullOutSelect" (formula "30") (term "1,1,0,1") (inst "selectSK=arr_3"))
               (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "34")))
               (rule "replaceKnownSelect_taclet000_0" (formula "30") (term "2,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "30") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "30") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
               (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "30"))
               (rule "pullOutSelect" (formula "29") (term "1,1,0,1") (inst "selectSK=arr_4"))
               (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "25"))
               (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
               (rule "replaceKnownSelect_taclet000_3" (formula "29") (term "2,0"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "13"))
               (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
               (builtin "One Step Simplification" (formula "29"))
               (rule "Class_invariant_axiom_for_Quicksort" (formula "33") (inst "sk=sk_2") (ifseqformula "4"))
               (branch "Use Axiom"
                  (rule "true_left" (formula "33"))
                  (rule "commute_and" (formula "28") (term "0,0"))
                  (rule "methodCallUnfoldArguments" (formula "35") (term "1"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "var_3"))
                  (rule "assignment" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "var_4"))
                  (rule "assignmentAdditionInt" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (rule "translateJavaAddInt" (formula "35") (term "0,1,0"))
                  (rule "polySimp_addComm0" (formula "35") (term "0,1,0"))
                  (rule "variableDeclarationAssign" (formula "35") (term "1"))
                  (rule "variableDeclaration" (formula "35") (term "1") (newnames "var_5"))
                  (rule "assignment" (formula "35") (term "1"))
                  (builtin "One Step Simplification" (formula "35"))
                  (builtin "Use Operation Contract" (formula "35") (newnames "heapBefore_sort_1,exc_2,heapAfter_sort_0,anon_heap_sort_0") (contract "Quicksort[Quicksort::sort([I,int,int)].JML normal_behavior operation contract.0"))
                  (branch "Post (sort)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "translateJavaSubInt" (formula "34") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0,0,1,0,1,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "1,0,0,1,1,1,0,1,1"))
                     (rule "andLeft" (formula "34"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "36"))
                     (rule "andLeft" (formula "37"))
                     (rule "andLeft" (formula "38"))
                     (rule "andLeft" (formula "39"))
                     (rule "polySimp_elimSub" (formula "38") (term "0,2,1,1,0,1"))
                     (rule "mul_literals" (formula "38") (term "1,0,2,1,1,0,1"))
                     (rule "polySimp_elimSub" (formula "39") (term "1,0"))
                     (rule "mul_literals" (formula "39") (term "1,1,0"))
                     (rule "polySimp_addComm0" (formula "37") (term "0,2,1,1,0"))
                     (rule "polySimp_addComm0" (formula "39") (term "0,2,1,1,0,1"))
                     (rule "polySimp_addComm1" (formula "38") (term "0,2,1,1,0,1"))
                     (rule "add_literals" (formula "38") (term "0,0,2,1,1,0,1"))
                     (rule "add_zero_left" (formula "38") (term "0,2,1,1,0,1"))
                     (rule "polySimp_addComm0" (formula "39") (term "1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0,0,1"))
                     (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0"))
                     (rule "array2seqDef" (formula "36") (term "1") (inst "u=u"))
                     (rule "array2seqDef" (formula "36") (term "0") (inst "u=u"))
                     (rule "pullOutSelect" (formula "39") (term "1,1,0,1") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "43")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "39") (term "0,0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0"))
                     (builtin "One Step Simplification" (formula "39"))
                     (rule "pullOutSelect" (formula "38") (term "1,1,0,1") (inst "selectSK=arr_6"))
                     (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "34"))
                     (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "44")))
                     (rule "replaceKnownSelect_taclet00000_4" (formula "38") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "38") (term "0,0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "inEqSimp_commuteLeq" (formula "38") (term "1,0,0"))
                     (rule "replace_known_left" (formula "38") (term "1,0,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "38"))
                     (rule "pullOutSelect" (formula "40") (term "2,0") (inst "selectSK=arr_7"))
                     (rule "simplifySelectOfAnonEQ" (formula "40") (ifseqformula "25"))
                     (builtin "One Step Simplification" (formula "40") (ifInst ""  (formula "45")))
                     (rule "replaceKnownSelect_taclet000_2" (formula "40") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "40") (term "0,1,0,0") (ifseqformula "13"))
                     (rule "replace_known_left" (formula "40") (term "0,0,1,0,0") (ifseqformula "5"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "elementOfArrayRangeConcrete" (formula "40") (term "0,0"))
                     (builtin "One Step Simplification" (formula "40"))
                     (rule "Class_invariant_axiom_for_Quicksort" (formula "43") (inst "sk=sk_3") (ifseqformula "4"))
                     (branch "Use Axiom"
                        (rule "true_left" (formula "43"))
                        (rule "commute_and" (formula "37") (term "0,0"))
                        (rule "methodCallEmpty" (formula "45") (term "1"))
                        (rule "tryEmpty" (formula "45") (term "1"))
                        (rule "emptyModality" (formula "45") (term "1"))
                        (rule "andRight" (formula "45"))
                        (branch
                           (rule "andRight" (formula "45"))
                           (branch
                              (rule "andRight" (formula "45"))
                              (branch
                                 (builtin "One Step Simplification" (formula "45"))
                                 (rule "seqPermSym" (formula "15"))
                                 (rule "seqPermSym" (formula "27"))
                                 (rule "seqPermSym" (formula "36"))
                                 (rule "seqPermTrans" (formula "15") (ifseqformula "27"))
                                 (rule "seqPermTrans" (formula "15") (ifseqformula "37"))
                                 (rule "seqPermSym" (formula "15"))
                                 (rule "narrowSelectArrayType" (formula "47") (term "2,1") (ifseqformula "2") (ifseqformula "46"))
                                 (rule "close" (formula "47") (ifseqformula "15"))
                              )
                              (branch
                                 (rule "andRight" (formula "45"))
                                 (branch
                                    (builtin "One Step Simplification" (formula "45"))
                                    (rule "allRight" (formula "45") (inst "sk=i_0"))
                                    (rule "impRight" (formula "45"))
                                    (rule "andLeft" (formula "1"))
                                    (rule "inEqSimp_geqRight" (formula "47"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "26") (term "0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "24") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,1"))
                                    (rule "polySimp_addComm1" (formula "24") (term "0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "35") (term "0"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "35") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "31") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "33") (term "0"))
                                    (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "13") (term "0"))
                                    (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_ltToLeq" (formula "12"))
                                    (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "12") (term "0"))
                                    (rule "inEqSimp_ltToLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "45") (term "0"))
                                    (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "45") (term "0,1,0,0,0"))
                                    (rule "inEqSimp_gtToGeq" (formula "33") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "42") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,1"))
                                    (rule "inEqSimp_gtToGeq" (formula "24") (term "0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_gtToGeq" (formula "42") (term "0"))
                                    (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_ltToLeq" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "45") (term "0,0,0"))
                                    (rule "add_literals" (formula "45") (term "0,0,0,0"))
                                    (rule "polySimp_addComm1" (formula "45") (term "0,0"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0"))
                                    (rule "add_literals" (formula "42") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "42") (term "0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "44") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "44") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "44") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "44") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "44") (term "0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "44") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "44") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "44") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "44") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "44") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "44") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "44"))
                                    (rule "applyEqReverse" (formula "45") (term "1,1,0,1") (ifseqformula "44"))
                                    (rule "hideAuxiliaryEq" (formula "44"))
                                    (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                    (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "41") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "41"))
                                    (rule "applyEqReverse" (formula "42") (term "0,1,0,0,1,0,1") (ifseqformula "41"))
                                    (rule "hideAuxiliaryEq" (formula "41"))
                                    (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                    (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                    (rule "qeq_literals" (formula "34") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "34"))
                                    (rule "applyEqReverse" (formula "35") (term "1,1,0,1") (ifseqformula "34"))
                                    (rule "applyEqReverse" (formula "41") (term "0,1,0,0,1,0,1") (ifseqformula "34"))
                                    (rule "hideAuxiliaryEq" (formula "34"))
                                    (rule "inEqSimp_homoInEq0" (formula "32") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "32") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "32") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "32") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "32") (term "0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "32"))
                                    (rule "applyEqReverse" (formula "33") (term "0,1,0,0,1,0,1") (ifseqformula "32"))
                                    (rule "hideAuxiliaryEq" (formula "32"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "23"))
                                    (rule "applyEqReverse" (formula "32") (term "0,1,0,0,1,0,1") (ifseqformula "23"))
                                    (rule "applyEqReverse" (formula "24") (term "1,0,0,1,0,1") (ifseqformula "23"))
                                    (rule "hideAuxiliaryEq" (formula "23"))
                                    (rule "polySimp_addAssoc" (formula "24") (term "0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "24") (term "0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "24") (term "1,1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "24") (term "1,0,1,0,0"))
                                    (rule "add_zero_right" (formula "24") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "24") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "24"))
                                    (rule "applyEqReverse" (formula "39") (term "2,0") (ifseqformula "24"))
                                    (rule "applyEqReverse" (formula "25") (term "1,1,0,1") (ifseqformula "24"))
                                    (rule "hideAuxiliaryEq" (formula "24"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "24") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "24") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0"))
                                    (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                    (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                    (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "22") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "0"))
                                    (rule "mul_literals" (formula "30") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                                    (rule "mul_literals" (formula "13") (term "1,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "13") (term "0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                                    (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                                    (rule "polySimp_elimOne" (formula "12") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "0"))
                                    (rule "mul_literals" (formula "23") (term "1,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                    (rule "polySimp_elimOne" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "39") (term "0"))
                                    (rule "polySimp_mulLiterals" (formula "39") (term "0,0"))
                                    (rule "polySimp_elimOne" (formula "39") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "37") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "37") (term "0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,1"))
                                    (rule "polySimp_mulComm0" (formula "30") (term "1,1,0,1"))
                                    (rule "polySimp_rightDist" (formula "30") (term "1,1,0,1"))
                                    (rule "mul_literals" (formula "30") (term "0,1,1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "1,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "23") (term "0,1,0,1"))
                                    (rule "polySimp_elimOne" (formula "23") (term "0,1,0,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "38") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "38") (term "0,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "38") (term "0,1,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "38") (term "1,0,0") (ifseqformula "20"))
                                    (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "38") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "38") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "38") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "38") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "applyEqReverse" (formula "39") (term "1,1,0,1") (ifseqformula "38"))
                                    (rule "hideAuxiliaryEq" (formula "38"))
                                    (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "4"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "2"))
                                    (rule "polySimp_addComm1" (formula "2") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "0,0,0"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                    (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "29"))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "19"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (term "1,0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_11"))
                                    (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "20"))
                                    (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "44")) (ifInst ""  (formula "12")))
                                    (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0"))
                                    (rule "replace_known_left" (formula "1") (term "1,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "1") (term "0,0") (ifseqformula "6"))
                                    (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                                    (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "1") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "1"))
                                    (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                    (rule "hideAuxiliaryEq" (formula "1"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_12"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "30"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "44")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "20"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "12"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "6"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1,0,0"))
                                    (rule "pullOutSelect" (formula "3") (term "2,0") (inst "selectSK=arr_13"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "21"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "45")) (ifInst ""  (formula "13")))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "7"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "8"))
                                    (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                    (rule "hideAuxiliaryEq" (formula "3"))
                                    (rule "nnf_imp2or" (formula "25") (term "0"))
                                    (rule "nnf_imp2or" (formula "18") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "35") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "28") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "26") (term "0"))
                                    (rule "nnf_imp2or" (formula "40") (term "0"))
                                    (rule "nnf_imp2or" (formula "17") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "33") (term "0"))
                                    (rule "nnf_imp2or" (formula "41") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "34") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                    (rule "nnf_imp2or" (formula "42") (term "0,1"))
                                    (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "26") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,0,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                    (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,1,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                    (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                    (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,1,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,1,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,1,0,0"))
                                    (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                    (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
                                    (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                    (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                    (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                    (rule "nnf_notAnd" (formula "18") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "18") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "35") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "35") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "28") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "17") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "17") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "17") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "17") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "17") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "17") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "17") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "41") (term "0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "41") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "41") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "41") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,1,1,0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "41") (term "0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "41") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "41") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "41") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "41") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "41") (term "1,0,0,0,1"))
                                    (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1,0,0,1"))
                                    (rule "mul_literals" (formula "34") (term "0,1,0,0,1,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "34") (term "0,0,1,0,0,1"))
                                    (rule "add_literals" (formula "34") (term "0,0,0,1,0,0,1"))
                                    (rule "add_zero_left" (formula "34") (term "0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "34") (term "1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "34") (term "1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "27") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "27") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,0,1"))
                                    (rule "nnf_notAnd" (formula "42") (term "0,0,1"))
                                    (rule "inEqSimp_notGeq" (formula "42") (term "0,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0,0,1"))
                                    (rule "polySimp_addAssoc" (formula "42") (term "0,0,0,0,0,1"))
                                    (rule "add_literals" (formula "42") (term "0,0,0,0,0,0,1"))
                                    (rule "add_zero_left" (formula "42") (term "0,0,0,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "0,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,0,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,0,0,0,1"))
                                    (rule "inEqSimp_notLeq" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0,0,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "1,0,0,1"))
                                    (rule "polySimp_mulComm0" (formula "42") (term "1,1,0,0,1"))
                                    (rule "polySimp_rightDist" (formula "42") (term "1,1,0,0,1"))
                                    (rule "mul_literals" (formula "42") (term "0,1,1,0,0,1"))
                                    (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0,0,1"))
                                    (rule "cut_direct" (formula "41") (term "0"))
                                    (branch "CUT: result >= 0 TRUE"
                                       (builtin "One Step Simplification" (formula "42"))
                                       (rule "cut_direct" (formula "28") (term "0"))
                                       (branch "CUT: array.length >= 2 + to TRUE"
                                          (builtin "One Step Simplification" (formula "29"))
                                          (rule "replace_known_left" (formula "44") (term "0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "44"))
                                          (rule "replace_known_left" (formula "18") (term "0") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "28"))
                                          (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "16") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "16") (term "0,0,0"))
                                          (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                          (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "16") (term "0,0"))
                                          (rule "qeq_literals" (formula "16") (term "0"))
                                          (builtin "One Step Simplification" (formula "16"))
                                          (rule "true_left" (formula "16"))
                                          (rule "cut_direct" (formula "16") (term "0"))
                                          (branch "CUT: from >= 1 TRUE"
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "replace_known_left" (formula "35") (term "0") (ifseqformula "16"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "16"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "16"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "cut_direct" (formula "35") (term "0"))
                                             (branch "CUT: array.length >= 1 + result TRUE"
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "commute_or" (formula "41") (term "0,0"))
                                                (rule "commute_or" (formula "33") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "result >= 2 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_17" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet010000000000_21" (formula "30") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000010000000000_24" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000010000000000_27" (formula "30") (term "1,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "30"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0"))
                                                   (rule "add_zero_right" (formula "30") (term "0"))
                                                   (rule "leq_literals" (formula "30"))
                                                   (rule "closeFalse" (formula "30"))
                                                )
                                                (branch "result >= 2 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "44"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                   (rule "mul_literals" (formula "22") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "6"))
                                                   (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0,0"))
                                                   (rule "qeq_literals" (formula "22") (term "0"))
                                                   (builtin "One Step Simplification" (formula "22"))
                                                   (rule "true_left" (formula "22"))
                                                   (rule "inEqSimp_exactShadow3" (formula "42") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "42") (term "0,0"))
                                                   (rule "add_zero_left" (formula "42") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "42"))
                                                   (rule "mul_literals" (formula "42") (term "1"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "result >= 1 + i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "43") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "23") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "1,1,0"))
                                                      (rule "add_literals" (formula "36") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                      (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "42") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "34") (term "0,2,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0,2,1,1,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "33") (term "1,1") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "1"))
                                                      (rule "add_literals" (formula "33") (term "0,1"))
                                                      (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "37") (term "1,0,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "26") (term "1,2,1,0") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "2,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,2,1,0"))
                                                      (rule "add_zero_left" (formula "26") (term "2,1,0"))
                                                      (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "1"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "29") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "32") (term "1,1,0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                      (rule "mul_literals" (formula "39") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "14") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "replaceKnownSelect_taclet010000000000_19" (formula "22") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "22") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "22") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "1,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "22") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "22") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "2"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                      (rule "add_literals" (formula "22") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                      (rule "mul_literals" (formula "22") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                      (rule "allLeft" (formula "34") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "34") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000010000000000_25" (formula "34") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "34") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,1,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "34") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq0" (formula "34") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,1"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "34") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "34"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0"))
                                                      (rule "leq_literals" (formula "34"))
                                                      (rule "closeFalse" (formula "34"))
                                                   )
                                                   (branch "result >= 1 + i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_geqRight" (formula "45"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "41") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "41") (term "0,0"))
                                                      (rule "add_zero_left" (formula "41") (term "0"))
                                                      (rule "inEqSimp_subsumption1" (formula "40") (ifseqformula "41"))
                                                      (rule "leq_literals" (formula "40") (term "0"))
                                                      (builtin "One Step Simplification" (formula "40"))
                                                      (rule "true_left" (formula "40"))
                                                      (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "result <= -1 + i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0,0"))
                                                         (rule "qeq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "39") (ifseqformula "40"))
                                                         (rule "leq_literals" (formula "39") (term "0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "true_left" (formula "39"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "25") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "26") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "26") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "26") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "18"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "26") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                         (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "26") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "26"))
                                                         (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "24") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "24") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "19"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "27"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                         (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "23") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "23") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "14") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "49") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000010000000000_26" (formula "49") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "49") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "49") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "49") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_contradInEq0" (formula "49") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "49") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "49") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "allLeft" (formula "48") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "48") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000010000000000_26" (formula "48") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "48") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "48") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "48") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "48") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "48") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "21"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "allLeft" (formula "13") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "allLeft" (formula "30") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "30") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "30") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "0,0") (ifseqformula "22"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "30") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "34"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                         (rule "mul_literals" (formula "30") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                         (rule "allLeft" (formula "48") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "48") (term "0,1"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "48") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000010000000000_26" (formula "48") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110000010000000000_27" (formula "48") (term "1,1"))
                                                         (rule "inEqSimp_commuteGeq" (formula "48") (term "1,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,1"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "48") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "48"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48"))
                                                         (rule "polySimp_mulComm0" (formula "48") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "48") (term "1,0"))
                                                         (rule "mul_literals" (formula "48") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "48") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "48") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0"))
                                                         (rule "leq_literals" (formula "48"))
                                                         (rule "closeFalse" (formula "48"))
                                                      )
                                                      (branch "result <= -1 + i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_leqRight" (formula "43"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "22") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "35") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "36") (term "1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "41") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "42") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "28") (term "1,2,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "40") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0"))
                                                         (rule "qeq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "23") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "24") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "24"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "22") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "26"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                         (rule "allLeft" (formula "15") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "15") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "15") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "25") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "28"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                         (rule "mul_literals" (formula "25") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                         (rule "allLeft" (formula "16") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "16") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "16") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "allLeft" (formula "14") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_homoInEq0" (formula "14") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "14") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "14") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "24") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,1,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "24") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_homoInEq0" (formula "24") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "24") (term "0,1"))
                                                         (rule "add_literals" (formula "24") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "24") (term "0,1"))
                                                         (rule "qeq_literals" (formula "24") (term "1"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "true_left" (formula "24"))
                                                         (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "25") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "25") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "32"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "34") (ifseqformula "25"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "true_left" (formula "34"))
                                                         (rule "inEqSimp_exactShadow3" (formula "29") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "29"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "29") (term "1,1"))
                                                         (rule "mul_literals" (formula "29") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "29") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "29"))
                                                         (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0"))
                                                         (rule "qeq_literals" (formula "28") (term "0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "true_left" (formula "28"))
                                                         (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "25"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "0"))
                                                         (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0"))
                                                         (rule "qeq_literals" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "allLeft" (formula "50") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "50") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000010000000000_26" (formula "50") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "50") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "50") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "50") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "50") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "50") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "50") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "50") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "50") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "50") (term "1,0"))
                                                         (rule "inEqSimp_subsumption0" (formula "50") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "50") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "50") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "50") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "50") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1"))
                                                         (rule "add_literals" (formula "50") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "50") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "50") (term "0,0,1"))
                                                         (rule "qeq_literals" (formula "50") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "50"))
                                                         (rule "true_left" (formula "50"))
                                                         (rule "allLeft" (formula "49") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "49") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110000010000000000_26" (formula "49") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "49") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "49") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "49") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                         (rule "add_literals" (formula "49") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "49") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                         (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "49") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                                         (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "49") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "49"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "49"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: array.length >= 1 + result FALSE"
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "inEqSimp_geqRight" (formula "43"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "28"))
                                                (rule "polySimp_mulLiterals" (formula "28") (term "0"))
                                                (rule "polySimp_elimOne" (formula "28") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "28") (ifseqformula "24"))
                                                (rule "andLeft" (formula "28"))
                                                (rule "inEqSimp_homoInEq1" (formula "28"))
                                                (rule "polySimp_mulComm0" (formula "28") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "28") (term "1,0"))
                                                (rule "mul_literals" (formula "28") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                (rule "polySimp_addComm0" (formula "28") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "28") (term "0"))
                                                (rule "add_literals" (formula "28") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "28") (term "1,0"))
                                                (rule "add_zero_right" (formula "28") (term "0"))
                                                (rule "leq_literals" (formula "28"))
                                                (rule "closeFalse" (formula "28"))
                                             )
                                          )
                                          (branch "CUT: from >= 1 FALSE"
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "43"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_right" (formula "32") (term "0") (ifseqformula "42"))
                                             (builtin "One Step Simplification" (formula "32"))
                                             (rule "true_left" (formula "32"))
                                             (rule "inEqSimp_geqRight" (formula "41"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                             (rule "applyEq" (formula "7") (term "1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "23") (term "1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "27") (term "1,1,0,0,0") (ifseqformula "15"))
                                             (rule "add_zero_right" (formula "27") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "24") (term "1,1,0,0,0") (ifseqformula "15"))
                                             (rule "add_zero_right" (formula "24") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "15"))
                                             (rule "add_zero_right" (formula "32") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "9") (term "1,1") (ifseqformula "15"))
                                             (rule "add_zero_right" (formula "9") (term "1"))
                                             (rule "applyEq" (formula "16") (term "0") (ifseqformula "15"))
                                             (rule "qeq_literals" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "15"))
                                             (rule "applyEq" (formula "32") (term "1,1,0,0,0,1") (ifseqformula "15"))
                                             (rule "add_zero_right" (formula "32") (term "1,0,0,0,1"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "16") (term "1,1,0,0,0") (ifseqformula "14"))
                                             (rule "add_zero_right" (formula "16") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "14"))
                                             (rule "times_zero_2" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "cut_direct" (formula "31") (term "0"))
                                             (branch "CUT: array.length >= 1 + result TRUE"
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "commute_or" (formula "37") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "result >= 2 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_subsumption1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "commute_or" (formula "27") (term "0,0"))
                                                   (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_21" (formula "27") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet010000000000_17" (formula "27") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00100010000000000_27" (formula "27") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00100010000000000_24" (formula "27") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "27") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "27") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "27") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "27") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "27") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,1"))
                                                   (rule "add_literals" (formula "27") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "27") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "27") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "27") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "inEqSimp_contradInEq1" (formula "27") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "27") (term "0"))
                                                   (builtin "One Step Simplification" (formula "27"))
                                                   (rule "closeFalse" (formula "27"))
                                                )
                                                (branch "result >= 2 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_geqRight" (formula "40"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "38") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "38") (term "0,0"))
                                                   (rule "add_zero_left" (formula "38") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "38"))
                                                   (rule "mul_literals" (formula "38") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "6"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch "result >= 1 + i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_contradInEq1" (formula "4") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "4") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                                      (rule "hideAuxiliaryEq" (formula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "22") (term "0,2,1,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "1,1,0"))
                                                      (rule "add_literals" (formula "33") (term "0,1,1,0"))
                                                      (rule "applyEq" (formula "26") (term "1,2,1,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "2,1,0"))
                                                      (rule "add_literals" (formula "26") (term "0,2,1,0"))
                                                      (rule "add_zero_left" (formula "26") (term "2,1,0"))
                                                      (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "37") (term "0,2,1,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "37") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "1,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,1,0,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "1,0,0,0"))
                                                      (rule "applyEq" (formula "20") (term "0,2,1,1,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "2"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "1"))
                                                      (rule "add_literals" (formula "29") (term "0,1"))
                                                      (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3"))
                                                      (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                      (rule "add_literals" (formula "3") (term "1,0"))
                                                      (rule "times_zero_1" (formula "3") (term "0"))
                                                      (rule "leq_literals" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "applyEq" (formula "35") (term "0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "2"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "28") (term "0,2,1,1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "34"))
                                                      (rule "mul_literals" (formula "34") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "34") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "34") (term "0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "true_left" (formula "34"))
                                                      (rule "commute_or" (formula "26") (term "0,0"))
                                                      (rule "allLeft" (formula "21") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_22" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_22" (formula "18") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "18") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "18") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_exactShadow3" (formula "18") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "18"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "0"))
                                                      (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010100010000000000_25" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "31") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "31") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "31") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq0" (formula "31") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "31"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0"))
                                                      (rule "leq_literals" (formula "31"))
                                                      (rule "closeFalse" (formula "31"))
                                                   )
                                                   (branch "result >= 1 + i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_geqRight" (formula "40"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0"))
                                                      (rule "qeq_literals" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "inEqSimp_exactShadow3" (formula "36") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "36") (term "0,0"))
                                                      (rule "add_zero_left" (formula "36") (term "0"))
                                                      (rule "commute_or" (formula "28") (term "0,0"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "result <= -1 + i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0"))
                                                         (rule "add_zero_left" (formula "35") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                         (rule "mul_literals" (formula "35") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "35"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "19") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "19") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "19") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "19") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "allLeft" (formula "22") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "22") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "22") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "36"))
                                                         (rule "qeq_literals" (formula "22") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "39") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110100010000000000_26" (formula "39") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "allLeft" (formula "12") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "12") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "37"))
                                                         (rule "qeq_literals" (formula "12") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "38"))
                                                         (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "25") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "39"))
                                                         (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "allLeft" (formula "41") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "41") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110100010000000000_26" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "41") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "41") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "allLeft" (formula "42") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "42") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110100010000000000_27" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "42") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq0" (formula "42") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "42") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "22") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "22") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "22") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "46") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "46") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110100010000000000_27" (formula "46") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "46") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,0,0,1,0"))
                                                         (rule "add_literals" (formula "46") (term "0,0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "46") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "inEqSimp_contradInEq0" (formula "46") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "46") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "allLeft" (formula "39") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "39") (term "0,1"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "39") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110100010000000000_26" (formula "39") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110100010000000000_27" (formula "39") (term "1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "39") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "39") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "39") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "39") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "39"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0"))
                                                         (rule "leq_literals" (formula "39"))
                                                         (rule "closeFalse" (formula "39"))
                                                      )
                                                      (branch "result <= -1 + i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_leqRight" (formula "38"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "20") (term "1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "38") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "31") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "0"))
                                                         (rule "qeq_literals" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "applyEq" (formula "36") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "25") (term "1,2,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "28") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "21") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "21") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "31") (term "1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "36") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "21") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "21") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_commuteLeq" (formula "13") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "13") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "23") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "3"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "23"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "0"))
                                                         (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "15") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                         (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                         (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "15") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "15"))
                                                         (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "39") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet110100010000000000_26" (formula "39") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "39") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                         (rule "mul_literals" (formula "39") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "39"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                             )
                                             (branch "CUT: array.length >= 1 + result FALSE"
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "inEqSimp_geqRight" (formula "39"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "25") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "25") (term "0,0"))
                                                (rule "mul_literals" (formula "25") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "25"))
                                                (rule "polySimp_mulLiterals" (formula "25") (term "0"))
                                                (rule "polySimp_elimOne" (formula "25") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "25") (ifseqformula "22"))
                                                (rule "andLeft" (formula "25"))
                                                (rule "inEqSimp_homoInEq1" (formula "25"))
                                                (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                (rule "add_literals" (formula "25") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "25") (term "1,0"))
                                                (rule "add_zero_right" (formula "25") (term "0"))
                                                (rule "leq_literals" (formula "25"))
                                                (rule "closeFalse" (formula "25"))
                                             )
                                          )
                                       )
                                       (branch "CUT: array.length >= 2 + to FALSE"
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "true_left" (formula "28"))
                                          (rule "replace_known_right" (formula "42") (term "0") (ifseqformula "43"))
                                          (builtin "One Step Simplification" (formula "42"))
                                          (rule "true_left" (formula "42"))
                                          (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "42"))
                                          (builtin "One Step Simplification" (formula "18"))
                                          (rule "true_left" (formula "18"))
                                          (rule "inEqSimp_geqRight" (formula "41"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                          (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "17"))
                                          (rule "applyEq" (formula "35") (term "0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                          (rule "add_zero_left" (formula "35") (term "0,0,0"))
                                          (rule "applyEq" (formula "16") (term "0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "39") (term "1,0") (ifseqformula "17"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq0" (formula "1"))
                                          (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                          (rule "add_literals" (formula "1") (term "1,0"))
                                          (rule "times_zero_1" (formula "1") (term "0"))
                                          (rule "qeq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "22") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                          (rule "inEqSimp_homoInEq1" (formula "17"))
                                          (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                          (rule "add_literals" (formula "17") (term "1,0"))
                                          (rule "times_zero_1" (formula "17") (term "0"))
                                          (rule "leq_literals" (formula "17"))
                                          (rule "true_left" (formula "17"))
                                          (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "16"))
                                          (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "16"))
                                          (rule "applyEq" (formula "21") (term "1,1") (ifseqformula "16"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "33") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "0,0"))
                                          (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "23"))
                                          (builtin "One Step Simplification" (formula "33"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15"))
                                          (rule "mul_literals" (formula "15") (term "1"))
                                          (rule "seqDef_induction_upper_concrete" (formula "30") (term "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,1"))
                                          (rule "seqDef_induction_upper_concrete" (formula "37") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1,0"))
                                          (rule "seqDef_induction_upper_concrete" (formula "21") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0"))
                                          (rule "seqDef_induction_upper_concrete" (formula "30") (term "0"))
                                          (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0"))
                                          (rule "seqDef_induction_upper_concrete" (formula "37") (term "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0,1,1"))
                                          (rule "seqDef_induction_upper_concrete" (formula "21") (term "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,1"))
                                          (rule "pullOutSelect" (formula "30") (term "0,1,1,1") (inst "selectSK=arr_14"))
                                          (rule "applyEq" (formula "21") (term "0,1,1,0") (ifseqformula "30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "43")) (ifInst ""  (formula "12")))
                                          (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "narrowSelectArrayType" (formula "30") (term "2,0") (ifseqformula "9") (ifseqformula "43"))
                                          (rule "narrowSelectArrayType" (formula "30") (term "1,0") (ifseqformula "18") (ifseqformula "43"))
                                          (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "30") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "inEqSimp_subsumption1" (formula "30") (term "0,0") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "30") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "applyEqReverse" (formula "31") (term "0,1,1,1") (ifseqformula "30"))
                                          (rule "applyEqReverse" (formula "21") (term "0,1,1,0") (ifseqformula "30"))
                                          (rule "hideAuxiliaryEq" (formula "30"))
                                          (rule "pullOutSelect" (formula "37") (term "0,1,1,0") (inst "selectSK=arr_15"))
                                          (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "35"))
                                          (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "43")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "28"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,0,1,0,0") (ifseqformula "19"))
                                          (rule "replace_known_left" (formula "37") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "narrowSelectArrayType" (formula "37") (term "1,0") (ifseqformula "34") (ifseqformula "43"))
                                          (rule "inEqSimp_commuteLeq" (formula "37") (term "0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "37") (term "1,0,0"))
                                          (rule "polySimp_pullOutFactor1" (formula "37") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "37") (term "1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "37") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "37") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "37"))
                                          (rule "pullOutSelect" (formula "30") (term "0,1,1,0") (inst "selectSK=arr_16"))
                                          (rule "applyEq" (formula "38") (term "2,0") (ifseqformula "30"))
                                          (rule "applyEq" (formula "39") (term "0,1,1,1") (ifseqformula "30"))
                                          (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "44")))
                                          (rule "replaceKnownSelect_taclet10010000000000_24" (formula "30") (term "2,0"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet10010000000000_25" (formula "30") (term "2,0"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "19"))
                                          (rule "replace_known_left" (formula "30") (term "0,0,1,0,0") (ifseqformula "12"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "narrowSelectArrayType" (formula "30") (term "1,0") (ifseqformula "27") (ifseqformula "44"))
                                          (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0,0") (ifseqformula "23"))
                                          (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "30") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "30"))
                                          (rule "applyEqReverse" (formula "31") (term "0,1,1,0") (ifseqformula "30"))
                                          (rule "applyEqReverse" (formula "39") (term "0,1,1,1") (ifseqformula "30"))
                                          (rule "hideAuxiliaryEq" (formula "30"))
                                          (rule "cut_direct" (formula "17") (term "0"))
                                          (branch "CUT: from >= 1 TRUE"
                                             (builtin "One Step Simplification" (formula "18"))
                                             (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "replace_known_left" (formula "27") (term "0") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "17"))
                                             (rule "leq_literals" (formula "14") (term "0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "commute_or" (formula "39") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "result >= 2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "4") (term "0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "ifthenelse_split" (formula "18") (term "1,1"))
                                                (branch "to >= 0 TRUE"
                                                   (rule "replace_known_left" (formula "28") (term "0,1,1") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "18")))
                                                   (rule "replace_known_left" (formula "36") (term "0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "18")))
                                                   (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "18"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                                                   (rule "leq_literals" (formula "11") (term "0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "ifthenelse_split" (formula "34") (term "0"))
                                                   (branch "to >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "allLeft" (formula "20") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_22" (formula "20") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "20") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "20") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "20") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "replaceKnownSelect_taclet010000000000_19" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "29") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_17" (formula "29") (term "0,1"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "29") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0010010000000000_29" (formula "29") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0010010000000000_30" (formula "29") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "29") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "29") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq1" (formula "29") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "29") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "inEqSimp_contradInEq0" (formula "29") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "29"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29"))
                                                      (rule "polySimp_mulComm0" (formula "29") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "29") (term "1,0"))
                                                      (rule "mul_literals" (formula "29") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "29") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "29") (term "0"))
                                                      (rule "add_literals" (formula "29") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "29") (term "1,0"))
                                                      (rule "add_zero_right" (formula "29") (term "0"))
                                                      (rule "leq_literals" (formula "29"))
                                                      (rule "closeFalse" (formula "29"))
                                                   )
                                                   (branch "to >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "35") (term "0,1,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "inEqSimp_geqRight" (formula "38"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "36") (term "0,2,0,1,1") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "19") (term "0,2,0,1,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "34") (term "2,1,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "35") (term "0,2,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                      (rule "add_literals" (formula "21") (term "1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "0"))
                                                      (rule "leq_literals" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "27") (term "0,2,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "27") (term "1,0,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "37") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "27") (term "0,2,0,1,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "17") (term "0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "33") (term "1,0,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_22" (formula "18") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "18") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "allLeft" (formula "19") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "replaceKnownSelect_taclet010000000000_19" (formula "19") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "19") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "19") (term "0,0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "0,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "19") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "allLeft" (formula "26") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_17" (formula "26") (term "0,1"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "26") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0010010000000000_29" (formula "26") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0010010000000000_30" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "26") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "26"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0"))
                                                      (rule "leq_literals" (formula "26"))
                                                      (rule "closeFalse" (formula "26"))
                                                   )
                                                )
                                                (branch "to >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "39")))
                                                   (rule "replace_known_right" (formula "35") (term "0,1,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "39")))
                                                   (rule "replace_known_right" (formula "27") (term "0,1,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "34") (term "2,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "40") (term "1,1,1,0,0") (ifseqformula "12"))
                                                   (rule "add_literals" (formula "40") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "12"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "38") (term "1,1,0,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "36") (term "0,0,0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                   (rule "mul_literals" (formula "36") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                   (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "12"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "22") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_commuteGeq" (formula "22"))
                                                   (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                   (rule "add_literals" (formula "11") (term "0,0"))
                                                   (rule "add_zero_left" (formula "11") (term "0"))
                                                   (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "5") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                   (rule "add_literals" (formula "5") (term "0,0"))
                                                   (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                   (rule "qeq_literals" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "12"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "mul_literals" (formula "6") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "0,0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "11"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "35") (term "1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "34") (term "0,2,2,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "11"))
                                                   (rule "add_literals" (formula "12") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                   (rule "mul_literals" (formula "5") (term "1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "13") (ifseqformula "5"))
                                                   (rule "qeq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "closeFalse" (formula "13"))
                                                )
                                             )
                                             (branch "result >= 2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_geqRight" (formula "41"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "40") (term "0,0"))
                                                (rule "add_zero_left" (formula "40") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                (rule "mul_literals" (formula "40") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                (rule "mul_literals" (formula "22") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "22") (term "0,0"))
                                                (rule "qeq_literals" (formula "22") (term "0"))
                                                (builtin "One Step Simplification" (formula "22"))
                                                (rule "true_left" (formula "22"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "result >= 1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "41") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "22") (term "1") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "21") (term "0,2,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "39") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "21") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "21") (term "0,1,1,0,0"))
                                                   (rule "applyEq" (formula "22") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "34") (term "1,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "32") (term "1,1,0"))
                                                   (rule "add_literals" (formula "32") (term "0,1,1,0"))
                                                   (rule "applyEq" (formula "20") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "20"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "20") (term "1,0"))
                                                   (rule "mul_literals" (formula "20") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                   (rule "applyEq" (formula "22") (term "1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "38") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2"))
                                                   (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                   (rule "add_literals" (formula "2") (term "1,0"))
                                                   (rule "times_zero_1" (formula "2") (term "0"))
                                                   (rule "leq_literals" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "applyEq" (formula "27") (term "1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "27") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "27") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "27") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "29") (term "0,2,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "24") (term "1,2,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "2,1,0"))
                                                   (rule "add_literals" (formula "24") (term "0,2,1,0"))
                                                   (rule "add_zero_left" (formula "24") (term "2,1,0"))
                                                   (rule "inEqSimp_sepNegMonomial0" (formula "19"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                   (rule "mul_literals" (formula "37") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "19") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0,0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                   (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "19") (term "0,0"))
                                                   (rule "qeq_literals" (formula "19") (term "0"))
                                                   (builtin "One Step Simplification" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "ifthenelse_split" (formula "18") (term "1,1"))
                                                   (branch "to >= 0 TRUE"
                                                      (rule "replace_known_left" (formula "26") (term "0,1,0") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "18")))
                                                      (rule "replace_known_left" (formula "34") (term "0,1,1") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "18")))
                                                      (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "18"))
                                                      (rule "leq_literals" (formula "11") (term "0"))
                                                      (builtin "One Step Simplification" (formula "11"))
                                                      (rule "true_left" (formula "11"))
                                                      (rule "ifthenelse_split" (formula "32") (term "0"))
                                                      (branch "to >= 2 + i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "34") (term "0,1,0") (ifseqformula "33"))
                                                         (rule "hideAuxiliaryEq" (formula "33"))
                                                         (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "32"))
                                                         (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                         (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                         (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "4") (term "0,0"))
                                                         (rule "qeq_literals" (formula "4") (term "0"))
                                                         (builtin "One Step Simplification" (formula "4"))
                                                         (rule "true_left" (formula "4"))
                                                         (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "20") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "20") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "0,0,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "1,0") (ifseqformula "32"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "2"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                         (rule "mul_literals" (formula "20") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                         (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "22") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "22") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "34"))
                                                         (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                         (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "22") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "22"))
                                                         (rule "allLeft" (formula "23") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_17"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "42")) (ifInst ""  (formula "8")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24"))
                                                         (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                         (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                         (rule "mul_literals" (formula "24") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                                                         (rule "hideAuxiliaryEq" (formula "23"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23"))
                                                         (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                         (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                         (rule "mul_literals" (formula "23") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                         (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "12") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                         (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "12") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "12"))
                                                         (rule "allLeft" (formula "13") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "13") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                         (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "13") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "13"))
                                                         (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "38"))
                                                         (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                         (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "14") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "14"))
                                                         (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "21") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "21") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "21") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                                         (rule "add_literals" (formula "21") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "21") (term "0,1"))
                                                         (rule "qeq_literals" (formula "21") (term "1"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "allLeft" (formula "21") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "21") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "21") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "21") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "21") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "21") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "2"))
                                                         (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                         (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                         (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                         (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "21"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                         (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                         (rule "add_literals" (formula "27") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_21" (formula "36") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet01010010000000000_30" (formula "36") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,1,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "36") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "36"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "to >= 2 + i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "33") (term "0,1,0") (ifseqformula "32"))
                                                         (rule "hideAuxiliaryEq" (formula "32"))
                                                         (rule "inEqSimp_geqRight" (formula "36"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "6"))
                                                         (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                         (rule "add_literals" (formula "6") (term "1,0"))
                                                         (rule "times_zero_1" (formula "6") (term "0"))
                                                         (rule "leq_literals" (formula "6"))
                                                         (rule "true_left" (formula "6"))
                                                         (rule "applyEq" (formula "31") (term "2,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "19") (term "0,2,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "14") (term "1,1,1,0,0") (ifseqformula "5"))
                                                         (rule "polySimp_addAssoc" (formula "14") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "14") (term "0,1,1,0,0"))
                                                         (rule "applyEq" (formula "26") (term "0,2,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "26") (term "1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "26") (term "0,2,0,1,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "19") (term "1,0,0") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "5"))
                                                         (rule "polySimp_addAssoc" (formula "22") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "22") (term "0,1,1,0,0"))
                                                         (rule "applyEq" (formula "33") (term "1,0,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "33") (term "0,2,0,1,1") (ifseqformula "5"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                         (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                         (rule "add_literals" (formula "5") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "5") (term "0,0"))
                                                         (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "4"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "20") (term "0,1,1,0,0"))
                                                         (rule "applyEq" (formula "32") (term "0,2,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "4"))
                                                         (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                                                         (rule "applyEq" (formula "25") (term "1,0,1") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "18") (term "0,2,0,1,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "4"))
                                                         (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "10") (term "0,0"))
                                                         (rule "add_literals" (formula "10") (term "0,0,0"))
                                                         (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "4"))
                                                         (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "4"))
                                                         (rule "polySimp_addAssoc" (formula "11") (term "1"))
                                                         (rule "add_literals" (formula "11") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "17"))
                                                         (rule "mul_literals" (formula "17") (term "1"))
                                                         (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                                         (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                         (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "16") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,1"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "23") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,0"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "16") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0,0"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "30") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,1"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0,1"))
                                                         (rule "seqDef_induction_upper_concrete" (formula "30") (term "0,0"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,1,0,0"))
                                                         (rule "pullOutSelect" (formula "23") (term "0,1,1,0,0") (inst "selectSK=arr_17"))
                                                         (rule "applyEq" (formula "31") (term "0,1,1,0,1") (ifseqformula "23"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                                                         (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "36")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,0,0") (ifseqformula "14"))
                                                         (rule "replace_known_left" (formula "23") (term "0,0,1,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "narrowSelectArrayType" (formula "23") (term "1,0") (ifseqformula "20") (ifseqformula "36"))
                                                         (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "23") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "applyEqReverse" (formula "24") (term "0,1,1,0,0") (ifseqformula "23"))
                                                         (rule "applyEqReverse" (formula "31") (term "0,1,1,0,1") (ifseqformula "23"))
                                                         (rule "hideAuxiliaryEq" (formula "23"))
                                                         (rule "pullOutSelect" (formula "16") (term "0,1,1,0,0") (inst "selectSK=arr_18"))
                                                         (rule "applyEq" (formula "24") (term "0,1,1,0,1") (ifseqformula "16"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
                                                         (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "36")) (ifInst ""  (formula "8")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "5") (ifseqformula "36"))
                                                         (rule "narrowSelectArrayType" (formula "16") (term "1,0") (ifseqformula "13") (ifseqformula "36"))
                                                         (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "16") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "applyEqReverse" (formula "17") (term "0,1,1,0,0") (ifseqformula "16"))
                                                         (rule "applyEqReverse" (formula "24") (term "0,1,1,0,1") (ifseqformula "16"))
                                                         (rule "hideAuxiliaryEq" (formula "16"))
                                                         (rule "pullOutSelect" (formula "30") (term "0,1,1,0,0") (inst "selectSK=arr_19"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "28"))
                                                         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "36")))
                                                         (rule "replaceKnownSelect_taclet1001010010000000000_34" (formula "30") (term "2,0"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet1001010010000000000_35" (formula "30") (term "2,0"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "21"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "14"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "narrowSelectArrayType" (formula "30") (term "1,0") (ifseqformula "27") (ifseqformula "36"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1,0,0"))
                                                         (rule "qeq_literals" (formula "30") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "applyEqReverse" (formula "31") (term "0,1,1,0,0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "18") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "32") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "32") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "32") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "32") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "32"))
                                                         (rule "true_left" (formula "32"))
                                                         (rule "inEqSimp_or_tautInEq0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                                         (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1,0,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1,0,1,0,0"))
                                                         (rule "mul_literals" (formula "30") (term "0,1,0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "30") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm0" (formula "30") (term "0,0,1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,1,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "true_left" (formula "30"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "17") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "17") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "17") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_homoInEq0" (formula "17") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1"))
                                                         (rule "add_literals" (formula "17") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "17") (term "0,1"))
                                                         (rule "qeq_literals" (formula "17") (term "1"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "true_left" (formula "17"))
                                                         (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_21" (formula "25") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet01010010000000000_30" (formula "25") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "25") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "25") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "25"))
                                                         (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "2"))
                                                         (rule "andLeft" (formula "25"))
                                                         (rule "inEqSimp_homoInEq1" (formula "25"))
                                                         (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                         (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                         (rule "add_literals" (formula "25") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "25") (term "1,0"))
                                                         (rule "add_zero_right" (formula "25") (term "0"))
                                                         (rule "leq_literals" (formula "25"))
                                                         (rule "closeFalse" (formula "25"))
                                                      )
                                                   )
                                                   (branch "to >= 0 FALSE"
                                                      (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "37")))
                                                      (rule "replace_known_right" (formula "33") (term "0,1,0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")))
                                                      (rule "replace_known_right" (formula "25") (term "0,1,0") (ifseqformula "37"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "37")))
                                                      (rule "inEqSimp_geqRight" (formula "37"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "12"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                      (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                                                      (rule "polySimp_addComm1" (formula "11") (term "0"))
                                                      (rule "add_literals" (formula "11") (term "0,0"))
                                                      (rule "add_zero_left" (formula "11") (term "0"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "34") (term "0,2,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "12"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "27") (term "1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                                                      (rule "qeq_literals" (formula "13"))
                                                      (rule "true_left" (formula "13"))
                                                      (rule "applyEq" (formula "33") (term "0,2,2,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "34") (term "1,1,0,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "11"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "0,0"))
                                                      (rule "applyEq" (formula "30") (term "2,1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "36") (term "1,1,1,0,0") (ifseqformula "11"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "11"))
                                                      (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "11"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "11"))
                                                      (rule "add_literals" (formula "12") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0"))
                                                      (rule "mul_literals" (formula "32") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                      (rule "mul_literals" (formula "4") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "32") (term "0,0") (ifseqformula "35"))
                                                      (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "hideAuxiliaryEq" (formula "32"))
                                                      (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                                (branch "result >= 1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_geqRight" (formula "42"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                   (rule "polySimp_mulLiterals" (formula "20") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "20") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "39") (term "0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0"))
                                                   (rule "inEqSimp_subsumption1" (formula "38") (ifseqformula "39"))
                                                   (rule "leq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "true_left" (formula "38"))
                                                   (rule "ifthenelse_split" (formula "19") (term "1,1"))
                                                   (branch "to >= 0 TRUE"
                                                      (rule "replace_known_left" (formula "37") (term "0,1,1") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "19")))
                                                      (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "replace_known_left" (formula "29") (term "0,1,0") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "19")))
                                                      (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "19"))
                                                      (rule "leq_literals" (formula "12") (term "0"))
                                                      (builtin "One Step Simplification" (formula "12"))
                                                      (rule "true_left" (formula "12"))
                                                      (rule "ifthenelse_split" (formula "35") (term "0"))
                                                      (branch "to >= 1 + result TRUE"
                                                         (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "36"))
                                                         (rule "hideAuxiliaryEq" (formula "36"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "35"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "ifthenelse_split" (formula "2") (term "0"))
                                                         (branch "result <= -1 + i_0 TRUE"
                                                            (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                            (rule "hideAuxiliaryEq" (formula "3"))
                                                            (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "1") (term "0,0"))
                                                            (rule "qeq_literals" (formula "1") (term "0"))
                                                            (builtin "One Step Simplification" (formula "1"))
                                                            (rule "true_left" (formula "1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "37") (ifseqformula "1"))
                                                            (rule "times_zero_1" (formula "37") (term "0,0"))
                                                            (rule "add_zero_left" (formula "37") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "37"))
                                                            (rule "mul_literals" (formula "37") (term "1"))
                                                            (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "37"))
                                                            (rule "leq_literals" (formula "36") (term "0"))
                                                            (builtin "One Step Simplification" (formula "36"))
                                                            (rule "true_left" (formula "36"))
                                                            (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                            (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                            (rule "mul_literals" (formula "19") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0,0"))
                                                            (rule "qeq_literals" (formula "3") (term "0"))
                                                            (builtin "One Step Simplification" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "allLeft" (formula "21") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_19" (formula "21") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "21") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "21") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "allLeft" (formula "39") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_16" (formula "39") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11010010000000000_31" (formula "39") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "39") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "39") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "39") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "inEqSimp_contradInEq0" (formula "39") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "39") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                            (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "39") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "39"))
                                                            (rule "allLeft" (formula "23") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_19" (formula "23") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "23") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "23") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "23") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "23") (term "1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "18"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "allLeft" (formula "12") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_homoInEq0" (formula "12") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "12") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "12") (term "1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "inEqSimp_contradInEq1" (formula "12") (term "0") (ifseqformula "19"))
                                                            (rule "inEqSimp_homoInEq1" (formula "12") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "12") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0,0"))
                                                            (rule "add_literals" (formula "12") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "12") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "12") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "12") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "12"))
                                                            (rule "allLeft" (formula "13") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "13") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "allLeft" (formula "14") (inst "t=i_0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "21"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "allLeft" (formula "27") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "27") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "27") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "pullOutSelect" (formula "27") (term "0") (inst "selectSK=arr_17"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "17"))
                                                            (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "48")) (ifInst ""  (formula "8")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "0,1,0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                            (rule "mul_literals" (formula "28") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "27") (term "0,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "27"))
                                                            (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "27"))
                                                            (rule "hideAuxiliaryEq" (formula "27"))
                                                            (rule "inEqSimp_homoInEq0" (formula "27"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                            (rule "mul_literals" (formula "27") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                            (rule "allLeft" (formula "28") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_22" (formula "28") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "28") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "21"))
                                                            (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                            (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "28") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "28"))
                                                            (rule "allLeft" (formula "25") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_22" (formula "25") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "25") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,1"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq0" (formula "25") (term "0,0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "25") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "26") (inst "t=to"))
                                                            (rule "replaceKnownSelect_taclet00011010010000000000_34" (formula "26") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00011010010000000000_35" (formula "26") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "26") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                            (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "26") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "26"))
                                                            (rule "allLeft" (formula "48") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,1,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "48") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "48") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_contradInEq1" (formula "48") (term "0") (ifseqformula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "pullOutSelect" (formula "48") (term "0") (inst "selectSK=arr_18"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "40"))
                                                            (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "52")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "33"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,0,0") (ifseqformula "17"))
                                                            (rule "replace_known_left" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_commuteLeq" (formula "48") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "48") (term "0,0,0") (ifseqformula "42"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "48") (term "0,0,0"))
                                                            (rule "add_literals" (formula "48") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "48") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "48") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "48"))
                                                            (rule "applyEqReverse" (formula "49") (term "0,1,0,0") (ifseqformula "48"))
                                                            (rule "hideAuxiliaryEq" (formula "48"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "48"))
                                                            (rule "polySimp_mulComm0" (formula "48") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "48") (term "1"))
                                                            (rule "polySimp_mulLiterals" (formula "48") (term "1,1"))
                                                            (rule "mul_literals" (formula "48") (term "0,1"))
                                                            (rule "polySimp_elimOne" (formula "48") (term "1,1"))
                                                            (rule "allLeft" (formula "49") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_18" (formula "49") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00011010010000000000_33" (formula "49") (term "0,1"))
                                                            (rule "inEqSimp_commuteLeq" (formula "49") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,1,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "49") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,1"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "49") (term "1,1,1"))
                                                            (rule "polySimp_elimOne" (formula "49") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "49") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "49") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "49") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "49") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "49") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "inEqSimp_contradInEq0" (formula "49") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "49") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "49") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "49") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "49") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "49") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "49") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "49") (term "0,0,0"))
                                                            (rule "add_literals" (formula "49") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "49") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "49") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "49") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "49"))
                                                            (rule "allLeft" (formula "15") (inst "t=result"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "23"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "43"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "allLeft" (formula "45") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_16" (formula "45") (term "0,1"))
                                                            (rule "replaceKnownSelect_taclet010000000000_18" (formula "45") (term "1,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11010010000000000_31" (formula "45") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet00011010010000000000_33" (formula "45") (term "1,1"))
                                                            (rule "inEqSimp_commuteGeq" (formula "45") (term "1,0"))
                                                            (rule "inEqSimp_commuteLeq" (formula "45") (term "0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "45") (term "1,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "45") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (term "1") (ifseqformula "2"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45") (term "0,1"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,1"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0,0,1"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0,0,1"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0,0,1"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,0,0,1"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0,0,1"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0,0,1"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0,0,1"))
                                                            (rule "add_zero_right" (formula "45") (term "0,0,1"))
                                                            (rule "leq_literals" (formula "45") (term "0,1"))
                                                            (builtin "One Step Simplification" (formula "45"))
                                                            (rule "inEqSimp_contradInEq0" (formula "45") (ifseqformula "1"))
                                                            (rule "andLeft" (formula "45"))
                                                            (rule "inEqSimp_homoInEq1" (formula "45"))
                                                            (rule "polySimp_mulComm0" (formula "45") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "45") (term "1,0"))
                                                            (rule "mul_literals" (formula "45") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "45") (term "0"))
                                                            (rule "polySimp_addComm0" (formula "45") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "45") (term "0"))
                                                            (rule "add_literals" (formula "45") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "45") (term "1,0"))
                                                            (rule "add_zero_right" (formula "45") (term "0"))
                                                            (rule "leq_literals" (formula "45"))
                                                            (rule "closeFalse" (formula "45"))
                                                         )
                                                         (branch "result <= -1 + i_0 FALSE"
                                                            (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                            (rule "hideAuxiliaryEq" (formula "2"))
                                                            (rule "inEqSimp_leqRight" (formula "39"))
                                                            (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                            (rule "add_literals" (formula "1") (term "0,0,0"))
                                                            (rule "add_zero_left" (formula "1") (term "0,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                            (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                            (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                            (rule "mul_literals" (formula "3") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                            (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                            (rule "applyEq" (formula "26") (term "1,2,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "31") (term "0,2,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "23") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,1") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "33") (term "1,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "23") (term "1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "21") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "38") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "37") (term "0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "3") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "3"))
                                                            (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "0"))
                                                            (rule "qeq_literals" (formula "3"))
                                                            (rule "true_left" (formula "3"))
                                                            (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "2"))
                                                            (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                            (rule "add_literals" (formula "2") (term "1,0"))
                                                            (rule "times_zero_1" (formula "2") (term "0"))
                                                            (rule "leq_literals" (formula "2"))
                                                            (rule "true_left" (formula "2"))
                                                            (rule "applyEq" (formula "19") (term "0,2,1,1,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "1"))
                                                            (rule "applyEq" (formula "35") (term "1,0,0,0") (ifseqformula "1"))
                                                            (rule "allLeft" (formula "21") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "21") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "21") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "pullOutSelect" (formula "21") (term "0") (inst "selectSK=arr_17"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "15"))
                                                            (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "39")) (ifInst ""  (formula "9")))
                                                            (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,0,1,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "0,1,0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "1,0,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1"))
                                                            (rule "mul_literals" (formula "22") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1"))
                                                            (rule "inEqSimp_subsumption1" (formula "21") (term "0,0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                                            (rule "qeq_literals" (formula "21") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "21"))
                                                            (rule "applyEqReverse" (formula "22") (term "1,1") (ifseqformula "21"))
                                                            (rule "hideAuxiliaryEq" (formula "21"))
                                                            (rule "inEqSimp_homoInEq0" (formula "21"))
                                                            (rule "polySimp_addComm1" (formula "21") (term "0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "21"))
                                                            (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "21") (term "1"))
                                                            (rule "mul_literals" (formula "21") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                                            (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_22" (formula "22") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "22") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "22") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                                            (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "22") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "22"))
                                                            (rule "allLeft" (formula "13") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "13") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "13") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "13") (term "0,0,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "13") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "13") (term "1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "13") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                                            (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "13") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "13"))
                                                            (rule "allLeft" (formula "24") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_19" (formula "24") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "24") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "24") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "1,1,0"))
                                                            (rule "inEqSimp_sepNegMonomial1" (formula "24") (term "0,0"))
                                                            (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                                            (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                            (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                            (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "24") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "24"))
                                                            (rule "allLeft" (formula "14") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "14") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                            (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                            (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "14") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "14"))
                                                            (rule "allLeft" (formula "15") (inst "t=i_0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                            (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                            (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "1,0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "15") (term "0,0,0,1,0"))
                                                            (rule "add_literals" (formula "15") (term "0,0,0,0,1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                            (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "15") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "15"))
                                                            (rule "allLeft" (formula "23") (inst "t=to"))
                                                            (rule "replaceKnownSelect_taclet10011010010000000000_34" (formula "23") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet10011010010000000000_35" (formula "23") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "23") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "23") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "allLeft" (formula "42") (inst "t=to"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "42") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "4"))
                                                            (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_18"))
                                                            (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "37"))
                                                            (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "46")))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "30"))
                                                            (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "18"))
                                                            (rule "replace_known_left" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                            (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "4"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "inEqSimp_homoInEq1" (formula "43"))
                                                            (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1" (formula "42") (term "0,0,0"))
                                                            (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                                            (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "42") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "42"))
                                                            (rule "applyEqReverse" (formula "43") (term "0,1,0,0") (ifseqformula "42"))
                                                            (rule "hideAuxiliaryEq" (formula "42"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                                            (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                            (rule "mul_literals" (formula "42") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "42"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                            (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                            (rule "add_literals" (formula "2") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                            (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                            (rule "mul_literals" (formula "2") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                            (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "43"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                            (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                                            (rule "add_literals" (formula "27") (term "0,0,0"))
                                                            (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                            (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                            (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                            (rule "mul_literals" (formula "27") (term "0,1"))
                                                            (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                            (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                            (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_19" (formula "25") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "25") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,1,0"))
                                                            (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                            (rule "add_literals" (formula "25") (term "0,0,0,1,0"))
                                                            (rule "add_zero_left" (formula "25") (term "0,0,1,0"))
                                                            (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "25") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "25") (term "1,0"))
                                                            (rule "polySimp_elimOne" (formula "25") (term "1,0"))
                                                            (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                            (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "25") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "25"))
                                                            (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                            (rule "replaceKnownSelect_taclet010000000000_22" (formula "23") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "23") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                            (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                            (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                            (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                            (rule "leq_literals" (formula "23") (term "1,0"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                                            (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                                            (rule "add_literals" (formula "23") (term "1,0,1"))
                                                            (rule "times_zero_1" (formula "23") (term "0,1"))
                                                            (rule "qeq_literals" (formula "23") (term "1"))
                                                            (builtin "One Step Simplification" (formula "23"))
                                                            (rule "true_left" (formula "23"))
                                                            (rule "allLeft" (formula "46") (inst "t=add(Z(1(#)), i_0)"))
                                                            (rule "replaceKnownSelect_taclet010000000000_16" (formula "46") (term "0,1"))
                                                            (rule "replaceKnownAuxiliaryConstant_taclet11010010000000000_31" (formula "46") (term "0,1"))
                                                            (rule "inEqSimp_homoInEq0" (formula "46") (term "0,0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                            (rule "polySimp_addComm0" (formula "46") (term "0,0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                            (rule "qeq_literals" (formula "46") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,0,0"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,0,0"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,0,0"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                                            (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                                            (rule "add_zero_left" (formula "46") (term "0,0,0"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "1"))
                                                            (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "0"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,0"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,0"))
                                                            (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1"))
                                                            (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                                            (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                                            (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                                            (rule "mul_literals" (formula "46") (term "0,1,1"))
                                                            (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                                            (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "5"))
                                                            (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                            (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                            (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                            (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                            (rule "leq_literals" (formula "46") (term "0,0"))
                                                            (builtin "One Step Simplification" (formula "46"))
                                                            (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "46"))
                                                            (rule "andLeft" (formula "3"))
                                                            (rule "inEqSimp_homoInEq1" (formula "3"))
                                                            (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                            (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                            (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                            (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                            (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                            (rule "add_literals" (formula "3") (term "0,0,0"))
                                                            (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                            (rule "add_literals" (formula "3") (term "1,1,0"))
                                                            (rule "times_zero_1" (formula "3") (term "1,0"))
                                                            (rule "add_zero_right" (formula "3") (term "0"))
                                                            (rule "leq_literals" (formula "3"))
                                                            (rule "closeFalse" (formula "3"))
                                                         )
                                                      )
                                                      (branch "to >= 1 + result FALSE"
                                                         (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                         (rule "hideAuxiliaryEq" (formula "35"))
                                                         (rule "inEqSimp_geqRight" (formula "40"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "20") (term "0,2,0,1,1") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "37") (term "1,0,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "37") (term "0,2,0,1,1") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "30") (term "0,2,0,1,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "7") (term "0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                                                         (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "0"))
                                                         (rule "qeq_literals" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "applyEq" (formula "28") (term "0,2,0,1,1") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "35") (term "0,2,0,1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "18") (term "0,2,0,1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "35") (term "1,0,1") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                         (rule "inEqSimp_homoInEq1" (formula "21"))
                                                         (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                         (rule "add_literals" (formula "21") (term "1,0"))
                                                         (rule "times_zero_1" (formula "21") (term "0"))
                                                         (rule "leq_literals" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "5") (term "0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "32") (term "2,1,0") (ifseqformula "20"))
                                                         (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "20"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0"))
                                                         (rule "qeq_literals" (formula "19") (term "0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "true_left" (formula "19"))
                                                         (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                         (rule "andLeft" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "5"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                         (rule "add_literals" (formula "5") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "5") (term "1,0"))
                                                         (rule "add_zero_right" (formula "5") (term "0"))
                                                         (rule "leq_literals" (formula "5"))
                                                         (rule "closeFalse" (formula "5"))
                                                      )
                                                   )
                                                   (branch "to >= 0 FALSE"
                                                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "41")))
                                                      (rule "replace_known_right" (formula "36") (term "0,1,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "41")))
                                                      (rule "replace_known_right" (formula "28") (term "0,1,1") (ifseqformula "41"))
                                                      (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")))
                                                      (rule "inEqSimp_geqRight" (formula "41"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "mul_literals" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "37") (term "0,0,0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "0,0"))
                                                      (rule "mul_literals" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0"))
                                                      (rule "applyEq" (formula "39") (term "1,1,0,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "38") (term "1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "30") (term "1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "13"))
                                                      (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "add_zero_left" (formula "12") (term "0"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "0,0"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_commuteGeq" (formula "23"))
                                                      (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "37") (term "0,2,1,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "37") (term "0,2,2,0") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                      (rule "qeq_literals" (formula "14"))
                                                      (rule "true_left" (formula "14"))
                                                      (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "mul_literals" (formula "7") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "13"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                      (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "13"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                                      (rule "leq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "33") (term "2,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "12"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "12"))
                                                      (rule "add_literals" (formula "13") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                                                      (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "5"))
                                                      (rule "mul_literals" (formula "5") (term "1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                                                      (rule "mul_literals" (formula "6") (term "1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "39"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "closeFalse" (formula "21"))
                                                   )
                                                )
                                             )
                                          )
                                          (branch "CUT: from >= 1 FALSE"
                                             (builtin "One Step Simplification" (formula "17"))
                                             (rule "true_left" (formula "17"))
                                             (rule "replace_known_right" (formula "25") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "true_left" (formula "25"))
                                             (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "30"))
                                             (rule "true_left" (formula "30"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "mul_literals" (formula "1") (term "1,0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0"))
                                             (rule "add_zero_left" (formula "1") (term "0"))
                                             (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                             (rule "leq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "19") (term "1,1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                             (rule "qeq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "14"))
                                             (rule "add_zero_right" (formula "8") (term "1"))
                                             (rule "applyEq" (formula "6") (term "1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "14"))
                                             (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "29") (term "1,1,1,0,0") (ifseqformula "14"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                             (rule "applyEq" (formula "26") (term "1,1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "14"))
                                             (rule "add_zero_right" (formula "23") (term "1,0,0,0"))
                                             (rule "applyEq" (formula "21") (term "1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "13") (term "0,1,0,0") (ifseqformula "14"))
                                             (rule "times_zero_2" (formula "13") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "13") (term "0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "34") (term "0,1,0") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "34") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "inEqSimp_subsumption1" (formula "20") (term "0,1,0") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "20") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "20"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,1,0") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "27") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_subsumption1" (formula "15") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "15") (term "0"))
                                             (builtin "One Step Simplification" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "inEqSimp_subsumption1" (formula "33") (term "0,1,1") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "33") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "33"))
                                             (rule "inEqSimp_subsumption1" (formula "19") (term "0,1,1") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "19") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "19"))
                                             (rule "inEqSimp_subsumption1" (formula "26") (term "0,1,1") (ifseqformula "8"))
                                             (rule "leq_literals" (formula "26") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "commute_or" (formula "34") (term "0,0"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "result >= 2 + i_0 TRUE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_subsumption1" (formula "3") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                (rule "qeq_literals" (formula "3") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "3"))
                                                (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "3"))
                                                (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_homoInEq1" (formula "2"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                (rule "mul_literals" (formula "2") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                (rule "commute_or" (formula "24") (term "0,0"))
                                                (rule "ifthenelse_split" (formula "29") (term "0"))
                                                (branch "to >= 1 + result TRUE"
                                                   (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                   (rule "hideAuxiliaryEq" (formula "30"))
                                                   (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "29"))
                                                   (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0"))
                                                   (rule "qeq_literals" (formula "17") (term "0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_21" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownSelect_taclet010000000000_17" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_30" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_29" (formula "23") (term "0,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                                (branch "to >= 1 + result FALSE"
                                                   (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "inEqSimp_geqRight" (formula "33"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "18") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "25") (term "0,2,0,1,1") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "29") (term "2,1,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "18"))
                                                   (rule "inEqSimp_homoInEq1" (formula "19"))
                                                   (rule "polySimp_pullOutFactor1" (formula "19") (term "0"))
                                                   (rule "add_literals" (formula "19") (term "1,0"))
                                                   (rule "times_zero_1" (formula "19") (term "0"))
                                                   (rule "leq_literals" (formula "19"))
                                                   (rule "true_left" (formula "19"))
                                                   (rule "applyEq" (formula "30") (term "0,2,0,1,1") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "24") (term "0,2,0,1,0") (ifseqformula "18"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "18"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "14") (term "2,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "29") (term "1,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "10") (term "1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "29") (term "0,2,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "23") (term "1,0,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "16") (term "0,2,0,1,1") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "16") (term "0,2,0,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "30") (term "1,1,0,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "17"))
                                                   (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                   (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0,0"))
                                                   (rule "qeq_literals" (formula "4") (term "0"))
                                                   (builtin "One Step Simplification" (formula "4"))
                                                   (rule "true_left" (formula "4"))
                                                   (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "30") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "30") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "30") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "30") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "30") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "30") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "18") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "allLeft" (formula "17") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_22" (formula "17") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "17") (term "0,1"))
                                                   (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "17") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                   (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "17") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "allLeft" (formula "24") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_21" (formula "24") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_30" (formula "24") (term "0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "24") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "24") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "allLeft" (formula "25") (inst "t=add(Z(1(#)), i_0)"))
                                                   (rule "replaceKnownSelect_taclet010000000000_17" (formula "25") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_29" (formula "25") (term "0,1"))
                                                   (rule "inEqSimp_commuteGeq" (formula "25") (term "1,0"))
                                                   (rule "inEqSimp_commuteLeq" (formula "25") (term "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "25") (term "0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "25") (term "0,0,0"))
                                                   (rule "polySimp_elimOne" (formula "25") (term "0,0,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "25") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "25") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "25") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "25") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "25") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "25") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "25") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "25") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "25") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "25"))
                                                   (rule "allLeft" (formula "23") (inst "t=i_0"))
                                                   (rule "replaceKnownSelect_taclet010000000000_17" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownSelect_taclet010000000000_21" (formula "23") (term "1,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_29" (formula "23") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110010000000000_30" (formula "23") (term "1,1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "1,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "3"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq0" (formula "23") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "23"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "23") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0"))
                                                   (rule "leq_literals" (formula "23"))
                                                   (rule "closeFalse" (formula "23"))
                                                )
                                             )
                                             (branch "result >= 2 + i_0 FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_geqRight" (formula "36"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                (rule "mul_literals" (formula "1") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "35") (term "0,0"))
                                                (rule "add_zero_left" (formula "35") (term "0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                (rule "mul_literals" (formula "35") (term "1"))
                                                (rule "inEqSimp_subsumption1" (formula "35") (ifseqformula "6"))
                                                (rule "leq_literals" (formula "35") (term "0"))
                                                (builtin "One Step Simplification" (formula "35"))
                                                (rule "true_left" (formula "35"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch "result >= 1 + i_0 TRUE"
                                                   (rule "applyEqReverse" (formula "5") (term "2,0") (ifseqformula "4"))
                                                   (rule "hideAuxiliaryEq" (formula "4"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0,0") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_antiSymm" (formula "2") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "27") (term "1,1,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "2"))
                                                   (rule "polySimp_addAssoc" (formula "31") (term "1,0,0"))
                                                   (rule "add_literals" (formula "31") (term "0,1,0,0"))
                                                   (rule "applyEq" (formula "23") (term "1,2,1,0") (ifseqformula "2"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "2,1,0"))
                                                   (rule "add_literals" (formula "23") (term "0,2,1,0"))
                                                   (rule "add_zero_left" (formula "23") (term "2,1,0"))
                                                   (rule "applyEq" (formula "33") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "3") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3"))
                                                   (rule "polySimp_pullOutFactor1" (formula "3") (term "0"))
                                                   (rule "add_literals" (formula "3") (term "1,0"))
                                                   (rule "times_zero_1" (formula "3") (term "0"))
                                                   (rule "leq_literals" (formula "3"))
                                                   (rule "true_left" (formula "3"))
                                                   (rule "applyEq" (formula "19") (term "0,2,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,1,1,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "34") (term "1,0,0,0") (ifseqformula "2"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "19") (term "1,0,0,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "19") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "17") (term "1") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "17") (term "0,1,1,0,0"))
                                                   (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "1,1,0"))
                                                   (rule "add_literals" (formula "26") (term "0,1,1,0"))
                                                   (rule "applyEq" (formula "31") (term "0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "24") (term "0,2,1,1,0") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "1"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "add_zero_left" (formula "23") (term "1,0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                   (rule "mul_literals" (formula "31") (term "1"))
                                                   (rule "inEqSimp_subsumption1" (formula "31") (ifseqformula "3"))
                                                   (rule "leq_literals" (formula "31") (term "0"))
                                                   (builtin "One Step Simplification" (formula "31"))
                                                   (rule "true_left" (formula "31"))
                                                   (rule "commute_or" (formula "23") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "28") (term "0"))
                                                   (branch "to >= 2 + i_0 TRUE"
                                                      (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "29"))
                                                      (rule "hideAuxiliaryEq" (formula "29"))
                                                      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "28"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0,0,0"))
                                                      (rule "add_literals" (formula "4") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                      (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "4") (term "0,0"))
                                                      (rule "qeq_literals" (formula "4") (term "0"))
                                                      (builtin "One Step Simplification" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "allLeft" (formula "16") (inst "t=add(Z(1(#)), i_0)"))
                                                      (rule "replaceKnownSelect_taclet010000000000_19" (formula "16") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "16") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,1,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "16") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "16") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                                      (rule "add_literals" (formula "16") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "16") (term "0,1"))
                                                      (rule "qeq_literals" (formula "16") (term "1"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "true_left" (formula "16"))
                                                      (rule "allLeft" (formula "16") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_22" (formula "16") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "16") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "16") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "16") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "2"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                                      (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "16") (term "0"))
                                                      (rule "allLeft" (formula "19") (inst "t=to"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "19") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_17"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "36")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                      (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                      (rule "mul_literals" (formula "20") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "4"))
                                                      (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                                                      (rule "hideAuxiliaryEq" (formula "19"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19"))
                                                      (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                      (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                      (rule "mul_literals" (formula "19") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                      (rule "allLeft" (formula "33") (inst "t=to"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "33") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "33") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "pullOutSelect" (formula "33") (term "0") (inst "selectSK=arr_18"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "33") (ifseqformula "28"))
                                                      (builtin "One Step Simplification" (formula "33") (ifInst ""  (formula "37")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,1,0,0") (ifseqformula "22"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "33") (term "0,0,1,0,0") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "33") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "33") (term "0,0,0") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "33") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "applyEqReverse" (formula "34") (term "0,1,0,0") (ifseqformula "33"))
                                                      (rule "hideAuxiliaryEq" (formula "33"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "33"))
                                                      (rule "polySimp_mulComm0" (formula "33") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "33") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "33") (term "1,1"))
                                                      (rule "mul_literals" (formula "33") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "33") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "17") (ifseqformula "33"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "17"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "0"))
                                                      (rule "allLeft" (formula "27") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "27") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110010000000000_30" (formula "27") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,1,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "27") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_contradInEq1" (formula "27") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "27") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "leq_literals" (formula "27"))
                                                      (rule "closeFalse" (formula "27"))
                                                   )
                                                   (branch "to >= 2 + i_0 FALSE"
                                                      (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "28"))
                                                      (rule "hideAuxiliaryEq" (formula "28"))
                                                      (rule "inEqSimp_geqRight" (formula "31"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_antiSymm" (formula "5") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "32") (term "1,1,1,0,0") (ifseqformula "5"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "7") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "7"))
                                                      (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                      (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                      (rule "add_literals" (formula "7") (term "0,0"))
                                                      (rule "add_zero_left" (formula "7") (term "0"))
                                                      (rule "applyEq" (formula "24") (term "0,2,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "30") (term "0,2,0,1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "24") (term "0,2,0,1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "5"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "0"))
                                                      (rule "add_literals" (formula "12") (term "0,0"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "24") (term "1,0,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1,1") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "28") (term "2,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "30") (term "0,2,0,1,0") (ifseqformula "5"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "6"))
                                                      (rule "polySimp_pullOutFactor1" (formula "6") (term "0"))
                                                      (rule "add_literals" (formula "6") (term "1,0"))
                                                      (rule "times_zero_1" (formula "6") (term "0"))
                                                      (rule "leq_literals" (formula "6"))
                                                      (rule "true_left" (formula "6"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "18") (term "1,1,1,0,0") (ifseqformula "4"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "4"))
                                                      (rule "polySimp_addAssoc" (formula "12") (term "1"))
                                                      (rule "add_literals" (formula "12") (term "0,1"))
                                                      (rule "inEqSimp_invertInEq0" (formula "5"))
                                                      (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                                      (rule "times_zero_2" (formula "5") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "5") (term "0"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "15") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,0"))
                                                      (rule "replace_known_left" (formula "15") (term "0,1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "21") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,0"))
                                                      (rule "replace_known_left" (formula "21") (term "0,1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "27") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,1"))
                                                      (rule "replace_known_left" (formula "27") (term "0,1,0,1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "15") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0,1"))
                                                      (rule "replace_known_left" (formula "15") (term "0,1,0,1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,1,0,1"))
                                                      (rule "replace_known_left" (formula "21") (term "0,1,0,1") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "seqDef_induction_upper_concrete" (formula "27") (term "0,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0,0"))
                                                      (rule "replace_known_left" (formula "27") (term "0,1,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "pullOutSelect" (formula "15") (term "0,1,0,0") (inst "selectSK=arr_17"))
                                                      (rule "applyEq" (formula "22") (term "0,1,0,1") (ifseqformula "15"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "15") (ifseqformula "13"))
                                                      (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "32")) (ifInst ""  (formula "8")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "narrowSelectArrayType" (formula "15") (term "1,0") (ifseqformula "12") (ifseqformula "32"))
                                                      (rule "narrowSelectArrayType" (formula "15") (term "2,0") (ifseqformula "5") (ifseqformula "32"))
                                                      (rule "inEqSimp_commuteLeq" (formula "15") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "15") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_homoInEq0" (formula "15") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "applyEqReverse" (formula "16") (term "0,1,0,0") (ifseqformula "15"))
                                                      (rule "applyEqReverse" (formula "22") (term "0,1,0,1") (ifseqformula "15"))
                                                      (rule "hideAuxiliaryEq" (formula "15"))
                                                      (rule "pullOutSelect" (formula "21") (term "0,1,0,0") (inst "selectSK=arr_18"))
                                                      (rule "applyEq" (formula "28") (term "0,1,0,1") (ifseqformula "21"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "21") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "21") (ifInst ""  (formula "32")))
                                                      (rule "replaceKnownSelect_taclet101110010000000000_34" (formula "21") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101110010000000000_35" (formula "21") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "21") (term "0,1,0,0") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "21") (term "0,0,1,0,0") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "narrowSelectArrayType" (formula "21") (term "1,0") (ifseqformula "18") (ifseqformula "32"))
                                                      (rule "inEqSimp_commuteLeq" (formula "21") (term "0,0,0"))
                                                      (rule "replace_known_left" (formula "21") (term "0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "applyEqReverse" (formula "28") (term "0,1,0,1") (ifseqformula "21"))
                                                      (rule "applyEqReverse" (formula "22") (term "0,1,0,0") (ifseqformula "21"))
                                                      (rule "hideAuxiliaryEq" (formula "21"))
                                                      (rule "pullOutSelect" (formula "27") (term "0,1,0,0") (inst "selectSK=arr_19"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
                                                      (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "32")))
                                                      (rule "replaceKnownSelect_taclet101110010000000000_36" (formula "27") (term "2,0"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet101110010000000000_37" (formula "27") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,0,1,0,0") (ifseqformula "13"))
                                                      (rule "replace_known_left" (formula "27") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "narrowSelectArrayType" (formula "27") (term "1,0") (ifseqformula "24") (ifseqformula "32"))
                                                      (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "27"))
                                                      (rule "applyEqReverse" (formula "28") (term "0,1,0,0") (ifseqformula "27"))
                                                      (rule "hideAuxiliaryEq" (formula "27"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "29") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "29") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "29") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "29") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "29") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "29") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "29"))
                                                      (rule "true_left" (formula "29"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "28") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "17") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "17") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "allLeft" (formula "22") (inst "t=i_0"))
                                                      (rule "replaceKnownSelect_taclet010000000000_21" (formula "22") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110010000000000_30" (formula "22") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "22") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "22") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "22") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "22"))
                                                      (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "2"))
                                                      (rule "andLeft" (formula "22"))
                                                      (rule "inEqSimp_homoInEq1" (formula "22"))
                                                      (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                      (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                      (rule "add_literals" (formula "22") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "22") (term "1,0"))
                                                      (rule "add_zero_right" (formula "22") (term "0"))
                                                      (rule "leq_literals" (formula "22"))
                                                      (rule "closeFalse" (formula "22"))
                                                   )
                                                )
                                                (branch "result >= 1 + i_0 FALSE"
                                                   (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_geqRight" (formula "36"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "replace_known_left" (formula "3") (term "0,0") (ifseqformula "1"))
                                                   (builtin "One Step Simplification" (formula "3"))
                                                   (rule "applyEqReverse" (formula "5") (term "0") (ifseqformula "3"))
                                                   (rule "hideAuxiliaryEq" (formula "3"))
                                                   (rule "inEqSimp_subsumption0" (formula "2") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0"))
                                                   (rule "qeq_literals" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "true_left" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "33") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "33") (term "0,0"))
                                                   (rule "add_zero_left" (formula "33") (term "0"))
                                                   (rule "commute_or" (formula "25") (term "0,0"))
                                                   (rule "ifthenelse_split" (formula "30") (term "0"))
                                                   (branch "to >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "32") (term "0,1,0") (ifseqformula "31"))
                                                      (rule "hideAuxiliaryEq" (formula "31"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "result <= -1 + i_0 TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_subsumption0" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "31") (ifseqformula "1"))
                                                         (rule "times_zero_1" (formula "31") (term "0,0"))
                                                         (rule "add_zero_left" (formula "31") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "31"))
                                                         (rule "mul_literals" (formula "31") (term "1"))
                                                         (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "31"))
                                                         (rule "leq_literals" (formula "3") (term "0"))
                                                         (builtin "One Step Simplification" (formula "3"))
                                                         (rule "true_left" (formula "3"))
                                                         (rule "allLeft" (formula "17") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "17") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "17") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "17") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "17") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,1"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "17") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "17") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "17") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "inEqSimp_contradInEq0" (formula "17") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                         (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "17") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "17"))
                                                         (rule "allLeft" (formula "33") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "33") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11110010000000000_31" (formula "33") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "33") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "33") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "33") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "33") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "33") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "33") (term "0,0,0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "33") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "inEqSimp_contradInEq1" (formula "33") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "33") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0"))
                                                         (rule "add_literals" (formula "33") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "33") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "33") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "33") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "33"))
                                                         (rule "allLeft" (formula "18") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "18") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "29"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "18") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "pullOutSelect" (formula "18") (term "0") (inst "selectSK=arr_17"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "18") (ifseqformula "13"))
                                                         (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "38")) (ifInst ""  (formula "8")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "18") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_commuteLeq" (formula "18") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                                         (rule "qeq_literals" (formula "18") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "19"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "18") (term "0,0") (ifseqformula "4"))
                                                         (rule "leq_literals" (formula "18") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "applyEqReverse" (formula "19") (term "1,1") (ifseqformula "18"))
                                                         (rule "hideAuxiliaryEq" (formula "18"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18"))
                                                         (rule "polySimp_addComm1" (formula "18") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "18"))
                                                         (rule "polySimp_mulComm0" (formula "18") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "18") (term "1"))
                                                         (rule "mul_literals" (formula "18") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "18") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "18") (term "1,1"))
                                                         (rule "allLeft" (formula "35") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,1,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "35") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_contradInEq1" (formula "35") (term "0") (ifseqformula "29"))
                                                         (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "35") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "pullOutSelect" (formula "35") (term "0") (inst "selectSK=arr_18"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "27"))
                                                         (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "39")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "21"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "13"))
                                                         (rule "replace_known_left" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "8"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "35") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "35") (term "0,0,0") (ifseqformula "29"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "35") (term "0,0,0"))
                                                         (rule "add_literals" (formula "35") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "35") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "35") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "35"))
                                                         (rule "applyEqReverse" (formula "36") (term "0,1,0,0") (ifseqformula "35"))
                                                         (rule "hideAuxiliaryEq" (formula "35"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "35"))
                                                         (rule "polySimp_mulComm0" (formula "35") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "35") (term "1"))
                                                         (rule "mul_literals" (formula "35") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "35") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "35") (term "1,1"))
                                                         (rule "allLeft" (formula "36") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "36") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011110010000000000_33" (formula "36") (term "0,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "36") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,1,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "36") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "36") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "inEqSimp_contradInEq1" (formula "36") (term "0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "36") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "36") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                         (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "36") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "36"))
                                                         (rule "allLeft" (formula "16") (inst "t=result"))
                                                         (rule "replaceKnownSelect_taclet000_0" (formula "16") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "16") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,1,0"))
                                                         (rule "add_literals" (formula "16") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "16") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "16") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "16") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "inEqSimp_homoInEq0" (formula "16") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1"))
                                                         (rule "add_literals" (formula "16") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "16") (term "0,1"))
                                                         (rule "qeq_literals" (formula "16") (term "1"))
                                                         (builtin "One Step Simplification" (formula "16"))
                                                         (rule "true_left" (formula "16"))
                                                         (rule "allLeft" (formula "31") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "31") (term "0,1"))
                                                         (rule "replaceKnownSelect_taclet010000000000_18" (formula "31") (term "1,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11110010000000000_31" (formula "31") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0011110010000000000_33" (formula "31") (term "1,1"))
                                                         (rule "inEqSimp_commuteLeq" (formula "31") (term "0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "31") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq0" (formula "31") (term "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "31") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "31") (term "0,0,1"))
                                                         (rule "polySimp_addComm0" (formula "31") (term "0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1"))
                                                         (rule "add_literals" (formula "31") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "31") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "31") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "31") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "31"))
                                                         (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "31"))
                                                         (rule "andLeft" (formula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0"))
                                                         (rule "leq_literals" (formula "1"))
                                                         (rule "closeFalse" (formula "1"))
                                                      )
                                                      (branch "result <= -1 + i_0 FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_leqRight" (formula "33"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "2"))
                                                         (rule "applyEq" (formula "22") (term "1,2,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "26") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "26") (term "1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "32") (term "0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "18") (term "0,2,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "32") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "0"))
                                                         (rule "qeq_literals" (formula "2"))
                                                         (rule "true_left" (formula "2"))
                                                         (rule "applyEq" (formula "18") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "26") (term "1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "30") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "18") (term "1,0,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "31") (term "0,2,1,1,1,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "1"))
                                                         (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "1"))
                                                         (rule "allLeft" (formula "30") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "30") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "pullOutSelect" (formula "30") (term "0") (inst "selectSK=arr_17"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "30") (ifseqformula "26"))
                                                         (builtin "One Step Simplification" (formula "30") (ifInst ""  (formula "34")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,1,0,0") (ifseqformula "20"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "30") (term "0,0,1,0,0") (ifseqformula "14"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_commuteLeq" (formula "30") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "30") (term "0,0,0") (ifseqformula "4"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "inEqSimp_homoInEq1" (formula "31"))
                                                         (rule "polySimp_addComm1" (formula "31") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "30") (term "0,0,0"))
                                                         (rule "add_literals" (formula "30") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "30") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "30") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "30"))
                                                         (rule "applyEqReverse" (formula "31") (term "0,1,0,0") (ifseqformula "30"))
                                                         (rule "hideAuxiliaryEq" (formula "30"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "30"))
                                                         (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                         (rule "mul_literals" (formula "30") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "30"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                         (rule "allLeft" (formula "19") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,1,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "19") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_contradInEq1" (formula "19") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "19") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "19") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "pullOutSelect" (formula "19") (term "0") (inst "selectSK=arr_18"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "19") (ifseqformula "15"))
                                                         (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                                                         (rule "elementOfArrayRangeConcrete" (formula "19") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_commuteLeq" (formula "19") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0,0"))
                                                         (rule "add_literals" (formula "19") (term "1,0,1,0,0"))
                                                         (rule "times_zero_1" (formula "19") (term "0,1,0,0"))
                                                         (rule "qeq_literals" (formula "19") (term "1,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                         (rule "mul_literals" (formula "20") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "19") (term "0,0") (ifseqformula "6"))
                                                         (rule "leq_literals" (formula "19") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "19"))
                                                         (rule "applyEqReverse" (formula "20") (term "1,1") (ifseqformula "19"))
                                                         (rule "hideAuxiliaryEq" (formula "19"))
                                                         (rule "inEqSimp_homoInEq0" (formula "19"))
                                                         (rule "polySimp_addComm1" (formula "19") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                         (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                         (rule "mul_literals" (formula "19") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                         (rule "allLeft" (formula "20") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_19" (formula "20") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_20" (formula "20") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,1,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,1,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,1,0"))
                                                         (rule "polySimp_addComm1" (formula "20") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "20") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "20") (term "0,0,1,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "20") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                                         (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "20") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "20"))
                                                         (rule "allLeft" (formula "18") (inst "t=i_0"))
                                                         (rule "replaceKnownSelect_taclet010000000000_22" (formula "18") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet010000000000_23" (formula "18") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                                         (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "18") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "inEqSimp_homoInEq0" (formula "18") (term "1"))
                                                         (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1"))
                                                         (rule "add_literals" (formula "18") (term "1,0,1"))
                                                         (rule "times_zero_1" (formula "18") (term "0,1"))
                                                         (rule "qeq_literals" (formula "18") (term "1"))
                                                         (builtin "One Step Simplification" (formula "18"))
                                                         (rule "true_left" (formula "18"))
                                                         (rule "allLeft" (formula "34") (inst "t=add(Z(1(#)), i_0)"))
                                                         (rule "replaceKnownSelect_taclet010000000000_16" (formula "34") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet11110010000000000_31" (formula "34") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "34") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "34") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,0,0"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                         (rule "add_zero_left" (formula "34") (term "0,0,0"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "34") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,0"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "34") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "34") (term "1,1"))
                                                         (rule "mul_literals" (formula "34") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "34") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                         (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "34") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "34"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "34"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                                         (rule "mul_literals" (formula "3") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0,0"))
                                                         (rule "add_literals" (formula "3") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "to >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "31") (term "0,1,0") (ifseqformula "30"))
                                                      (rule "hideAuxiliaryEq" (formula "30"))
                                                      (rule "inEqSimp_geqRight" (formula "34"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "19") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "16") (term "2,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "26") (term "0,2,0,1,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "17") (term "0,2,0,1,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "28") (term "2,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "30") (term "0,2,0,1,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "6") (term "0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "17") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "24") (term "1,0,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "24") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "17") (term "0,2,0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "24") (term "0,2,0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "30") (term "0,2,0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "31") (term "1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "18"))
                                                      (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "5"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0"))
                                                      (rule "leq_literals" (formula "5"))
                                                      (rule "closeFalse" (formula "5"))
                                                   )
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: result >= 0 FALSE"
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "true_left" (formula "41"))
                                       (rule "inEqSimp_geqRight" (formula "42"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "1"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "0,0"))
                                       (rule "polySimp_addComm0" (formula "24") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "18") (term "0") (ifseqformula "24"))
                                       (rule "qeq_literals" (formula "18") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "18"))
                                       (rule "true_left" (formula "18"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "15"))
                                       (rule "qeq_literals" (formula "23") (term "0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "closeFalse" (formula "23"))
                                    )
                                 )
                                 (branch
                                    (rule "andRight" (formula "45"))
                                    (branch
                                       (rule "impRight" (formula "45"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (builtin "One Step Simplification" (formula "46"))
                                       (rule "allRight" (formula "46") (inst "sk=x_0"))
                                       (rule "impRight" (formula "46"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "replace_known_left" (formula "24") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "13"))
                                       (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "3"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "inEqSimp_gtRight" (formula "48"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_ltToLeq" (formula "46") (term "0"))
                                       (rule "polySimp_rightDist" (formula "46") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "46") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "46") (term "0,0,0"))
                                       (rule "add_literals" (formula "46") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "46") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "43") (term "0"))
                                       (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                       (rule "add_literals" (formula "43") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "43") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "36") (term "0"))
                                       (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "27") (term "0"))
                                       (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "27") (term "0,1,0,0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "13"))
                                       (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                       (rule "polySimp_addComm1" (formula "13") (term "0"))
                                       (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1"))
                                       (rule "inEqSimp_gtToGeq" (formula "4"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "25") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                       (rule "inEqSimp_gtToGeq" (formula "34") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "27") (term "0,0,0"))
                                       (rule "add_literals" (formula "27") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                       (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                       (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "44") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "44") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                       (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "35") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "35"))
                                       (rule "applyEqReverse" (formula "36") (term "1,1,0,1") (ifseqformula "35"))
                                       (rule "applyEqReverse" (formula "42") (term "2,0") (ifseqformula "35"))
                                       (rule "hideAuxiliaryEq" (formula "35"))
                                       (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                       (rule "qeq_literals" (formula "41") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqReverse" (formula "42") (term "0,1,0,0,1,0,1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "33") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "33") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "33") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "33") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "33") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "applyEqReverse" (formula "34") (term "0,1,0,0,1,0") (ifseqformula "33"))
                                       (rule "hideAuxiliaryEq" (formula "33"))
                                       (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "42") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                       (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0") (ifseqformula "24"))
                                       (rule "applyEqReverse" (formula "33") (term "0,1,0,0,1,0") (ifseqformula "24"))
                                       (rule "hideAuxiliaryEq" (formula "24"))
                                       (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "41") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "41") (term "0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "41") (term "0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "41") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "41") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "41") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "41") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "41") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "41"))
                                       (rule "applyEqReverse" (formula "42") (term "1,1,0,1") (ifseqformula "41"))
                                       (rule "hideAuxiliaryEq" (formula "41"))
                                       (rule "polySimp_addAssoc" (formula "25") (term "0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "25") (term "0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0,0"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,1,0,0"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,1,0,0"))
                                       (rule "add_zero_right" (formula "25") (term "0,1,0,0"))
                                       (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "applyEqReverse" (formula "40") (term "2,0") (ifseqformula "25"))
                                       (rule "applyEqReverse" (formula "26") (term "1,1,0,1") (ifseqformula "25"))
                                       (rule "hideAuxiliaryEq" (formula "25"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                       (rule "polySimp_elimOne" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "40") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "40") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                       (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                       (rule "polySimp_elimOne" (formula "13") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "mul_literals" (formula "4") (term "1"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                       (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "25") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,1"))
                                       (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1"))
                                       (rule "mul_literals" (formula "38") (term "0,1,1,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                       (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "39") (term "1,0,0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm0" (formula "39") (term "0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "39") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "39") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "39") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "39") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "39"))
                                       (rule "applyEqReverse" (formula "40") (term "1,1,0,1") (ifseqformula "39"))
                                       (rule "hideAuxiliaryEq" (formula "39"))
                                       (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "11") (term "0"))
                                       (builtin "One Step Simplification" (formula "11"))
                                       (rule "true_left" (formula "11"))
                                       (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_8"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                                       (rule "inEqSimp_commuteLeq" (formula "2"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0"))
                                       (rule "qeq_literals" (formula "3") (term "0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "true_left" (formula "3"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_9"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_10"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "36"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "43")))
                                       (rule "replaceKnownSelect_taclet00000_5" (formula "3") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_11" (formula "3") (term "2,0"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_12" (formula "3") (term "2,0"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "29"))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,0,1,0,0") (ifseqformula "19"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,0,1,0,0") (ifseqformula "12"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_commuteGeq" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "1,0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0,0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "0,0,0") (ifseqformula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,0,0,0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0,0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,0,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,0,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,0,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,0,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                       (rule "hideAuxiliaryEq" (formula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "3"))
                                       (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_11"))
                                       (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "12")))
                                       (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                                       (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                       (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                       (builtin "One Step Simplification" (formula "1"))
                                       (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                       (rule "hideAuxiliaryEq" (formula "1"))
                                       (rule "nnf_imp2or" (formula "23") (term "0"))
                                       (rule "nnf_imp2or" (formula "16") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "33") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "26") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "38") (term "0"))
                                       (rule "nnf_imp2or" (formula "24") (term "0"))
                                       (rule "nnf_imp2or" (formula "15") (term "0"))
                                       (rule "nnf_imp2or" (formula "31") (term "0"))
                                       (rule "nnf_imp2or" (formula "25") (term "0"))
                                       (rule "nnf_imp2or" (formula "39") (term "0,1"))
                                       (rule "nnf_imp2or" (formula "32") (term "0"))
                                       (rule "nnf_imp2or" (formula "40") (term "0,1"))
                                       (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                       (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "15") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0"))
                                       (rule "mul_literals" (formula "15") (term "0,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                       (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "25") (term "0,0"))
                                       (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0"))
                                       (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0"))
                                       (rule "mul_literals" (formula "25") (term "0,1,1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0"))
                                       (rule "nnf_notAnd" (formula "32") (term "0,0"))
                                       (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "32") (term "0,0,0,1,0,0"))
                                       (rule "add_zero_left" (formula "32") (term "0,0,1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0"))
                                       (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0"))
                                       (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                       (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0"))
                                       (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0"))
                                       (rule "nnf_notAnd" (formula "16") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "16") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "33") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1"))
                                       (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1"))
                                       (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1"))
                                       (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "26") (term "0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,1"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0,1"))
                                       (rule "nnf_notAnd" (formula "39") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1"))
                                       (rule "nnf_notAnd" (formula "40") (term "0,0,1"))
                                       (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0,1"))
                                       (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0,1"))
                                       (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0,1"))
                                       (rule "add_literals" (formula "40") (term "0,0,0,0,0,0,1"))
                                       (rule "add_zero_left" (formula "40") (term "0,0,0,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0,1"))
                                       (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0,1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0,1"))
                                       (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0,1"))
                                       (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0,1"))
                                       (rule "mul_literals" (formula "40") (term "0,1,1,0,0,1"))
                                       (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0,1"))
                                       (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0,1"))
                                       (rule "cut_direct" (formula "39") (term "0"))
                                       (branch "CUT: result >= 0 TRUE"
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "commute_or" (formula "38") (term "0,0"))
                                          (rule "commute_or" (formula "31") (term "0,0"))
                                          (rule "cut_direct" (formula "41") (term "0"))
                                          (branch "CUT: array.length >= 2 + to TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "replace_known_left" (formula "16") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "14") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "14") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "14") (term "1,0,0"))
                                             (rule "mul_literals" (formula "14") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "14") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "14") (term "0,0,0"))
                                             (rule "add_literals" (formula "14") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0"))
                                             (rule "add_literals" (formula "14") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "14") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "14") (term "0,0"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "cut_direct" (formula "32") (term "0"))
                                             (branch "CUT: array.length >= 1 + result TRUE"
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "ifthenelse_split" (formula "1") (term "0"))
                                                (branch "x_0 <= -1 + result TRUE"
                                                   (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                   (rule "hideAuxiliaryEq" (formula "2"))
                                                   (rule "inEqSimp_commuteGeq" (formula "2"))
                                                   (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                   (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                   (rule "mul_literals" (formula "3") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "3"))
                                                   (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "20") (term "0,0"))
                                                   (rule "qeq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "true_left" (formula "20"))
                                                   (rule "allLeft" (formula "30") (inst "t=x_0"))
                                                   (rule "replaceKnownSelect_taclet0110000000000_17" (formula "30") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet00000110000000000_22" (formula "30") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "1"))
                                                   (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "30") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "30") (term "0,0,1"))
                                                   (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                   (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "30") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "30"))
                                                   (rule "andLeft" (formula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                                   (rule "mul_literals" (formula "4") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "4") (term "1,0"))
                                                   (rule "add_zero_right" (formula "4") (term "0"))
                                                   (rule "leq_literals" (formula "4"))
                                                   (rule "closeFalse" (formula "4"))
                                                )
                                                (branch "x_0 <= -1 + result FALSE"
                                                   (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                   (rule "hideAuxiliaryEq" (formula "1"))
                                                   (rule "inEqSimp_leqRight" (formula "42"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "allLeft" (formula "24") (inst "t=x_0"))
                                                   (rule "replaceKnownSelect_taclet0110000000000_20" (formula "24") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_21" (formula "24") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "24") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "24"))
                                                   (rule "allLeft" (formula "26") (inst "t=x_0"))
                                                   (rule "replaceKnownSelect_taclet0110000000000_20" (formula "26") (term "0,1"))
                                                   (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_21" (formula "26") (term "0,1"))
                                                   (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "26") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "26"))
                                                   (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "26"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                   (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                   (rule "allLeft" (formula "14") (inst "t=x_0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                   (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "14") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "14"))
                                                   (rule "allLeft" (formula "16") (inst "t=x_0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                                   (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                   (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "16") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                   (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                   (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                   (rule "mul_literals" (formula "14") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                   (rule "ifthenelse_split" (formula "2") (term "0"))
                                                   (branch "x_0 >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                      (rule "hideAuxiliaryEq" (formula "3"))
                                                      (rule "inEqSimp_commuteGeq" (formula "3"))
                                                      (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "1") (term "0,0"))
                                                      (rule "qeq_literals" (formula "1") (term "0"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                      (rule "mul_literals" (formula "1") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0"))
                                                      (rule "qeq_literals" (formula "23") (term "0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "allLeft" (formula "46") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_16" (formula "46") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000110000000000_23" (formula "46") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "allLeft" (formula "24") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_20" (formula "24") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_21" (formula "24") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_exactShadow3" (formula "24") (ifseqformula "29"))
                                                      (rule "polySimp_rightDist" (formula "24") (term "0,0"))
                                                      (rule "mul_literals" (formula "24") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "24"))
                                                      (rule "polySimp_mulLiterals" (formula "24") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "24") (term "0"))
                                                      (rule "allLeft" (formula "46") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_16" (formula "46") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000110000000000_23" (formula "46") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                                      (rule "mul_literals" (formula "46") (term "0,1,1"))
                                                      (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                      (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "46") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "46"))
                                                      (rule "allLeft" (formula "36") (inst "t=from"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_homoInEq1" (formula "36") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0"))
                                                      (rule "pullOutSelect" (formula "36") (term "0,1") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "54")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "36") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "36") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_commuteGeq" (formula "37") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "36") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "36") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "36") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "36") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "36") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "36") (term "1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=arr_13"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "55")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "36") (term "2,0") (inst "selectSK=arr_14"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "36") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_commuteLeq" (formula "36") (term "1,0,0"))
                                                      (rule "replace_known_left" (formula "36") (term "1,0,0") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "36") (term "0,0,0"))
                                                      (rule "add_literals" (formula "36") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "36") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "36") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "36") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "applyEqReverse" (formula "37") (term "2,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=arr_15"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "56")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_subsumption1" (formula "37") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "commute_or" (formula "38"))
                                                      (rule "allLeft" (formula "47") (inst "t=mul(from, Z(neglit(1(#))))"))
                                                      (rule "inEqSimp_commuteLeq" (formula "47") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "47") (term "1,0"))
                                                      (rule "pullOutSelect" (formula "47") (term "0,1") (inst "selectSK=arr_16"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "57")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "33"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "47") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "47") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "inEqSimp_commuteGeq" (formula "48") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "47") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "47") (term "2,0") (inst "selectSK=arr_17"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "47") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "47") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "47") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "47") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "47") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "47") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "47") (term "0,0,0") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "47") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "47") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "47") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "47") (ifInst ""  (formula "58")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "47") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "inEqSimp_commuteLeq" (formula "47") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor3b" (formula "47") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "47") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "47") (term "0,0,0") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "47") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "47") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "applyEqReverse" (formula "48") (term "2,0") (ifseqformula "47"))
                                                      (rule "hideAuxiliaryEq" (formula "47"))
                                                      (rule "pullOutSelect" (formula "48") (term "0,1") (inst "selectSK=arr_18"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "58")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "33"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "48") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "48") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "48") (term "2,0") (inst "selectSK=arr_19"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "48") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "48") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor3" (formula "48") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "48") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "48") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "48") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "48") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "48") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "48") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "48") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "48") (term "0,0,0") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "48") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "48") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "48") (ifInst ""  (formula "59")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "48") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "inEqSimp_commuteLeq" (formula "48") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor3" (formula "48") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "48") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "48") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "48") (term "1,0,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "48") (term "0,0,0") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "48") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "mul_literals" (formula "48") (term "1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "48") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "48"))
                                                      (rule "applyEqReverse" (formula "49") (term "2,0") (ifseqformula "48"))
                                                      (rule "hideAuxiliaryEq" (formula "48"))
                                                      (rule "commute_or_2" (formula "49"))
                                                      (rule "allLeft" (formula "50") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_16" (formula "50") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000110000000000_23" (formula "50") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "50") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "pullOutSelect" (formula "50") (term "0,1") (inst "selectSK=arr_20"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "44"))
                                                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "60")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "33"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "50") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_commuteGeq" (formula "51") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "50") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "50") (term "0,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "pullOutSelect" (formula "50") (term "2,0") (inst "selectSK=arr_21"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "33"))
                                                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "50") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "50") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "50") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "50") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,1,0,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "50") (term "1,0,0") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,1,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "50") (term "0,0,0,0,1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "leq_literals" (formula "50") (term "0,1,0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "50") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "50") (ifInst ""  (formula "61")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "50") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "50") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "50") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "50") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "50") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "50") (term "0,1,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "50") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "50") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "50") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "50") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "50") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "50") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "50") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "50") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "50") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "50") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "50"))
                                                      (rule "allLeft" (formula "39") (inst "t=mul(from, Z(neglit(1(#))))"))
                                                      (rule "replaceKnownSelect_taclet010000110000000000_31" (formula "39") (term "0,1"))
                                                      (rule "replaceKnownSelect_taclet010000110000000000_35" (formula "39") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000110000000000_33" (formula "39") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet010000110000000000_37" (formula "39") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0"))
                                                      (rule "inEqSimp_subsumption6" (formula "39") (term "0,0") (ifseqformula "6"))
                                                      (rule "greater_literals" (formula "39") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "true_left" (formula "39"))
                                                      (rule "allLeft" (formula "31") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "31") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "31") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "31") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_contradInEq1" (formula "31") (term "0") (ifseqformula "22"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "inEqSimp_subsumption0" (formula "31") (ifseqformula "24"))
                                                      (rule "inEqSimp_homoInEq0" (formula "31") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "31") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "31") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "31") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "31") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,0"))
                                                      (rule "qeq_literals" (formula "31") (term "0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "allLeft" (formula "17") (inst "t=result"))
                                                      (rule "inEqSimp_commuteLeq" (formula "17") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "17") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "17") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "17") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0,0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "inEqSimp_contradInEq1" (formula "17") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "17") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "17") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "17") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "17") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "17") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "17") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "17") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "17") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "allLeft" (formula "30") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "25"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "28") (ifseqformula "30"))
                                                      (rule "inEqSimp_homoInEq0" (formula "28") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0"))
                                                      (rule "qeq_literals" (formula "28") (term "0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "true_left" (formula "28"))
                                                      (rule "inEqSimp_exactShadow3" (formula "30") (ifseqformula "57"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "0,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "30") (term "0,0"))
                                                      (rule "add_literals" (formula "30") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1"))
                                                      (rule "mul_literals" (formula "30") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "30") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "30") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                   (branch "x_0 >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_geqRight" (formula "47"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_commuteGeq" (formula "3"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "27") (ifseqformula "3"))
                                                      (rule "andLeft" (formula "27"))
                                                      (rule "inEqSimp_homoInEq1" (formula "27"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "27") (term "0"))
                                                      (rule "add_literals" (formula "27") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "27") (term "1,0"))
                                                      (rule "add_zero_right" (formula "27") (term "0"))
                                                      (rule "leq_literals" (formula "27"))
                                                      (rule "closeFalse" (formula "27"))
                                                   )
                                                )
                                             )
                                             (branch "CUT: array.length >= 1 + result FALSE"
                                                (builtin "One Step Simplification" (formula "32"))
                                                (rule "true_left" (formula "32"))
                                                (rule "inEqSimp_geqRight" (formula "41"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                (rule "times_zero_1" (formula "14") (term "0,0"))
                                                (rule "add_zero_left" (formula "14") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "40") (term "0,0"))
                                                (rule "mul_literals" (formula "40") (term "0,0,0"))
                                                (rule "polySimp_addComm1" (formula "40") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "40"))
                                                (rule "polySimp_mulLiterals" (formula "40") (term "0"))
                                                (rule "polySimp_elimOne" (formula "40") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "40"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_zero_right" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                          )
                                          (branch "CUT: array.length >= 2 + to FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "26"))
                                             (rule "true_left" (formula "26"))
                                             (rule "replace_known_right" (formula "16") (term "0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "true_left" (formula "16"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "15") (ifseqformula "1"))
                                             (rule "applyEq" (formula "30") (term "1,1") (ifseqformula "15"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "15"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "32") (term "0,0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "32") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0,0"))
                                             (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "15"))
                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0"))
                                             (rule "leq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "14"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "13"))
                                             (rule "mul_literals" (formula "13") (term "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0"))
                                             (rule "polySimp_mulLiterals" (formula "31") (term "0,0"))
                                             (rule "polySimp_elimOne" (formula "31") (term "0,0"))
                                             (rule "replace_known_left" (formula "31") (term "0") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "31"))
                                             (rule "seqDef_induction_upper_concrete" (formula "28") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "28") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,1,0"))
                                             (rule "seqDef_induction_upper_concrete" (formula "35") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "35") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,1,0"))
                                             (rule "seqDef_induction_upper_concrete" (formula "19") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "19") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "19") (term "0,1,0"))
                                             (rule "pullOutSelect" (formula "28") (term "0,1,1,1") (inst "selectSK=arr_12"))
                                             (rule "applyEq" (formula "19") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "17"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")) (ifInst ""  (formula "11")))
                                             (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "narrowSelectArrayType" (formula "28") (term "2,0") (ifseqformula "8") (ifseqformula "41"))
                                             (rule "narrowSelectArrayType" (formula "28") (term "1,0") (ifseqformula "16") (ifseqformula "41"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "28") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "inEqSimp_subsumption1" (formula "28") (term "0,0") (ifseqformula "7"))
                                             (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,1") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "19") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "pullOutSelect" (formula "28") (term "0,1,1,0") (inst "selectSK=arr_13"))
                                             (rule "applyEq" (formula "36") (term "0,1,1,1") (ifseqformula "28"))
                                             (rule "simplifySelectOfAnonEQ" (formula "28") (ifseqformula "26"))
                                             (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "41")))
                                             (rule "replaceKnownSelect_taclet100110000000000_22" (formula "28") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100110000000000_23" (formula "28") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "28") (term "0,1,0,0") (ifseqformula "17"))
                                             (rule "replace_known_left" (formula "28") (term "0,0,1,0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "elementOfArrayRangeConcrete" (formula "28") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "narrowSelectArrayType" (formula "28") (term "1,0") (ifseqformula "25") (ifseqformula "41"))
                                             (rule "inEqSimp_commuteLeq" (formula "28") (term "0,0,0"))
                                             (rule "inEqSimp_contradInEq1" (formula "28") (term "1,0,0") (ifseqformula "21"))
                                             (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1,0,0"))
                                             (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0"))
                                             (rule "polySimp_addComm0" (formula "28") (term "0,0,0,1,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1,0,0"))
                                             (rule "add_literals" (formula "28") (term "1,1,0,0,1,0,0"))
                                             (rule "times_zero_1" (formula "28") (term "1,0,0,1,0,0"))
                                             (rule "add_zero_right" (formula "28") (term "0,0,1,0,0"))
                                             (rule "leq_literals" (formula "28") (term "0,1,0,0"))
                                             (builtin "One Step Simplification" (formula "28"))
                                             (rule "applyEqReverse" (formula "36") (term "0,1,1,1") (ifseqformula "28"))
                                             (rule "applyEqReverse" (formula "29") (term "0,1,1,0") (ifseqformula "28"))
                                             (rule "hideAuxiliaryEq" (formula "28"))
                                             (rule "pullOutSelect" (formula "35") (term "0,1,1,0") (inst "selectSK=arr_14"))
                                             (rule "simplifySelectOfAnonEQ" (formula "35") (ifseqformula "33"))
                                             (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "41")))
                                             (rule "replaceKnownSelect_taclet100110000000000_24" (formula "35") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100110000000000_25" (formula "35") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0,0") (ifseqformula "26"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0,0") (ifseqformula "17"))
                                             (rule "replace_known_left" (formula "35") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "elementOfArrayRangeConcrete" (formula "35") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "narrowSelectArrayType" (formula "35") (term "1,0") (ifseqformula "32") (ifseqformula "41"))
                                             (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "35") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "35") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "35") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "35") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "35"))
                                             (rule "ifthenelse_split" (formula "1") (term "0"))
                                             (branch "x_0 <= -1 + result TRUE"
                                                (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                (builtin "One Step Simplification" (formula "2"))
                                                (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                (rule "hideAuxiliaryEq" (formula "2"))
                                                (rule "inEqSimp_commuteGeq" (formula "2"))
                                                (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                (rule "mul_literals" (formula "3") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "3"))
                                                (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "20") (term "0,0"))
                                                (rule "qeq_literals" (formula "20") (term "0"))
                                                (builtin "One Step Simplification" (formula "20"))
                                                (rule "true_left" (formula "20"))
                                                (rule "ifthenelse_split" (formula "19") (term "1,1"))
                                                (branch "to >= 0 TRUE"
                                                   (rule "replace_known_left" (formula "36") (term "0,1,1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "19")))
                                                   (rule "replace_known_left" (formula "28") (term "0,1,1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "19")))
                                                   (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "ifthenelse_split" (formula "34") (term "0"))
                                                   (branch "to >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "34"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "allLeft" (formula "14") (inst "t=to"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "allLeft" (formula "15") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "30") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_17" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100110000000000_27" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "30") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "30"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0"))
                                                      (rule "leq_literals" (formula "30"))
                                                      (rule "closeFalse" (formula "30"))
                                                   )
                                                   (branch "to >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "35") (term "0,1,0") (ifseqformula "34"))
                                                      (rule "hideAuxiliaryEq" (formula "34"))
                                                      (rule "inEqSimp_geqRight" (formula "38"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "21") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "27") (term "0,2,0,1,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "32") (term "2,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0,1,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "18") (term "1,0,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "20") (term "0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq1" (formula "20"))
                                                      (rule "polySimp_pullOutFactor1" (formula "20") (term "0"))
                                                      (rule "add_literals" (formula "20") (term "1,0"))
                                                      (rule "times_zero_1" (formula "20") (term "0"))
                                                      (rule "leq_literals" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "26") (term "0,2,0,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "19"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "32") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "21") (term "1,1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "33") (term "1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "17") (term "0,2,0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "5") (term "1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "35") (term "1,1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "25") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "12") (term "1,1") (ifseqformula "18"))
                                                      (rule "inEqSimp_subsumption0" (formula "5") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "5") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                                                      (rule "add_literals" (formula "5") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "5") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "5") (term "0,0"))
                                                      (rule "qeq_literals" (formula "5") (term "0"))
                                                      (builtin "One Step Simplification" (formula "5"))
                                                      (rule "true_left" (formula "5"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "31") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "31") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "31") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "31") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "31") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "31") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "31"))
                                                      (rule "true_left" (formula "31"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "32") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "32") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "32") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "32") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "32") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "32") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "32") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "25") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_17" (formula "25") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0100110000000000_27" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "25") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (ifseqformula "1"))
                                                      (rule "andLeft" (formula "25"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0"))
                                                      (rule "leq_literals" (formula "25"))
                                                      (rule "closeFalse" (formula "25"))
                                                   )
                                                )
                                                (branch "to >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "39")))
                                                   (rule "replace_known_right" (formula "27") (term "0,1,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "39")))
                                                   (rule "replace_known_right" (formula "35") (term "0,1,0") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "39")))
                                                   (rule "inEqSimp_geqRight" (formula "39"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "19") (term "2,1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "24") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "35") (term "0,2,2,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "39") (term "1,1,1,0,0") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "39") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "35") (term "0,2,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_commuteGeq" (formula "21"))
                                                   (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "13"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0"))
                                                   (rule "applyEq" (formula "7") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "0,0"))
                                                   (rule "applyEq" (formula "20") (term "1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "5") (term "1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "33") (term "2,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                                   (rule "qeq_literals" (formula "14"))
                                                   (rule "true_left" (formula "14"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "20") (ifseqformula "37"))
                                                   (rule "qeq_literals" (formula "20") (term "0"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "closeFalse" (formula "20"))
                                                )
                                             )
                                             (branch "x_0 <= -1 + result FALSE"
                                                (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                (rule "hideAuxiliaryEq" (formula "1"))
                                                (rule "inEqSimp_leqRight" (formula "39"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                (rule "ifthenelse_split" (formula "19") (term "1,1"))
                                                (branch "to >= 0 TRUE"
                                                   (rule "replace_known_left" (formula "29") (term "0,1,1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "19")))
                                                   (rule "replace_known_left" (formula "37") (term "0,1,1") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "19")))
                                                   (rule "replace_known_left" (formula "20") (term "0,1,0") (ifseqformula "19"))
                                                   (builtin "One Step Simplification" (formula "20"))
                                                   (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "19"))
                                                   (rule "leq_literals" (formula "13") (term "0"))
                                                   (builtin "One Step Simplification" (formula "13"))
                                                   (rule "true_left" (formula "13"))
                                                   (rule "ifthenelse_split" (formula "35") (term "0"))
                                                   (branch "to >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0"))
                                                      (rule "qeq_literals" (formula "21") (term "0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "allLeft" (formula "14") (inst "t=to"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "allLeft" (formula "15") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "25") (inst "t=to"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "25") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_15"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "18"))
                                                      (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "44")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1,0,0"))
                                                      (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "7"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                                                      (rule "hideAuxiliaryEq" (formula "25"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25"))
                                                      (rule "polySimp_addComm1" (formula "25") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                                      (rule "mul_literals" (formula "25") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                                      (rule "allLeft" (formula "26") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet0110000000000_20" (formula "26") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_21" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "x_0 >= 1 + result TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_commuteGeq" (formula "3"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "allLeft" (formula "41") (inst "t=x_0"))
                                                         (rule "replaceKnownSelect_taclet0110000000000_16" (formula "41") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0001100110000000000_31" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "41") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "41") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "41") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "41") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "41") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "41") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "41") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "inEqSimp_contradInEq0" (formula "41") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "allLeft" (formula "42") (inst "t=to"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,1,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "42") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_contradInEq1" (formula "42") (term "0") (ifseqformula "37"))
                                                         (rule "inEqSimp_homoInEq1" (formula "42") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "42") (term "0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "42") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "pullOutSelect" (formula "42") (term "0") (inst "selectSK=arr_16"))
                                                         (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "35"))
                                                         (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "46")))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "28"))
                                                         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,0,1,0,0") (ifseqformula "17"))
                                                         (rule "replace_known_left" (formula "42") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_commuteLeq" (formula "42") (term "0,0,0"))
                                                         (rule "replace_known_left" (formula "42") (term "0,0,0") (ifseqformula "37"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "inEqSimp_homoInEq1" (formula "43"))
                                                         (rule "polySimp_addComm1" (formula "43") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1" (formula "42") (term "0,0,0"))
                                                         (rule "add_literals" (formula "42") (term "1,0,0,0"))
                                                         (rule "times_zero_1" (formula "42") (term "0,0,0"))
                                                         (rule "qeq_literals" (formula "42") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "applyEqReverse" (formula "43") (term "0,1,0,0") (ifseqformula "42"))
                                                         (rule "hideAuxiliaryEq" (formula "42"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "42"))
                                                         (rule "polySimp_mulComm0" (formula "42") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "42") (term "1"))
                                                         (rule "mul_literals" (formula "42") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "42") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "42") (term "1,1"))
                                                         (rule "allLeft" (formula "23") (inst "t=to"))
                                                         (rule "replaceKnownSelect_taclet001100110000000000_29" (formula "23") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet001100110000000000_30" (formula "23") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                         (rule "leq_literals" (formula "23") (term "1,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "38"))
                                                         (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "23") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "allLeft" (formula "24") (inst "t=x_0"))
                                                         (rule "replaceKnownSelect_taclet0110000000000_20" (formula "24") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0110000000000_21" (formula "24") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "4"))
                                                         (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                                         (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "24") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "24"))
                                                         (rule "allLeft" (formula "28") (inst "t=result"))
                                                         (rule "replaceKnownSelect_taclet000_0" (formula "28") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "28") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,1,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,1,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "21"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                         (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_contradInEq1" (formula "28") (term "0") (ifseqformula "40"))
                                                         (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                         (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "28") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "28"))
                                                         (rule "inEqSimp_exactShadow3" (formula "28") (ifseqformula "44"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "0,0"))
                                                         (rule "mul_literals" (formula "28") (term "0,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "28") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "28") (term "0,0"))
                                                         (rule "add_literals" (formula "28") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "28"))
                                                         (rule "polySimp_mulComm0" (formula "28") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "28") (term "1"))
                                                         (rule "mul_literals" (formula "28") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "28") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "28") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "28"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_zero_right" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch "x_0 >= 1 + result FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_geqRight" (formula "42"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_commuteGeq" (formula "3"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "26"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                   (branch "to >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "22") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "40") (term "1,1,1,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "30") (term "0,2,0,1,1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "8") (term "0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "35") (term "2,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "20") (term "1,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "20") (term "0,2,0,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "30") (term "1,0,1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "23") (term "0") (ifseqformula "22"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23"))
                                                      (rule "polySimp_pullOutFactor1" (formula "23") (term "0"))
                                                      (rule "add_literals" (formula "23") (term "1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "0"))
                                                      (rule "leq_literals" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "20") (term "0,2,0,1,1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "29") (term "0,2,0,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "36") (term "0,2,0,1,1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "6") (term "1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "36") (term "0,2,0,1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "36") (term "1,0,1") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "19") (term "0") (ifseqformula "22"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "35") (term "1,0,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "19") (term "1,0,1") (ifseqformula "21"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "20"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_commuteGeq" (formula "2"))
                                                      (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq0" (formula "18") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0"))
                                                      (rule "qeq_literals" (formula "18") (term "0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_antiSymm" (formula "1") (ifseqformula "4"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "2") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "true_left" (formula "2"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "4"))
                                                      (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                                                      (rule "add_literals" (formula "4") (term "1,0"))
                                                      (rule "times_zero_1" (formula "4") (term "0"))
                                                      (rule "qeq_literals" (formula "4"))
                                                      (rule "true_left" (formula "4"))
                                                      (rule "applyEq" (formula "2") (term "0,2,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,0"))
                                                      (rule "qeq_literals" (formula "3") (term "0"))
                                                      (builtin "One Step Simplification" (formula "3"))
                                                      (rule "true_left" (formula "3"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "33") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "33") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "33") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "33") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "33") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "18") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "true_left" (formula "18"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "30") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "30") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "true_left" (formula "30"))
                                                      (rule "allLeft" (formula "18") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "18") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "18") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq0" (formula "18") (term "1") (ifseqformula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "18") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "4"))
                                                      (rule "andLeft" (formula "18"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0"))
                                                      (rule "leq_literals" (formula "18"))
                                                      (rule "closeFalse" (formula "18"))
                                                   )
                                                )
                                                (branch "to >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "19") (ifInst ""  (formula "40")))
                                                   (rule "replace_known_right" (formula "28") (term "0,1,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "28") (ifInst ""  (formula "40")))
                                                   (rule "replace_known_right" (formula "36") (term "0,1,0") (ifseqformula "40"))
                                                   (builtin "One Step Simplification" (formula "36") (ifInst ""  (formula "40")))
                                                   (rule "inEqSimp_geqRight" (formula "40"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "6") (term "1") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "21") (term "1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "37") (term "0,2,2,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "26") (term "1,1,1,0,0") (ifseqformula "14"))
                                                   (rule "add_literals" (formula "26") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "41") (term "1,1,1,0,0") (ifseqformula "14"))
                                                   (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "25") (term "1,1,1,0,0") (ifseqformula "14"))
                                                   (rule "add_literals" (formula "25") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                                   (rule "qeq_literals" (formula "15"))
                                                   (rule "true_left" (formula "15"))
                                                   (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "14"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "8") (term "0") (ifseqformula "14"))
                                                   (rule "inEqSimp_homoInEq1" (formula "8"))
                                                   (rule "mul_literals" (formula "8") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "8") (term "0"))
                                                   (rule "add_literals" (formula "8") (term "0,0"))
                                                   (rule "applyEq" (formula "18") (term "2,1,0") (ifseqformula "14"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "35") (term "0,0,0") (ifseqformula "13"))
                                                   (rule "inEqSimp_homoInEq1" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "35") (term "0,0,0"))
                                                   (rule "add_literals" (formula "35") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "35") (term "0,2,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "37") (term "1,1,0,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "28") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "33") (term "2,1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "12") (term "1,0") (ifseqformula "13"))
                                                   (rule "polySimp_addComm1" (formula "12") (term "0"))
                                                   (rule "add_literals" (formula "12") (term "0,0"))
                                                   (rule "add_zero_left" (formula "12") (term "0"))
                                                   (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                                                   (rule "inEqSimp_commuteGeq" (formula "21"))
                                                   (rule "applyEq" (formula "36") (term "1,0") (ifseqformula "13"))
                                                   (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "13"))
                                                   (rule "add_literals" (formula "14") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "7"))
                                                   (rule "mul_literals" (formula "7") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0"))
                                                   (rule "mul_literals" (formula "35") (term "1,0,0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "38") (ifseqformula "21"))
                                                   (rule "qeq_literals" (formula "38") (term "0"))
                                                   (builtin "One Step Simplification" (formula "38"))
                                                   (rule "closeFalse" (formula "38"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: result >= 0 FALSE"
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "true_left" (formula "39"))
                                          (rule "inEqSimp_geqRight" (formula "40"))
                                          (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "mul_literals" (formula "1") (term "1"))
                                          (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                          (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                          (rule "polySimp_elimOne" (formula "22") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "7"))
                                          (rule "qeq_literals" (formula "22") (term "0"))
                                          (builtin "One Step Simplification" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                    (branch
                                       (rule "andRight" (formula "45"))
                                       (branch
                                          (rule "impRight" (formula "45"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (builtin "One Step Simplification" (formula "46"))
                                          (rule "replaceKnownSelect_taclet0000000_6" (formula "46") (term "1,1,0"))
                                          (rule "allRight" (formula "46") (inst "sk=x_0"))
                                          (rule "impRight" (formula "46"))
                                          (rule "andLeft" (formula "1"))
                                          (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "replace_known_left" (formula "45") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "3"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_leqRight" (formula "48"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "34") (term "0"))
                                          (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "25") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "25") (term "0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "14") (term "0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "43") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "43") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "25") (term "0"))
                                          (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "13"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "43") (term "0"))
                                          (rule "times_zero_1" (formula "43") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "43") (term "0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "34") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "36") (term "0"))
                                          (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "4"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "43") (term "0,0"))
                                          (rule "add_literals" (formula "43") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "43") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "36") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "4") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "36") (term "0,0,0"))
                                          (rule "add_literals" (formula "36") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "26") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "45") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "45") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "45") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "45") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "45") (term "0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "45") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "45") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "45") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "26") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "applyEqReverse" (formula "44") (term "2,0") (ifseqformula "26"))
                                          (rule "applyEqReverse" (formula "27") (term "1,1,0") (ifseqformula "26"))
                                          (rule "hideAuxiliaryEq" (formula "26"))
                                          (rule "inEqSimp_homoInEq0" (formula "41") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                          (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "41") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "41"))
                                          (rule "applyEqReverse" (formula "42") (term "0,1,0,0,1,0,1") (ifseqformula "41"))
                                          (rule "hideAuxiliaryEq" (formula "41"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqReverse" (formula "33") (term "0,1,0,0,1,0,1") (ifseqformula "32"))
                                          (rule "hideAuxiliaryEq" (formula "32"))
                                          (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "24") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "applyEqReverse" (formula "32") (term "0,1,0,0,1,0,1") (ifseqformula "24"))
                                          (rule "applyEqReverse" (formula "25") (term "1,0,0,1,0,1") (ifseqformula "24"))
                                          (rule "hideAuxiliaryEq" (formula "24"))
                                          (rule "inEqSimp_homoInEq0" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "40") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "41") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "41") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "41") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "41") (term "0,1,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "32") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "32") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "32") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "applyEqReverse" (formula "33") (term "1,1,0,1") (ifseqformula "32"))
                                          (rule "applyEqReverse" (formula "39") (term "0,1,0,0,1,0,1") (ifseqformula "32"))
                                          (rule "hideAuxiliaryEq" (formula "32"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "40") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "40") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "40") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "40") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "40") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "40") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "40"))
                                          (rule "applyEqReverse" (formula "1") (term "0,1,0,0") (ifseqformula "40"))
                                          (rule "applyEqReverse" (formula "41") (term "1,1,0") (ifseqformula "40"))
                                          (rule "hideAuxiliaryEq" (formula "40"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0"))
                                          (rule "mul_literals" (formula "31") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0"))
                                          (rule "mul_literals" (formula "14") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0"))
                                          (rule "mul_literals" (formula "24") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                                          (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                                          (rule "polySimp_elimOne" (formula "13") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                                          (rule "polySimp_elimOne" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "30") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                          (rule "polySimp_elimOne" (formula "4") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "32") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "32") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "24") (term "0,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "38") (term "0,1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                          (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                          (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                          (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                          (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                          (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "13") (term "0,0"))
                                          (rule "qeq_literals" (formula "13") (term "0"))
                                          (builtin "One Step Simplification" (formula "13"))
                                          (rule "true_left" (formula "13"))
                                          (rule "inEqSimp_subsumption1" (formula "38") (term "0,0,0") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0,0"))
                                          (rule "qeq_literals" (formula "38") (term "0,0,0,0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "inEqSimp_contradInEq1" (formula "38") (term "0,0") (ifseqformula "20"))
                                          (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0"))
                                          (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "38") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "38") (term "0,0,0,0"))
                                          (rule "leq_literals" (formula "38") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "38"))
                                          (rule "applyEqReverse" (formula "1") (term "1,1") (ifseqformula "38"))
                                          (rule "applyEqReverse" (formula "39") (term "1,1,0") (ifseqformula "38"))
                                          (rule "hideAuxiliaryEq" (formula "38"))
                                          (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_8"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "34"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "41")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "27"))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,0,0") (ifseqformula "17"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0,1,0,0") (ifseqformula "10"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "4")))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                          (rule "inEqSimp_homoInEq1" (formula "2"))
                                          (rule "polySimp_addComm1" (formula "2") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                          (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                          (rule "polySimp_rightDist" (formula "2") (term "1"))
                                          (rule "mul_literals" (formula "2") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                          (rule "polySimp_elimOne" (formula "3") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                          (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "3") (term "0,0"))
                                          (rule "qeq_literals" (formula "3") (term "0"))
                                          (builtin "One Step Simplification" (formula "3"))
                                          (rule "true_left" (formula "3"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_9"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "28"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                                          (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "18"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "11"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0,0") (ifseqformula "4"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=arr_10"))
                                          (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "19"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "43")) (ifInst ""  (formula "12")))
                                          (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "6")))
                                          (rule "inEqSimp_commuteLeq" (formula "1") (term "0,0"))
                                          (rule "replace_known_left" (formula "1") (term "0,0") (ifseqformula "5"))
                                          (builtin "One Step Simplification" (formula "1"))
                                          (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                          (rule "hideAuxiliaryEq" (formula "1"))
                                          (rule "nnf_imp2or" (formula "23") (term "0"))
                                          (rule "nnf_imp2or" (formula "16") (term "0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "nnf_imp2or" (formula "33") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "24") (term "0"))
                                          (rule "nnf_imp2or" (formula "15") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "38") (term "0"))
                                          (rule "nnf_imp2or" (formula "31") (term "0"))
                                          (rule "nnf_imp2or" (formula "32") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "25") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "39") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "40") (term "0"))
                                          (rule "nnf_notAnd" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "16") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "16") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "16") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "16") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "24") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "24") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "24") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "24") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "38") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "38") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "31") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "31") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "31") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "40") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "40") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "40") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "40") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "40") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "40") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "40") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "40") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "40") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "40") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "40") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "33") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "15") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "15") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "15") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,1,0,0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "15") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "15") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "15") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "15") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "32") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "32") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "32") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "32") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "32") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "32") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "32") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "32") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "32") (term "1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "25") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "25") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "25") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "25") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "25") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "25") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "39") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "39") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "39") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "39") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "39") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "39") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "39") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "39") (term "1,1,1,0,0,1"))
                                          (rule "cut_direct" (formula "39") (term "0"))
                                          (branch "CUT: result >= 0 TRUE"
                                             (builtin "One Step Simplification" (formula "40"))
                                             (rule "commute_or" (formula "38") (term "0,0"))
                                             (rule "commute_or" (formula "31") (term "0,0"))
                                             (rule "cut_direct" (formula "25") (term "0"))
                                             (branch "CUT: from >= 1 TRUE"
                                                (builtin "One Step Simplification" (formula "26"))
                                                (rule "replace_known_left" (formula "15") (term "0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "replace_known_left" (formula "33") (term "0") (ifseqformula "25"))
                                                (builtin "One Step Simplification" (formula "33"))
                                                (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "25"))
                                                (rule "leq_literals" (formula "13") (term "0"))
                                                (builtin "One Step Simplification" (formula "13"))
                                                (rule "true_left" (formula "13"))
                                                (rule "cut_direct" (formula "33") (term "0"))
                                                (branch "CUT: array.length >= 1 + result TRUE"
                                                   (builtin "One Step Simplification" (formula "34"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "x_0 <= -1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                                      (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                      (rule "mul_literals" (formula "3") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                      (rule "inEqSimp_subsumption1" (formula "20") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq0" (formula "20") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0"))
                                                      (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "20") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "20") (term "0,0"))
                                                      (rule "qeq_literals" (formula "20") (term "0"))
                                                      (builtin "One Step Simplification" (formula "20"))
                                                      (rule "true_left" (formula "20"))
                                                      (rule "allLeft" (formula "25") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "25") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "21") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "15") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "26") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "26") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "27") (ifseqformula "22"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "0,0"))
                                                      (rule "mul_literals" (formula "27") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                      (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                      (rule "mul_literals" (formula "27") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                      (rule "allLeft" (formula "14") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                      (rule "allLeft" (formula "38") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_17" (formula "38") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001110000000000_20" (formula "38") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "38") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_contradInEq1" (formula "38") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "38") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "38") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "38") (term "0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "38") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "allLeft" (formula "41") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_17" (formula "41") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001110000000000_20" (formula "41") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "41") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "41") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "inEqSimp_contradInEq1" (formula "41") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "41") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "41") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "41") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "41") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "41") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "41") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0,0"))
                                                      (rule "add_literals" (formula "41") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "41") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "41") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "41") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "41"))
                                                      (rule "allLeft" (formula "37") (inst "t=from"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_homoInEq1" (formula "37") (term "0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0"))
                                                      (rule "pullOutSelect" (formula "37") (term "0,1") (inst "selectSK=arr_11"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "54")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "37") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "37") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteGeq" (formula "38") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "37") (term "0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "37") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "37") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "37") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "37") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "37") (term "1,1,0,0"))
                                                      (rule "pullOutSelect" (formula "38") (term "0,1") (inst "selectSK=arr_12"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "38") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "38") (ifInst ""  (formula "55")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "38") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "38") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "38") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "38") (term "1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "38") (term "0,0,0,0"))
                                                      (rule "qeq_literals" (formula "38") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0"))
                                                      (rule "polySimp_addComm1" (formula "38") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "38") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "38") (term "1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "38") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "38") (term "0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "38") (term "1,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "38") (term "1,1,0,0"))
                                                      (rule "replace_known_left" (formula "38") (term "0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "38"))
                                                      (rule "applyEqReverse" (formula "39") (term "0,1") (ifseqformula "38"))
                                                      (rule "hideAuxiliaryEq" (formula "38"))
                                                      (rule "pullOutSelect" (formula "37") (term "2,0") (inst "selectSK=arr_13"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "37") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "37") (ifInst ""  (formula "55")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_commuteLeq" (formula "37") (term "1,0,0"))
                                                      (rule "replace_known_left" (formula "37") (term "1,0,0") (ifseqformula "7"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "inEqSimp_homoInEq0" (formula "37") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "37") (term "0,0,0"))
                                                      (rule "add_literals" (formula "37") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "37") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "37") (term "0,0,0"))
                                                      (rule "qeq_literals" (formula "37") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "37"))
                                                      (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "37"))
                                                      (rule "hideAuxiliaryEq" (formula "37"))
                                                      (rule "allLeft" (formula "39") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_17" (formula "39") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001110000000000_20" (formula "39") (term "1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "39") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "39") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "pullOutSelect" (formula "39") (term "0,1") (inst "selectSK=arr_14"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "56")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "39") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "39") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_commuteGeq" (formula "40") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "39") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "39") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "pullOutSelect" (formula "39") (term "2,0") (inst "selectSK=arr_15"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "39") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "39") (ifInst ""  (formula "57")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "39") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "39") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "39") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "39") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "39") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "39") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_subsumption1" (formula "39") (term "0,0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "39") (term "0,0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "mul_literals" (formula "39") (term "0,1,0,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "39") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "39") (term "1,1,0,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "39") (term "1,0,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "39") (term "0,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "39") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "39"))
                                                      (rule "allLeft" (formula "42") (inst "t=int::select(heap, array, arr(add(Z(1(#)), to)))"))
                                                      (rule "pullOutSelect" (formula "42") (term "0,1") (inst "selectSK=arr_16"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "59")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "42") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "42") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_commuteGeq" (formula "43") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "42") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "42") (term "2,0") (inst "selectSK=arr_17"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "42") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "42") (ifInst ""  (formula "60")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "42") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "42"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "42") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "42") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "42") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "42") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "42") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "42") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "42") (term "0,1,0,0"))
                                                      (rule "pullOutSelect" (formula "44") (term "0,1") (inst "selectSK=arr_18"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "61")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "44") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "44") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "pullOutSelect" (formula "44") (term "2,0") (inst "selectSK=arr_19"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "44") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "44") (ifInst ""  (formula "62")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "44") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "44"))
                                                      (rule "inEqSimp_commuteLeq" (formula "44") (term "0,0,0"))
                                                      (rule "commute_or_2" (formula "46"))
                                                      (rule "allLeft" (formula "57") (inst "t=mul(from, Z(neglit(1(#))))"))
                                                      (rule "inEqSimp_commuteGeq" (formula "57") (term "1,0"))
                                                      (rule "inEqSimp_commuteLeq" (formula "57") (term "0,0"))
                                                      (rule "pullOutSelect" (formula "57") (term "0,1") (inst "selectSK=arr_20"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "64")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0,0") (ifseqformula "34"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "57") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "57") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "inEqSimp_commuteGeq" (formula "58") (term "1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "57") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "57") (term "2,0") (inst "selectSK=arr_21"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "57") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "57") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "57") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "57") (term "1,1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "57") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "57") (term "0,0,1,0,0"))
                                                      (rule "add_literals" (formula "57") (term "0,0,0,1,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "57") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "57") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "57") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "57") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "57") (term "0,0,0") (ifseqformula "26"))
                                                      (rule "greater_literals" (formula "57") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "mul_literals" (formula "57") (term "1,0,0,0,0"))
                                                      (rule "qeq_literals" (formula "57") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "57") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "57") (ifInst ""  (formula "65")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "57") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "inEqSimp_commuteLeq" (formula "57") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor0b" (formula "57") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "57") (term "1,1,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "57") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "57") (term "0,0,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "57") (term "0,0,0") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "57") (term "1,1,0,0,0,0"))
                                                      (rule "greater_literals" (formula "57") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "qeq_literals" (formula "57") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "57"))
                                                      (rule "applyEqReverse" (formula "58") (term "2,0") (ifseqformula "57"))
                                                      (rule "hideAuxiliaryEq" (formula "57"))
                                                      (rule "pullOutSelect" (formula "58") (term "0,1") (inst "selectSK=arr_22"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "65")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0,0") (ifseqformula "34"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "58") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "58") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_commuteLeq" (formula "58") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "58") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "0,0,0,0"))
                                                      (rule "pullOutSelect" (formula "58") (term "2,0") (inst "selectSK=arr_23"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "66")))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "58") (term "0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "58") (term "0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "58") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor3" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "1,0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "58") (term "1,0,1,0,0"))
                                                      (rule "polySimp_addComm1" (formula "58") (term "0,1,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "58") (term "1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "58") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "58") (term "1,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "58") (term "1,1,0,0"))
                                                      (rule "mul_literals" (formula "58") (term "0,1,1,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "58") (term "0,0,0") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                      (rule "greater_literals" (formula "58") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "qeq_literals" (formula "58") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "58") (ifseqformula "19"))
                                                      (builtin "One Step Simplification" (formula "58") (ifInst ""  (formula "66")) (ifInst ""  (formula "11")))
                                                      (rule "elementOfArrayRangeConcrete" (formula "58") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "inEqSimp_commuteLeq" (formula "58") (term "1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_pullOutFactor3" (formula "58") (term "0,0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "inEqSimp_invertInEq1" (formula "58") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "58") (term "0,0,0,0"))
                                                      (rule "times_zero_2" (formula "58") (term "1,0,0,0"))
                                                      (rule "inEqSimp_contradInEq5" (formula "58") (term "0,0,0") (ifseqformula "26"))
                                                      (rule "mul_literals" (formula "58") (term "1,1,0,0,0,0"))
                                                      (rule "greater_literals" (formula "58") (term "0,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "qeq_literals" (formula "58") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "58"))
                                                      (rule "applyEqReverse" (formula "59") (term "2,0") (ifseqformula "58"))
                                                      (rule "hideAuxiliaryEq" (formula "58"))
                                                      (rule "allLeft" (formula "60") (inst "t=int::select(heap, array, arr(add(Z(1(#)), to)))"))
                                                      (rule "pullOutSelect" (formula "60") (term "0,1") (inst "selectSK=arr_24"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "60") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "60") (ifInst ""  (formula "67")))
                                                      (rule "replaceKnownSelect_taclet000001110000000000_29" (formula "60") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,1,0,0") (ifseqformula "34"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "60") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "60") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "60") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "60"))
                                                      (rule "inEqSimp_commuteGeq" (formula "61") (term "1"))
                                                      (rule "inEqSimp_homoInEq0" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,1,0,0"))
                                                      (rule "polySimp_rightDist" (formula "60") (term "1,0,1,0,0"))
                                                      (rule "mul_literals" (formula "60") (term "0,1,0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "60") (term "0,1,0,0"))
                                                      (rule "polySimp_addComm0" (formula "60") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "60") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "60") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "60") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "60") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "60") (term "0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "60") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "60") (term "0,0,0,0,0,0"))
                                                      (rule "add_zero_left" (formula "60") (term "0,0,0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "60") (term "1,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "0,1,0,0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "60") (term "0,0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "60") (term "1,0,0,0"))
                                                      (rule "polySimp_elimOne" (formula "60") (term "1,0,0,0"))
                                                      (rule "pullOutSelect" (formula "61") (term "0,1") (inst "selectSK=arr_25"))
                                                      (rule "simplifySelectOfAnonEQ" (formula "61") (ifseqformula "54"))
                                                      (builtin "One Step Simplification" (formula "61") (ifInst ""  (formula "68")))
                                                      (rule "replaceKnownSelect_taclet000001110000000000_31" (formula "61") (term "2,0"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,1,0,0") (ifseqformula "34"))
                                                      (rule "selectCreatedOfAnonAsFormulaEQ" (formula "61") (term "0,0,1,0,0") (ifseqformula "19"))
                                                      (rule "replace_known_left" (formula "61") (term "0,0,0,1,0,0") (ifseqformula "11"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "elementOfArrayRangeConcrete" (formula "61") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "61"))
                                                      (rule "inEqSimp_commuteLeq" (formula "61") (term "0,0,0"))
                                                      (rule "allLeft" (formula "47") (inst "t=mul(from, Z(neglit(1(#))))"))
                                                      (rule "replaceKnownSelect_taclet000001110000000000_34" (formula "47") (term "0,1"))
                                                      (rule "replaceKnownSelect_taclet000001110000000000_38" (formula "47") (term "1,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001110000000000_36" (formula "47") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000001110000000000_40" (formula "47") (term "1,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "47") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,1,0"))
                                                      (rule "polySimp_elimOne" (formula "47") (term "1,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "47") (term "0,1,0"))
                                                      (rule "inEqSimp_homoInEq0" (formula "47") (term "0,0"))
                                                      (rule "polySimp_mulLiterals" (formula "47") (term "1,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "47") (term "0,0,0"))
                                                      (rule "add_literals" (formula "47") (term "1,1,0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "47") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "47") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "47") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "47") (term "0,1,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "47") (term "0,0"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0"))
                                                      (rule "inEqSimp_subsumption6" (formula "47") (term "0,0") (ifseqformula "26"))
                                                      (rule "greater_literals" (formula "47") (term "0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "mul_literals" (formula "47") (term "1,0,0,0"))
                                                      (rule "leq_literals" (formula "47") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "47"))
                                                      (rule "true_left" (formula "47"))
                                                      (rule "allLeft" (formula "15") (inst "t=result"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "15") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "15") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "15") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "15") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0") (ifseqformula "23"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "15") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "15") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "25") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "25") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "25") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_homoInEq0" (formula "25") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1"))
                                                      (rule "add_literals" (formula "25") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "25") (term "0,1"))
                                                      (rule "qeq_literals" (formula "25") (term "1"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "true_left" (formula "25"))
                                                      (rule "allLeft" (formula "18") (inst "t=result"))
                                                      (rule "inEqSimp_commuteLeq" (formula "18") (term "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "1,0") (ifseqformula "24"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "18") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "inEqSimp_contradInEq1" (formula "18") (term "0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "18") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "18") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "18") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "18") (term "0,0,0"))
                                                      (rule "add_literals" (formula "18") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "18") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "18") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "18") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "18"))
                                                      (rule "allLeft" (formula "32") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "32") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "32") (term "0,1"))
                                                      (rule "replace_known_left" (formula "32") (term "1") (ifseqformula "30"))
                                                      (builtin "One Step Simplification" (formula "32"))
                                                      (rule "true_left" (formula "32"))
                                                      (rule "allLeft" (formula "34") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "34") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "34") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0,0") (ifseqformula "3"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "34") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "34") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_contradInEq1" (formula "34") (term "0") (ifseqformula "24"))
                                                      (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "34") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "34") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "34") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "inEqSimp_exactShadow3" (formula "54") (ifseqformula "34"))
                                                      (rule "polySimp_mulComm0" (formula "54") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "54") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "54"))
                                                      (rule "polySimp_mulLiterals" (formula "54") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "54") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "54"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "x_0 <= -1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_leqRight" (formula "42"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "25") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "25") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "25") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "25") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "25") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "25") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "inEqSimp_contradInEq0" (formula "25") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                                      (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "25") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "25"))
                                                      (rule "allLeft" (formula "14") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "14") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                                      (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "14") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "14"))
                                                      (rule "allLeft" (formula "28") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "28") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "28") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "28") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "28") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_contradInEq0" (formula "28") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "28") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0"))
                                                      (rule "add_literals" (formula "28") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "28") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "28") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "28") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "28"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "28"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "26"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1"))
                                                      (rule "mul_literals" (formula "26") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "26") (ifseqformula "3"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "0,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                                                      (rule "add_literals" (formula "26") (term "0,0,0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "26"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "0"))
                                                      (rule "allLeft" (formula "16") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "16") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "16") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_contradInEq0" (formula "16") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                                                      (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "16") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "16") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "16"))
                                                      (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "16"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                                      (rule "mul_literals" (formula "14") (term "0,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "14"))
                                                      (rule "polySimp_mulComm0" (formula "14") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "14") (term "1"))
                                                      (rule "mul_literals" (formula "14") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "14") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "14") (term "1,1"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "x_0 >= 1 + result TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                         (rule "applyEqReverse" (formula "28") (term "1,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "23") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "23") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0"))
                                                         (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "23") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "23") (term "0,0"))
                                                         (rule "qeq_literals" (formula "23") (term "0"))
                                                         (builtin "One Step Simplification" (formula "23"))
                                                         (rule "true_left" (formula "23"))
                                                         (rule "allLeft" (formula "46") (inst "t=x_0"))
                                                         (rule "replaceKnownSelect_taclet01110000000000_16" (formula "46") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100001110000000000_21" (formula "46") (term "0,1"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "46") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "46") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "46") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "46") (term "1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "46") (term "1,1,1"))
                                                         (rule "mul_literals" (formula "46") (term "0,1,1"))
                                                         (rule "polySimp_elimOne" (formula "46") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "46") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "46") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "46") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "46") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "46") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "inEqSimp_contradInEq1" (formula "46") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "46") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "46") (term "0,0,0"))
                                                         (rule "add_literals" (formula "46") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "46") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "46") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "46") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "46"))
                                                         (rule "allLeft" (formula "48") (inst "t=x_0"))
                                                         (rule "replaceKnownSelect_taclet01110000000000_16" (formula "48") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0100001110000000000_21" (formula "48") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "48") (term "0,0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,0,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,0,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq0" (formula "48") (term "0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "48") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "48") (term "0,0,0"))
                                                         (rule "add_literals" (formula "48") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "48") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "48") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "48") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "48"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "48"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "x_0 >= 1 + result FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "applyEqReverse" (formula "27") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_geqRight" (formula "48"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "27"))
                                                         (rule "polySimp_addComm1" (formula "27") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "27"))
                                                         (rule "polySimp_mulComm0" (formula "27") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "27") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "27") (term "1,1"))
                                                         (rule "mul_literals" (formula "27") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "27") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "29") (ifseqformula "27"))
                                                         (rule "inEqSimp_homoInEq0" (formula "29") (term "0"))
                                                         (rule "polySimp_mulComm0" (formula "29") (term "1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "29") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "29") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "29") (term "0,0"))
                                                         (rule "polySimp_addComm1" (formula "29") (term "0,0,0"))
                                                         (rule "add_literals" (formula "29") (term "0,0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0"))
                                                         (rule "add_literals" (formula "29") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "29") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "29") (term "0,0"))
                                                         (rule "qeq_literals" (formula "29") (term "0"))
                                                         (builtin "One Step Simplification" (formula "29"))
                                                         (rule "true_left" (formula "29"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "30"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: array.length >= 1 + result FALSE"
                                                   (builtin "One Step Simplification" (formula "33"))
                                                   (rule "true_left" (formula "33"))
                                                   (rule "inEqSimp_geqRight" (formula "41"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                                   (rule "times_zero_1" (formula "14") (term "0,0"))
                                                   (rule "add_zero_left" (formula "14") (term "0"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_contradInEq1" (formula "7") (ifseqformula "23"))
                                                   (rule "andLeft" (formula "7"))
                                                   (rule "inEqSimp_homoInEq1" (formula "7"))
                                                   (rule "polySimp_mulComm0" (formula "7") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "1,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "7") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "7") (term "0"))
                                                   (rule "add_literals" (formula "7") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "7") (term "1,0"))
                                                   (rule "add_zero_right" (formula "7") (term "0"))
                                                   (rule "leq_literals" (formula "7"))
                                                   (rule "closeFalse" (formula "7"))
                                                )
                                             )
                                             (branch "CUT: from >= 1 FALSE"
                                                (builtin "One Step Simplification" (formula "25"))
                                                (rule "true_left" (formula "25"))
                                                (rule "replace_known_right" (formula "31") (term "0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "31"))
                                                (rule "true_left" (formula "31"))
                                                (rule "replace_known_right" (formula "15") (term "0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "inEqSimp_geqRight" (formula "39"))
                                                (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                (rule "add_literals" (formula "1") (term "0,0"))
                                                (rule "add_zero_left" (formula "1") (term "0"))
                                                (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                                                (rule "applyEq" (formula "32") (term "1,1,0,0,0,1") (ifseqformula "14"))
                                                (rule "add_zero_right" (formula "32") (term "1,0,0,0,1"))
                                                (rule "applyEq" (formula "5") (term "1") (ifseqformula "14"))
                                                (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "14"))
                                                (rule "add_zero_right" (formula "8") (term "1"))
                                                (rule "applyEq" (formula "28") (term "1,1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "17") (term "1,1,0,0,0") (ifseqformula "14"))
                                                (rule "add_zero_right" (formula "17") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                                (rule "qeq_literals" (formula "15"))
                                                (rule "true_left" (formula "15"))
                                                (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "14"))
                                                (rule "add_zero_right" (formula "25") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "14"))
                                                (rule "applyEq" (formula "21") (term "1") (ifseqformula "14"))
                                                (rule "applyEq" (formula "22") (term "1,1,0,0,0") (ifseqformula "14"))
                                                (rule "add_zero_right" (formula "22") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                                (rule "leq_literals" (formula "1"))
                                                (rule "true_left" (formula "1"))
                                                (rule "applyEq" (formula "28") (term "1,1,0,0,0") (ifseqformula "13"))
                                                (rule "add_zero_right" (formula "28") (term "1,0,0,0"))
                                                (rule "applyEq" (formula "12") (term "0,1,0,0") (ifseqformula "13"))
                                                (rule "times_zero_2" (formula "12") (term "1,0,0"))
                                                (rule "add_zero_right" (formula "12") (term "0,0"))
                                                (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "5"))
                                                (rule "times_zero_1" (formula "4") (term "0,0"))
                                                (rule "add_zero_left" (formula "4") (term "0"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                                (rule "leq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "cut_direct" (formula "29") (term "0"))
                                                (branch "CUT: array.length >= 1 + result TRUE"
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "ifthenelse_split" (formula "1") (term "0"))
                                                   (branch "x_0 <= -1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (term "0,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0,0"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,0,0"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0,0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,0,0"))
                                                      (rule "leq_literals" (formula "2") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                      (rule "hideAuxiliaryEq" (formula "2"))
                                                      (rule "inEqSimp_homoInEq0" (formula "2"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                                      (rule "times_zero_1" (formula "3") (term "0,0"))
                                                      (rule "add_zero_left" (formula "3") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                      (rule "mul_literals" (formula "3") (term "1"))
                                                      (rule "inEqSimp_subsumption1" (formula "36") (ifseqformula "3"))
                                                      (rule "leq_literals" (formula "36") (term "0"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "true_left" (formula "36"))
                                                      (rule "allLeft" (formula "30") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_17" (formula "30") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet001001110000000000_20" (formula "30") (term "0,1"))
                                                      (rule "inEqSimp_commuteLeq" (formula "30") (term "1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "30") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "30") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "30") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "30") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "30") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "30") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "30") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "inEqSimp_contradInEq1" (formula "30") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "30") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "30"))
                                                      (rule "allLeft" (formula "21") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "21") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "21") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "21") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "21") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "21"))
                                                      (rule "allLeft" (formula "24") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "24") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "24") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "24") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "24") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "24") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "24") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "24") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "24") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "24"))
                                                      (rule "allLeft" (formula "15") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "allLeft" (formula "23") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "23") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                      (rule "leq_literals" (formula "23") (term "1,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_homoInEq0" (formula "23") (term "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1"))
                                                      (rule "add_literals" (formula "23") (term "1,0,1"))
                                                      (rule "times_zero_1" (formula "23") (term "0,1"))
                                                      (rule "qeq_literals" (formula "23") (term "1"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "true_left" (formula "23"))
                                                      (rule "allLeft" (formula "26") (inst "t=result"))
                                                      (rule "replaceKnownSelect_taclet000_0" (formula "26") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "26") (term "0,1"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                                      (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "21"))
                                                      (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                                      (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                                      (rule "polySimp_addComm0" (formula "26") (term "0,0,0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "26") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "3"))
                                                      (rule "qeq_literals" (formula "26") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "26"))
                                                      (rule "inEqSimp_exactShadow3" (formula "34") (ifseqformula "26"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "0,0"))
                                                      (rule "polySimp_addComm0" (formula "34") (term "0"))
                                                      (rule "inEqSimp_sepNegMonomial1" (formula "34"))
                                                      (rule "polySimp_mulLiterals" (formula "34") (term "0"))
                                                      (rule "polySimp_elimOne" (formula "34") (term "0"))
                                                      (rule "inEqSimp_contradInEq0" (formula "2") (ifseqformula "34"))
                                                      (rule "andLeft" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0"))
                                                      (rule "add_zero_right" (formula "2") (term "0"))
                                                      (rule "leq_literals" (formula "2"))
                                                      (rule "closeFalse" (formula "2"))
                                                   )
                                                   (branch "x_0 <= -1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                                                      (rule "hideAuxiliaryEq" (formula "1"))
                                                      (rule "inEqSimp_leqRight" (formula "38"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "allLeft" (formula "23") (inst "t=x_0"))
                                                      (rule "replaceKnownSelect_taclet01110000000000_18" (formula "23") (term "0,1"))
                                                      (rule "replaceKnownAuxiliaryConstant_taclet01110000000000_19" (formula "23") (term "0,1"))
                                                      (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                                      (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                                      (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                                      (rule "leq_literals" (formula "23") (term "0,1,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "23") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "23"))
                                                      (rule "allLeft" (formula "15") (inst "t=x_0"))
                                                      (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                                      (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                                      (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                                      (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                                      (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                                      (rule "leq_literals" (formula "15") (term "0,0"))
                                                      (builtin "One Step Simplification" (formula "15"))
                                                      (rule "ifthenelse_split" (formula "2") (term "0"))
                                                      (branch "x_0 >= 1 + result TRUE"
                                                         (rule "applyEqReverse" (formula "4") (term "1,1") (ifseqformula "3"))
                                                         (rule "hideAuxiliaryEq" (formula "3"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "1") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq0" (formula "1") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "1") (term "0,0"))
                                                         (rule "qeq_literals" (formula "1") (term "0"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "true_left" (formula "1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1"))
                                                         (rule "mul_literals" (formula "1") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                                         (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                                         (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                                         (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "21") (term "0,0"))
                                                         (rule "qeq_literals" (formula "21") (term "0"))
                                                         (builtin "One Step Simplification" (formula "21"))
                                                         (rule "true_left" (formula "21"))
                                                         (rule "allLeft" (formula "39") (inst "t=x_0"))
                                                         (rule "replaceKnownSelect_taclet01110000000000_16" (formula "39") (term "0,1"))
                                                         (rule "replaceKnownAuxiliaryConstant_taclet0101001110000000000_21" (formula "39") (term "0,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "39") (term "1,0") (ifseqformula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,1,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,1,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,1,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,1,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,1,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq1" (formula "39") (term "0") (ifseqformula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "39") (term "0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,0,0"))
                                                         (rule "add_literals" (formula "39") (term "1,1,0,0,0"))
                                                         (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                                         (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                                         (rule "leq_literals" (formula "39") (term "0,0"))
                                                         (builtin "One Step Simplification" (formula "39"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "39"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                      (branch "x_0 >= 1 + result FALSE"
                                                         (rule "applyEqReverse" (formula "3") (term "1,1") (ifseqformula "2"))
                                                         (rule "hideAuxiliaryEq" (formula "2"))
                                                         (rule "inEqSimp_geqRight" (formula "40"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_homoInEq0" (formula "3"))
                                                         (rule "polySimp_addComm1" (formula "3") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                                         (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "3") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                                         (rule "mul_literals" (formula "3") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                                         (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "24"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "inEqSimp_homoInEq1" (formula "3"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                                         (rule "add_literals" (formula "3") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "3") (term "1,0"))
                                                         (rule "add_zero_right" (formula "3") (term "0"))
                                                         (rule "leq_literals" (formula "3"))
                                                         (rule "closeFalse" (formula "3"))
                                                      )
                                                   )
                                                )
                                                (branch "CUT: array.length >= 1 + result FALSE"
                                                   (builtin "One Step Simplification" (formula "29"))
                                                   (rule "true_left" (formula "29"))
                                                   (rule "inEqSimp_geqRight" (formula "37"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                   (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                   (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "7") (term "0"))
                                                   (rule "inEqSimp_sepNegMonomial1" (formula "7"))
                                                   (rule "polySimp_mulLiterals" (formula "7") (term "0"))
                                                   (rule "polySimp_elimOne" (formula "7") (term "0"))
                                                   (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "7"))
                                                   (rule "andLeft" (formula "22"))
                                                   (rule "inEqSimp_homoInEq1" (formula "22"))
                                                   (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                   (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                   (rule "add_literals" (formula "22") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "22") (term "1,0"))
                                                   (rule "add_zero_right" (formula "22") (term "0"))
                                                   (rule "leq_literals" (formula "22"))
                                                   (rule "closeFalse" (formula "22"))
                                                )
                                             )
                                          )
                                          (branch "CUT: result >= 0 FALSE"
                                             (builtin "One Step Simplification" (formula "39"))
                                             (rule "true_left" (formula "39"))
                                             (rule "inEqSimp_geqRight" (formula "40"))
                                             (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                             (rule "add_zero_right" (formula "1") (term "0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "mul_literals" (formula "1") (term "1"))
                                             (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                             (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                             (rule "polySimp_addComm0" (formula "22") (term "0"))
                                             (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                             (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                             (rule "polySimp_elimOne" (formula "22") (term "0"))
                                             (rule "inEqSimp_contradInEq0" (formula "34") (term "0") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "true_left" (formula "34"))
                                             (rule "inEqSimp_contradInEq0" (formula "14") (ifseqformula "22"))
                                             (rule "qeq_literals" (formula "14") (term "0"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "closeFalse" (formula "14"))
                                          )
                                       )
                                       (branch
                                          (builtin "One Step Simplification" (formula "45"))
                                          (rule "inEqSimp_ltToLeq" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "1") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "42") (term "0"))
                                          (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                                          (rule "add_literals" (formula "42") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "21") (term "0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "21") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "39") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "30") (term "0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "30") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                                          (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                                          (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                                          (rule "add_literals" (formula "10") (term "0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                                          (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "9"))
                                          (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                                          (rule "polySimp_addComm1" (formula "9") (term "0"))
                                          (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
                                          (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                                          (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1"))
                                          (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1"))
                                          (rule "inEqSimp_gtToGeq" (formula "39") (term "0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                          (rule "add_literals" (formula "11") (term "0,0,0,0"))
                                          (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                                          (rule "add_literals" (formula "39") (term "0,0,0"))
                                          (rule "add_zero_left" (formula "39") (term "0,0"))
                                          (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                                          (rule "add_literals" (formula "32") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "22") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "20") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "20"))
                                          (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "20"))
                                          (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "20"))
                                          (rule "hideAuxiliaryEq" (formula "20"))
                                          (rule "inEqSimp_homoInEq0" (formula "30") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "30") (term "0,0,0"))
                                          (rule "add_literals" (formula "30") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "30") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "30") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "applyEqReverse" (formula "37") (term "2,0") (ifseqformula "30"))
                                          (rule "applyEqReverse" (formula "31") (term "1,1,0,1") (ifseqformula "30"))
                                          (rule "hideAuxiliaryEq" (formula "30"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "38") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "38") (term "0,1,0,0"))
                                          (rule "polySimp_addComm1" (formula "38") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "38") (term "0,0,0,1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "39") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "39") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "39") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "39") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "39") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "39"))
                                          (rule "applyEqReverse" (formula "40") (term "1,1,0,1") (ifseqformula "39"))
                                          (rule "hideAuxiliaryEq" (formula "39"))
                                          (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                                          (rule "qeq_literals" (formula "28") (term "0,0,0"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "applyEqReverse" (formula "29") (term "0,1,0,0,1,0,1") (ifseqformula "28"))
                                          (rule "hideAuxiliaryEq" (formula "28"))
                                          (rule "inEqSimp_homoInEq0" (formula "35") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,0"))
                                          (rule "qeq_literals" (formula "35") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqReverse" (formula "36") (term "0,1,0,0,1,0,1") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0"))
                                          (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
                                          (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
                                          (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                                          (rule "qeq_literals" (formula "21") (term "1,0,0"))
                                          (builtin "One Step Simplification" (formula "21"))
                                          (rule "applyEqReverse" (formula "22") (term "1,1,0,1") (ifseqformula "21"))
                                          (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "21"))
                                          (rule "hideAuxiliaryEq" (formula "21"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                          (rule "polySimp_elimOne" (formula "1") (term "0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0"))
                                          (rule "mul_literals" (formula "20") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                                          (rule "mul_literals" (formula "27") (term "1,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                                          (rule "mul_literals" (formula "10") (term "1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                                          (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                                          (rule "polySimp_elimOne" (formula "9") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                                          (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                                          (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,1"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "17"))
                                          (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                                          (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                                          (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                                          (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                                          (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                                          (builtin "One Step Simplification" (formula "35"))
                                          (rule "applyEqReverse" (formula "36") (term "1,1,0,1") (ifseqformula "35"))
                                          (rule "hideAuxiliaryEq" (formula "35"))
                                          (rule "nnf_imp2or" (formula "18") (term "0"))
                                          (rule "nnf_imp2or" (formula "11") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "28") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "21") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "19") (term "0"))
                                          (rule "nnf_imp2or" (formula "33") (term "0"))
                                          (rule "nnf_imp2or" (formula "26") (term "0"))
                                          (rule "nnf_imp2or" (formula "10") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "20") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "27") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "34") (term "0,1"))
                                          (rule "nnf_imp2or" (formula "35") (term "0,1"))
                                          (rule "nnf_notAnd" (formula "18") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "19") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "33") (term "0,0"))
                                          (rule "inEqSimp_notGeq" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,1,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,1,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,1,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,1,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0"))
                                          (rule "inEqSimp_notLeq" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "33") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "33") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "33") (term "0,0,0,0,0,0"))
                                          (rule "add_zero_left" (formula "33") (term "0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "33") (term "0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "33") (term "1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "33") (term "1,0,0,0"))
                                          (rule "nnf_notAnd" (formula "26") (term "0,0"))
                                          (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                                          (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                                          (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                                          (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                                          (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                                          (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1"))
                                          (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                                          (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                                          (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                                          (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "34") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "34") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "34") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "34") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "34") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "34") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "34") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "34") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "34") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "34") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,0,1"))
                                          (rule "nnf_notAnd" (formula "35") (term "0,0,1"))
                                          (rule "inEqSimp_notGeq" (formula "35") (term "0,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0,1"))
                                          (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0,1"))
                                          (rule "add_literals" (formula "35") (term "0,0,0,0,0,0,1"))
                                          (rule "add_zero_left" (formula "35") (term "0,0,0,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "0,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0,1"))
                                          (rule "inEqSimp_notLeq" (formula "35") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "1,0,0,1"))
                                          (rule "polySimp_mulComm0" (formula "35") (term "1,1,0,0,1"))
                                          (rule "polySimp_rightDist" (formula "35") (term "1,1,0,0,1"))
                                          (rule "polySimp_mulLiterals" (formula "35") (term "1,1,1,0,0,1"))
                                          (rule "mul_literals" (formula "35") (term "0,1,1,0,0,1"))
                                          (rule "polySimp_elimOne" (formula "35") (term "1,1,1,0,0,1"))
                                          (rule "Class_invariant_axiom_for_Quicksort" (formula "38") (inst "sk=sk_4") (ifseqformula "4"))
                                          (branch "Use Axiom"
                                             (rule "closeTrue" (formula "38"))
                                          )
                                          (branch "Show Axiom Satisfiability"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "closeTrue" (formula "38"))
                                          )
                                       )
                                    )
                                 )
                              )
                           )
                           (branch
                              (builtin "One Step Simplification" (formula "45"))
                              (rule "closeTrue" (formula "45"))
                           )
                        )
                        (branch
                           (builtin "One Step Simplification" (formula "45"))
                           (rule "allRight" (formula "45") (inst "sk=f_0"))
                           (rule "allRight" (formula "45") (inst "sk=o_0"))
                           (rule "orRight" (formula "45"))
                           (rule "orRight" (formula "45"))
                           (rule "eqSymm" (formula "47"))
                           (rule "eqSymm" (formula "45") (term "0,0,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                           (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                           (rule "add_literals" (formula "32") (term "0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "39") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,0,1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "21") (term "0"))
                           (rule "mul_literals" (formula "21") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "42") (term "0"))
                           (rule "polySimp_rightDist" (formula "42") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "42") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "42") (term "0,0,0"))
                           (rule "add_literals" (formula "42") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "42") (term "0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "9"))
                           (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                           (rule "polySimp_addComm1" (formula "9") (term "0"))
                           (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1"))
                           (rule "inEqSimp_ltToLeq" (formula "37") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                           (rule "mul_literals" (formula "10") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "10") (term "0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                           (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
                           (rule "inEqSimp_gtToGeq" (formula "39") (term "0"))
                           (rule "mul_literals" (formula "39") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,0,0"))
                           (rule "inEqSimp_gtToGeq" (formula "30") (term "0"))
                           (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "30") (term "0,0,0"))
                           (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                           (rule "add_literals" (formula "23") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,0"))
                           (rule "add_literals" (formula "39") (term "0,0,0"))
                           (rule "add_zero_left" (formula "39") (term "0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                           (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "31") (term "0,0,0"))
                           (rule "qeq_literals" (formula "31") (term "0,0"))
                           (builtin "One Step Simplification" (formula "31"))
                           (rule "applyEqReverse" (formula "32") (term "1,1,0,1") (ifseqformula "31"))
                           (rule "applyEqReverse" (formula "38") (term "2,0") (ifseqformula "31"))
                           (rule "hideAuxiliaryEq" (formula "31"))
                           (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                           (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "20") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "20"))
                           (rule "applyEqReverse" (formula "29") (term "2,0") (ifseqformula "20"))
                           (rule "hideAuxiliaryEq" (formula "20"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "39") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "39") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "39") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "39") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "39") (term "0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "39") (term "0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "39") (term "0,1,0,0"))
                           (rule "add_literals" (formula "39") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "39") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "39") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "39") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "39"))
                           (rule "applyEqReverse" (formula "40") (term "1,1,0,1") (ifseqformula "39"))
                           (rule "hideAuxiliaryEq" (formula "39"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "28") (term "0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "38") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "38") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "38") (term "0,1,0,1,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "36") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "38") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "38") (term "0,0,0,0"))
                           (rule "inEqSimp_homoInEq0" (formula "28") (term "0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "1,1,0,0,0,0"))
                           (rule "times_zero_1" (formula "28") (term "1,0,0,0,0"))
                           (rule "add_zero_right" (formula "28") (term "0,0,0,0"))
                           (rule "qeq_literals" (formula "28") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "applyEqReverse" (formula "29") (term "0,1,0,0,1,0,1") (ifseqformula "28"))
                           (rule "hideAuxiliaryEq" (formula "28"))
                           (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,1,0,0"))
                           (rule "polySimp_addComm1" (formula "37") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "37") (term "0,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,0"))
                           (rule "qeq_literals" (formula "35") (term "0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "applyEqReverse" (formula "36") (term "0,1,0,0,1,0,1") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0"))
                           (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
                           (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
                           (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                           (rule "qeq_literals" (formula "21") (term "1,0,0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "applyEqReverse" (formula "22") (term "1,1,0,1") (ifseqformula "21"))
                           (rule "applyEqReverse" (formula "36") (term "2,0") (ifseqformula "21"))
                           (rule "hideAuxiliaryEq" (formula "21"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0"))
                           (rule "mul_literals" (formula "20") (term "1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "36") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "36") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                           (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                           (rule "polySimp_elimOne" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "33") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "33") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "33") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "33") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "33") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                           (rule "mul_literals" (formula "10") (term "1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                           (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                           (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                           (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                           (rule "mul_literals" (formula "27") (term "1,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                           (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1"))
                           (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1"))
                           (rule "mul_literals" (formula "27") (term "0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "0,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "34") (term "1,0,1"))
                           (rule "polySimp_mulComm0" (formula "34") (term "1,1,0,1"))
                           (rule "polySimp_rightDist" (formula "34") (term "1,1,0,1"))
                           (rule "mul_literals" (formula "34") (term "0,1,1,0,1"))
                           (rule "polySimp_mulLiterals" (formula "34") (term "1,1,1,0,1"))
                           (rule "polySimp_elimOne" (formula "34") (term "1,1,1,0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "35") (term "1,0,0") (ifseqformula "17"))
                           (rule "inEqSimp_homoInEq1" (formula "35") (term "0,1,0,0"))
                           (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "polySimp_addComm0" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "1,1,0,0,1,0,0"))
                           (rule "times_zero_1" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "add_zero_right" (formula "35") (term "0,0,1,0,0"))
                           (rule "leq_literals" (formula "35") (term "0,1,0,0"))
                           (builtin "One Step Simplification" (formula "35"))
                           (rule "applyEqReverse" (formula "36") (term "1,1,0,1") (ifseqformula "35"))
                           (rule "hideAuxiliaryEq" (formula "35"))
                           (rule "pullOutSelect" (formula "40") (term "0") (inst "selectSK=f_0_0"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "31"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "24"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,0,1,1,0,0") (ifseqformula "14"))
                           (rule "eqSymm" (formula "41"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_1"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,1,0,0") (ifseqformula "15"))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0,0,0") (inst "iv=iv"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0,0"))
                           (rule "pullOutSelect" (formula "1") (term "2,0") (inst "selectSK=f_0_2"))
                           (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "16"))
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "42")))
                           (rule "elementOfArrayRange" (formula "1") (term "0,0,0") (inst "iv=iv"))
                           (rule "eqSymm" (formula "1") (term "0,0,0,1,0,0,0"))
                           (rule "inEqSimp_commuteLeq" (formula "1") (term "1,0,0,1,0,0,0"))
                           (rule "replace_known_right" (formula "1") (term "0,0,0") (ifseqformula "41"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "applyEqReverse" (formula "2") (term "2,0") (ifseqformula "1"))
                           (rule "hideAuxiliaryEq" (formula "1"))
                           (rule "nnf_imp2or" (formula "20") (term "0"))
                           (rule "nnf_imp2or" (formula "13") (term "0,1"))
                           (rule "nnf_imp2or" (formula "30") (term "0,1"))
                           (rule "nnf_imp2or" (formula "23") (term "0,1"))
                           (rule "nnf_imp2or" (formula "35") (term "0"))
                           (rule "nnf_imp2or" (formula "21") (term "0"))
                           (rule "nnf_imp2or" (formula "12") (term "0,1"))
                           (rule "nnf_imp2or" (formula "28") (term "0"))
                           (rule "nnf_imp2or" (formula "22") (term "0,1"))
                           (rule "nnf_imp2or" (formula "29") (term "0,1"))
                           (rule "nnf_imp2or" (formula "36") (term "0,1"))
                           (rule "nnf_imp2or" (formula "37") (term "0,1"))
                           (rule "nnf_notAnd" (formula "20") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "35") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "35") (term "1,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,1,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,1,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "35") (term "1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "35") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "35") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "35") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "35") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "35") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "35") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "21") (term "0,0"))
                           (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "21") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "21") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "21") (term "0,0,0,0,0,0"))
                           (rule "add_zero_left" (formula "21") (term "0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "21") (term "1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "21") (term "1,0,0,0"))
                           (rule "nnf_notAnd" (formula "28") (term "0,0"))
                           (rule "inEqSimp_notGeq" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "1,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,1,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,1,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,1,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,1,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,1,0,0"))
                           (rule "inEqSimp_notLeq" (formula "28") (term "0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                           (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "0,0,0"))
                           (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "28") (term "0,1,0,0,0"))
                           (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0"))
                           (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0"))
                           (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "30") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "30") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "30") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "30") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "30") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "30") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "30") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "30") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "30") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "30") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "30") (term "1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "23") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "23") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "23") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "23") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "23") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "23") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "23") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "23") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "23") (term "1,1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "22") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "22") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "22") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "22") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "22") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "22") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "22") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "22") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "22") (term "1,1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "29") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "29") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "29") (term "0,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "29") (term "1,0,0,1,0,0,1"))
                           (rule "mul_literals" (formula "29") (term "0,1,0,0,1,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "29") (term "0,0,1,0,0,1"))
                           (rule "add_literals" (formula "29") (term "0,0,0,1,0,0,1"))
                           (rule "add_zero_left" (formula "29") (term "0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "29") (term "1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "29") (term "1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "29") (term "1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "36") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "36") (term "0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "36") (term "0,1,0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "36") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "36") (term "0,0,0,0,0,0,1"))
                           (rule "add_zero_left" (formula "36") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "36") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "36") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "36") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "36") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "36") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "36") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "36") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "36") (term "1,1,1,0,0,1"))
                           (rule "nnf_notAnd" (formula "37") (term "0,0,1"))
                           (rule "inEqSimp_notGeq" (formula "37") (term "0,0,0,1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,0,0,0,0,0,1"))
                           (rule "mul_literals" (formula "37") (term "0,1,0,0,0,0,0,1"))
                           (rule "polySimp_addAssoc" (formula "37") (term "0,0,0,0,0,1"))
                           (rule "add_literals" (formula "37") (term "0,0,0,0,0,0,1"))
                           (rule "add_zero_left" (formula "37") (term "0,0,0,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "37") (term "0,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,0,0,0,1"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,0,0,0,1"))
                           (rule "inEqSimp_notLeq" (formula "37") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,0,0,1,0,0,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "37") (term "1,0,0,1"))
                           (rule "polySimp_mulComm0" (formula "37") (term "1,1,0,0,1"))
                           (rule "polySimp_rightDist" (formula "37") (term "1,1,0,0,1"))
                           (rule "mul_literals" (formula "37") (term "0,1,1,0,0,1"))
                           (rule "polySimp_mulLiterals" (formula "37") (term "1,1,1,0,0,1"))
                           (rule "polySimp_elimOne" (formula "37") (term "1,1,1,0,0,1"))
                           (rule "cut_direct" (formula "41") (term "0,0"))
                           (branch "CUT: o_0 = null TRUE"
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "false_right" (formula "42"))
                              (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "3") (term "1,1,0") (ifseqformula "1"))
                              (rule "applyEq" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "3") (term "2,0") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "40") (term "0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "40") (term "0"))
                              (rule "replace_known_right" (formula "40") (term "0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "40"))
                              (rule "false_right" (formula "40"))
                              (rule "applyEqRigid" (formula "2") (term "0,0,0,0,0") (ifseqformula "1"))
                              (rule "eqSymm" (formula "2") (term "0,0,0,0"))
                              (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "39"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "2"))
                              (rule "hideAuxiliaryEq" (formula "2"))
                              (rule "applyEqRigid" (formula "39") (term "1,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "39"))
                              (rule "closeTrue" (formula "39"))
                           )
                           (branch "CUT: o_0 = null FALSE"
                              (builtin "One Step Simplification" (formula "42"))
                              (rule "notRight" (formula "42"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "42")))
                              (rule "replace_known_left" (formula "2") (term "0,0,1,1,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                              (rule "cut_direct" (formula "41") (term "0"))
                              (branch "CUT: o_0 = array TRUE"
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "replace_known_left" (formula "3") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "replace_known_left" (formula "4") (term "0,0,0,0") (ifseqformula "1"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "43") (term "1,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "2") (term "1,2,0") (ifseqformula "1"))
                                 (rule "applyEq" (formula "42") (term "0") (ifseqformula "1"))
                                 (rule "nnf_ex2all" (formula "41"))
                                 (rule "nnf_notAnd" (formula "1") (term "0"))
                                 (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0"))
                                 (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                 (rule "commute_or" (formula "37") (term "0,0"))
                                 (rule "commute_or" (formula "30") (term "0,0"))
                                 (rule "cut_direct" (formula "38") (term "0"))
                                 (branch "CUT: result >= 0 TRUE"
                                    (builtin "One Step Simplification" (formula "39"))
                                    (rule "cut_direct" (formula "32") (term "0"))
                                    (branch "CUT: array.length >= 1 + result TRUE"
                                       (builtin "One Step Simplification" (formula "33"))
                                       (rule "cut_direct" (formula "24") (term "0"))
                                       (branch "CUT: from >= 1 TRUE"
                                          (builtin "One Step Simplification" (formula "25"))
                                          (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "replace_known_left" (formula "32") (term "0") (ifseqformula "24"))
                                          (builtin "One Step Simplification" (formula "32"))
                                          (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "24"))
                                          (rule "leq_literals" (formula "11") (term "0"))
                                          (builtin "One Step Simplification" (formula "11"))
                                          (rule "true_left" (formula "11"))
                                          (rule "cut_direct" (formula "41") (term "0"))
                                          (branch "CUT: array.length >= 2 + to TRUE"
                                             (builtin "One Step Simplification" (formula "42"))
                                             (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "25") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "25"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "41"))
                                             (rule "inEqSimp_homoInEq0" (formula "12") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "12") (term "1,0,0"))
                                             (rule "mul_literals" (formula "12") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "12") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "12") (term "0,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "12") (term "0,0"))
                                             (rule "add_literals" (formula "12") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "12") (term "1,0,0"))
                                             (rule "add_literals" (formula "12") (term "0,0"))
                                             (rule "qeq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= from & iv <= -1 + result) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "44"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEqRigid" (formula "44") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "44"))
                                                (rule "false_right" (formula "44"))
                                                (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "8") (ifseqformula "45"))
                                                (rule "eqSymm" (formula "46"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqRigid" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqRigid" (formula "6") (term "2,1,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "1,0") (ifseqformula "35") (ifseqformula "45"))
                                                (rule "applyEq" (formula "6") (term "2,2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "27") (ifseqformula "45"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "21") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                                (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                                (rule "polySimp_elimOne" (formula "21") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "5"))
                                                (rule "andLeft" (formula "21"))
                                                (rule "inEqSimp_homoInEq1" (formula "21"))
                                                (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                                (rule "mul_literals" (formula "21") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                                (rule "polySimp_addComm1" (formula "21") (term "0,0"))
                                                (rule "add_literals" (formula "21") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                                (rule "add_literals" (formula "21") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "21") (term "1,0"))
                                                (rule "add_literals" (formula "21") (term "0"))
                                                (rule "leq_literals" (formula "21"))
                                                (rule "closeFalse" (formula "21"))
                                             )
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= from & iv <= -1 + result) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "48") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "replace_known_right" (formula "44") (term "0,1") (ifseqformula "43"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEqRigid" (formula "44") (term "1,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "44"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEqRigid" (formula "47") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "47") (term "0") (ifseqformula "34") (ifseqformula "46"))
                                                   (rule "eqSymm" (formula "47"))
                                                   (rule "applyEq" (formula "43") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "43"))
                                                   (rule "false_right" (formula "43"))
                                                   (rule "applyEq" (formula "46") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "7") (ifseqformula "45"))
                                                   (rule "eqSymm" (formula "46"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "39") (ifseqformula "4"))
                                                   (rule "times_zero_1" (formula "39") (term "0,0"))
                                                   (rule "add_zero_left" (formula "39") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "39"))
                                                   (rule "mul_literals" (formula "39") (term "1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "4"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "19"))
                                                   (rule "polySimp_mulComm0" (formula "19") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "19") (term "1"))
                                                   (rule "mul_literals" (formula "19") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "19") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "19") (term "1,1"))
                                                   (rule "nnf_ex2all" (formula "45"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                   (rule "commute_or" (formula "2") (term "0,0"))
                                                   (rule "commute_or_2" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "20"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "2") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,0"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "2") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "2") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_literals" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> FALSE"
                                                   (rule "close" (formula "45") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: array.length >= 2 + to FALSE"
                                             (builtin "One Step Simplification" (formula "41"))
                                             (rule "true_left" (formula "41"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "41"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "replace_known_right" (formula "24") (term "0") (ifseqformula "40"))
                                             (builtin "One Step Simplification" (formula "24"))
                                             (rule "true_left" (formula "24"))
                                             (rule "inEqSimp_geqRight" (formula "39"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                                             (rule "applyEq" (formula "29") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "37") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "32") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "32"))
                                             (rule "polySimp_mulComm0" (formula "32") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "32") (term "1,0"))
                                             (rule "mul_literals" (formula "32") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "32") (term "0"))
                                             (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                                             (rule "add_literals" (formula "32") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "32") (term "0,0"))
                                             (rule "applyEq" (formula "29") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "37") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "14") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq1" (formula "14"))
                                             (rule "polySimp_pullOutFactor1" (formula "14") (term "0"))
                                             (rule "add_literals" (formula "14") (term "1,0"))
                                             (rule "times_zero_1" (formula "14") (term "0"))
                                             (rule "leq_literals" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "applyEq" (formula "12") (term "0") (ifseqformula "13"))
                                             (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "30"))
                                             (rule "polySimp_mulLiterals" (formula "30") (term "0"))
                                             (rule "polySimp_elimOne" (formula "30") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                                             (rule "mul_literals" (formula "11") (term "1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "27") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,0"))
                                             (rule "seqDef_induction_upper_concrete" (formula "34") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,0"))
                                             (rule "seqDef_induction_upper_concrete" (formula "27") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,1,1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "34") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,1,1"))
                                             (rule "seqDef_induction_upper_concrete" (formula "17") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,0"))
                                             (rule "seqDef_induction_upper_concrete" (formula "17") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "17") (term "0,1,1"))
                                             (rule "pullOutSelect" (formula "27") (term "0,1,1,0") (inst "selectSK=arr_8"))
                                             (rule "applyEq" (formula "35") (term "0,1,1,1") (ifseqformula "27"))
                                             (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "25"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "40")))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "27") (term "0,1,0,0") (ifseqformula "15"))
                                             (rule "replace_known_left" (formula "27") (term "0,0,1,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "narrowSelectArrayType" (formula "27") (term "1,0") (ifseqformula "24") (ifseqformula "40"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_contradInEq1" (formula "27") (term "0,0") (ifseqformula "19"))
                                             (rule "inEqSimp_homoInEq1" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "27") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "27") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEq" (formula "17") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "applyEq" (formula "28") (term "0,1,1,1") (ifseqformula "27"))
                                             (rule "simplifySelectOfAnonEQ" (formula "27") (ifseqformula "15"))
                                             (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "40")) (ifInst ""  (formula "9")))
                                             (rule "elementOfArrayRangeConcrete" (formula "27") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "narrowSelectArrayType" (formula "27") (term "2,0") (ifseqformula "6") (ifseqformula "40"))
                                             (rule "narrowSelectArrayType" (formula "27") (term "1,0") (ifseqformula "14") (ifseqformula "40"))
                                             (rule "inEqSimp_commuteLeq" (formula "27") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "27") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "27") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "inEqSimp_subsumption1" (formula "27") (term "0,0") (ifseqformula "5"))
                                             (rule "inEqSimp_homoInEq0" (formula "27") (term "0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "27") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "27") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "27") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "27") (term "0,0,0,0"))
                                             (rule "qeq_literals" (formula "27") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "35") (term "0,1,1,1") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "28") (term "0,1,1,1") (ifseqformula "27"))
                                             (rule "applyEqReverse" (formula "17") (term "0,1,1,0") (ifseqformula "27"))
                                             (rule "hideAuxiliaryEq" (formula "27"))
                                             (rule "pullOutSelect" (formula "34") (term "0,1,1,0") (inst "selectSK=arr_9"))
                                             (rule "simplifySelectOfAnonEQ" (formula "34") (ifseqformula "32"))
                                             (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "40")))
                                             (rule "replaceKnownSelect_taclet100001100000000_20" (formula "34") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet100001100000000_22" (formula "34") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,1,0,0") (ifseqformula "25"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "34") (term "0,0,1,0,0") (ifseqformula "15"))
                                             (rule "replace_known_left" (formula "34") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "elementOfArrayRangeConcrete" (formula "34") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "narrowSelectArrayType" (formula "34") (term "1,0") (ifseqformula "31") (ifseqformula "40"))
                                             (rule "inEqSimp_commuteLeq" (formula "34") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "34") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "34") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "34") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "34") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "34") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "34"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= from & iv <= -1 + result) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "41"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEqRigid" (formula "6") (term "2,2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "26") (ifseqformula "43"))
                                                (rule "applyEq" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqRigid" (formula "44") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "44") (term "0") (ifseqformula "8") (ifseqformula "43"))
                                                (rule "eqSymm" (formula "44"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "41"))
                                                (rule "false_right" (formula "41"))
                                                (rule "applyEq" (formula "6") (term "2,1,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "1,0") (ifseqformula "33") (ifseqformula "42"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                                                (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "1") (term "0,0,0"))
                                                (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,0,0"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,0,0"))
                                                (rule "add_zero_right" (formula "1") (term "0,0,0"))
                                                (rule "leq_literals" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "7") (ifseqformula "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "0,0"))
                                                (rule "mul_literals" (formula "7") (term "0,0,0"))
                                                (rule "polySimp_addAssoc" (formula "7") (term "0"))
                                                (rule "polySimp_addComm1" (formula "7") (term "0,0"))
                                                (rule "add_literals" (formula "7") (term "0,0,0"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                                                (rule "polySimp_mulComm0" (formula "7") (term "1"))
                                                (rule "polySimp_rightDist" (formula "7") (term "1"))
                                                (rule "mul_literals" (formula "7") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "7") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "7") (term "1,1"))
                                                (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                                (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                                (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                                (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                                (rule "add_literals" (formula "4") (term "0,0"))
                                                (rule "qeq_literals" (formula "4") (term "0"))
                                                (builtin "One Step Simplification" (formula "4"))
                                                (rule "true_left" (formula "4"))
                                                (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                                (rule "mul_literals" (formula "13") (term "0,0"))
                                                (rule "polySimp_addAssoc" (formula "13") (term "0"))
                                                (rule "add_literals" (formula "13") (term "0,0"))
                                                (rule "add_zero_left" (formula "13") (term "0"))
                                                (rule "inEqSimp_exactShadow3" (formula "22") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "22") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "22"))
                                                (rule "polySimp_mulLiterals" (formula "22") (term "0"))
                                                (rule "polySimp_elimOne" (formula "22") (term "0"))
                                                (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "4"))
                                                (rule "andLeft" (formula "22"))
                                                (rule "inEqSimp_homoInEq1" (formula "22"))
                                                (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                                (rule "mul_literals" (formula "22") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                                (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                                (rule "add_literals" (formula "22") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                                (rule "add_literals" (formula "22") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "22") (term "1,0"))
                                                (rule "add_literals" (formula "22") (term "0"))
                                                (rule "leq_literals" (formula "22"))
                                                (rule "closeFalse" (formula "22"))
                                             )
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= from & iv <= -1 + result) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "16") (term "1,1"))
                                                (branch "to >= 0 TRUE"
                                                   (rule "replace_known_left" (formula "27") (term "0,1,1") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "27") (ifInst ""  (formula "16")))
                                                   (rule "replace_known_left" (formula "17") (term "0,1,0") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "17"))
                                                   (rule "replace_known_left" (formula "35") (term "0,1,1") (ifseqformula "16"))
                                                   (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "16")))
                                                   (rule "inEqSimp_subsumption1" (formula "10") (ifseqformula "16"))
                                                   (rule "leq_literals" (formula "10") (term "0"))
                                                   (builtin "One Step Simplification" (formula "10"))
                                                   (rule "true_left" (formula "10"))
                                                   (rule "allLeft" (formula "1") (inst "t=to"))
                                                   (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,1"))
                                                   (rule "leq_literals" (formula "1") (term "1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "1") (term "0,1"))
                                                   (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1"))
                                                   (rule "polySimp_addComm1" (formula "1") (term "0,0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,0,1"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,1"))
                                                   (rule "add_literals" (formula "1") (term "1,1,0,0,1"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0,1"))
                                                   (rule "leq_literals" (formula "1") (term "0,1"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "notLeft" (formula "1"))
                                                   (rule "allLeft" (formula "11") (inst "t=to"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,1,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "11") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "inEqSimp_contradInEq1" (formula "11") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "11") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "11") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "11") (term "0,0,0"))
                                                   (rule "add_literals" (formula "11") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "11") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "11") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "11") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "11"))
                                                   (rule "allLeft" (formula "23") (inst "t=to"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                                   (rule "leq_literals" (formula "23") (term "1,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                                   (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                                   (rule "leq_literals" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_10"))
                                                   (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "14"))
                                                   (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "44")) (ifInst ""  (formula "8")))
                                                   (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "24"))
                                                   (rule "polySimp_addComm1" (formula "24") (term "0"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                                   (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "24") (term "1"))
                                                   (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                                   (rule "mul_literals" (formula "24") (term "0,1"))
                                                   (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                                   (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "4"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                                   (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                                   (builtin "One Step Simplification" (formula "23"))
                                                   (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                                                   (rule "hideAuxiliaryEq" (formula "23"))
                                                   (rule "inEqSimp_homoInEq0" (formula "23"))
                                                   (rule "polySimp_addComm1" (formula "23") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                                   (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "23") (term "1"))
                                                   (rule "mul_literals" (formula "23") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                                   (rule "ifthenelse_split" (formula "35") (term "0"))
                                                   (branch "to >= 1 + result TRUE"
                                                      (rule "applyEqReverse" (formula "37") (term "0,1,0") (ifseqformula "36"))
                                                      (rule "hideAuxiliaryEq" (formula "36"))
                                                      (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "35"))
                                                      (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,0"))
                                                      (rule "qeq_literals" (formula "19") (term "0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "ifthenelse_split" (formula "3") (term "0"))
                                                      (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> TRUE"
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "notLeft" (formula "4"))
                                                         (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "andLeft" (formula "3"))
                                                         (rule "applyEqReverse" (formula "47") (term "1") (ifseqformula "6"))
                                                         (rule "hideAuxiliaryEq" (formula "6"))
                                                         (rule "eqSymm" (formula "3"))
                                                         (rule "eqSymm" (formula "46"))
                                                         (rule "replace_known_right" (formula "43") (term "0,1") (ifseqformula "41"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "inEqSimp_commuteLeq" (formula "5"))
                                                         (rule "inEqSimp_homoInEq1" (formula "4"))
                                                         (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                         (rule "applyEqRigid" (formula "46") (term "2,1") (ifseqformula "3"))
                                                         (rule "narrowSelectArrayType" (formula "46") (term "1") (ifseqformula "7") (ifseqformula "45"))
                                                         (rule "applyEqRigid" (formula "46") (term "2,0") (ifseqformula "3"))
                                                         (rule "narrowSelectArrayType" (formula "46") (term "0") (ifseqformula "33") (ifseqformula "45"))
                                                         (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "1"))
                                                         (rule "applyEqRigid" (formula "43") (term "1,0,0,0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "43"))
                                                         (rule "applyEq" (formula "42") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "42"))
                                                         (rule "eqSymm" (formula "42"))
                                                         (rule "applyEqRigid" (formula "41") (term "0") (ifseqformula "3"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                         (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                         (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                         (rule "mul_literals" (formula "4") (term "0,1"))
                                                         (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                         (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "41"))
                                                         (rule "inEqSimp_contradEq7" (formula "41") (ifseqformula "5"))
                                                         (rule "polySimp_mulComm0" (formula "41") (term "1,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "41") (term "0,0"))
                                                         (rule "add_literals" (formula "41") (term "1,1,0,0"))
                                                         (rule "times_zero_1" (formula "41") (term "1,0,0"))
                                                         (rule "add_zero_right" (formula "41") (term "0,0"))
                                                         (rule "leq_literals" (formula "41") (term "0"))
                                                         (builtin "One Step Simplification" (formula "41"))
                                                         (rule "false_right" (formula "41"))
                                                         (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "4"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                                         (rule "polySimp_addAssoc" (formula "20") (term "0"))
                                                         (rule "polySimp_addComm0" (formula "20") (term "0,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                                         (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                                         (rule "polySimp_rightDist" (formula "20") (term "1"))
                                                         (rule "mul_literals" (formula "20") (term "0,1"))
                                                         (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                                         (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                                         (rule "inEqSimp_exactShadow3" (formula "40") (ifseqformula "4"))
                                                         (rule "times_zero_1" (formula "40") (term "0,0"))
                                                         (rule "add_zero_left" (formula "40") (term "0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "40"))
                                                         (rule "mul_literals" (formula "40") (term "1"))
                                                         (rule "nnf_ex2all" (formula "43"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0"))
                                                         (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                         (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                         (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                         (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                         (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                         (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,1,0,0"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                         (rule "polySimp_mulComm0" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_rightDist" (formula "1") (term "1,1,0,0"))
                                                         (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "mul_literals" (formula "1") (term "0,1,1,0,0"))
                                                         (rule "polySimp_elimOne" (formula "1") (term "1,1,1,0,0"))
                                                         (rule "commute_or" (formula "2") (term "0,0"))
                                                         (rule "commute_or_2" (formula "2") (term "0"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                         (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                         (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                         (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "6"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                         (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                         (rule "leq_literals" (formula "2") (term "0,1"))
                                                         (builtin "One Step Simplification" (formula "2"))
                                                         (rule "inEqSimp_contradInEq1" (formula "2") (ifseqformula "21"))
                                                         (rule "andLeft" (formula "2"))
                                                         (rule "inEqSimp_homoInEq1" (formula "2"))
                                                         (rule "polySimp_mulComm0" (formula "2") (term "1,0"))
                                                         (rule "polySimp_rightDist" (formula "2") (term "1,0"))
                                                         (rule "mul_literals" (formula "2") (term "0,1,0"))
                                                         (rule "polySimp_addAssoc" (formula "2") (term "0"))
                                                         (rule "polySimp_addComm1" (formula "2") (term "0,0"))
                                                         (rule "add_literals" (formula "2") (term "0,0,0"))
                                                         (rule "polySimp_pullOutFactor1b" (formula "2") (term "0"))
                                                         (rule "add_literals" (formula "2") (term "1,1,0"))
                                                         (rule "times_zero_1" (formula "2") (term "1,0"))
                                                         (rule "add_literals" (formula "2") (term "0"))
                                                         (rule "leq_literals" (formula "2"))
                                                         (rule "closeFalse" (formula "2"))
                                                      )
                                                      (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> FALSE"
                                                         (rule "close" (formula "44") (ifseqformula "3"))
                                                      )
                                                   )
                                                   (branch "to >= 1 + result FALSE"
                                                      (rule "applyEqReverse" (formula "36") (term "0,1,0") (ifseqformula "35"))
                                                      (rule "hideAuxiliaryEq" (formula "35"))
                                                      (rule "inEqSimp_geqRight" (formula "39"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                      (rule "inEqSimp_antiSymm" (formula "20") (ifseqformula "1"))
                                                      (rule "applyEq" (formula "21") (term "0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq1" (formula "21"))
                                                      (rule "polySimp_pullOutFactor1" (formula "21") (term "0"))
                                                      (rule "add_literals" (formula "21") (term "1,0"))
                                                      (rule "times_zero_1" (formula "21") (term "0"))
                                                      (rule "leq_literals" (formula "21"))
                                                      (rule "true_left" (formula "21"))
                                                      (rule "applyEq" (formula "12") (term "0,2,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "18") (term "0,2,0,1,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "29") (term "1,0,1") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "20"))
                                                      (rule "applyEq" (formula "1") (term "0") (ifseqformula "20"))
                                                      (rule "inEqSimp_homoInEq0" (formula "1"))
                                                      (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                      (rule "add_literals" (formula "1") (term "1,0"))
                                                      (rule "times_zero_1" (formula "1") (term "0"))
                                                      (rule "qeq_literals" (formula "1"))
                                                      (rule "true_left" (formula "1"))
                                                      (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "14") (term "2,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "17") (term "0,2,0,1,1") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "28") (term "0,2,0,1,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "16") (term "0") (ifseqformula "19"))
                                                      (rule "applyEq" (formula "1") (term "1,1,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "34") (term "1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "16") (term "1,0,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "32") (term "2,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0,1,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "27") (term "0,2,0,1,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "4") (term "0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "34") (term "1,0,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "37") (term "1,1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "22") (term "0,2,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "35") (term "1,1,0,0") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "34") (term "0,2,0,1,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "38") (term "0,1") (ifseqformula "18"))
                                                      (rule "applyEq" (formula "10") (term "1,1") (ifseqformula "18"))
                                                      (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "4"))
                                                      (rule "inEqSimp_homoInEq0" (formula "17") (term "0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "17") (term "0,0"))
                                                      (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "17") (term "1,0,0"))
                                                      (rule "add_literals" (formula "17") (term "0,0"))
                                                      (rule "qeq_literals" (formula "17") (term "0"))
                                                      (builtin "One Step Simplification" (formula "17"))
                                                      (rule "true_left" (formula "17"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "19") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "19") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "19") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "19") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "19") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "19") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "19") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "19") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "19"))
                                                      (rule "true_left" (formula "19"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "35") (term "0,0"))
                                                      (rule "polySimp_addAssoc" (formula "35") (term "1,1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "0,1,1,0,0"))
                                                      (rule "add_zero_left" (formula "35") (term "1,1,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "35") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1" (formula "35") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "35") (term "1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "35") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "35") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "true_left" (formula "35"))
                                                      (rule "inEqSimp_or_tautInEq0" (formula "33") (term "0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "33") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "33") (term "0,1,0,0"))
                                                      (rule "add_literals" (formula "33") (term "1,1,0,1,0,0"))
                                                      (rule "times_zero_1" (formula "33") (term "1,0,1,0,0"))
                                                      (rule "add_zero_right" (formula "33") (term "0,1,0,0"))
                                                      (rule "leq_literals" (formula "33") (term "1,0,0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "true_left" (formula "33"))
                                                      (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_and_contradInEq1" (formula "3") (term "0,0,0,0"))
                                                      (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,0,0"))
                                                      (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,0,0"))
                                                      (rule "add_zero_right" (formula "3") (term "0,1,0,0,0,0"))
                                                      (rule "leq_literals" (formula "3") (term "1,0,0,0,0"))
                                                      (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "38")))
                                                      (rule "closeFalse" (formula "3"))
                                                   )
                                                )
                                                (branch "to >= 0 FALSE"
                                                   (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "38")))
                                                   (rule "replace_known_right" (formula "34") (term "0,1,1") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "34") (ifInst ""  (formula "38")))
                                                   (rule "replace_known_right" (formula "26") (term "0,1,1") (ifseqformula "38"))
                                                   (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "38")))
                                                   (rule "inEqSimp_geqRight" (formula "38"))
                                                   (rule "mul_literals" (formula "1") (term "1,0,0"))
                                                   (rule "add_zero_right" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "mul_literals" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "11") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "28") (term "1,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "36") (term "1,1") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "35") (term "0,2,2,0") (ifseqformula "11"))
                                                   (rule "applyEq" (formula "2") (term "1,1,1,0") (ifseqformula "11"))
                                                   (rule "add_literals" (formula "2") (term "1,1,0"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "11"))
                                                   (rule "leq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "38") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "add_literals" (formula "38") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "15") (term "2,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "19") (term "0") (ifseqformula "10"))
                                                   (rule "inEqSimp_commuteGeq" (formula "19"))
                                                   (rule "applyEq" (formula "36") (term "1,1,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "34") (term "0,2,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "13") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "34") (term "0,0,0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "34") (term "0,0"))
                                                   (rule "mul_literals" (formula "34") (term "1,0,0,0"))
                                                   (rule "polySimp_addComm1" (formula "34") (term "0,0,0"))
                                                   (rule "add_literals" (formula "34") (term "0,0,0,0"))
                                                   (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "10"))
                                                   (rule "polySimp_addComm1" (formula "9") (term "0"))
                                                   (rule "add_literals" (formula "9") (term "0,0"))
                                                   (rule "add_zero_left" (formula "9") (term "0"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "10"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1,0"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "add_literals" (formula "4") (term "0,0"))
                                                   (rule "applyEq" (formula "27") (term "1,1") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "32") (term "2,1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "add_literals" (formula "23") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                                                   (rule "qeq_literals" (formula "11"))
                                                   (rule "true_left" (formula "11"))
                                                   (rule "applyEq" (formula "34") (term "1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "20") (term "1,1,1,0,0") (ifseqformula "10"))
                                                   (rule "add_literals" (formula "20") (term "1,1,0,0"))
                                                   (rule "applyEq" (formula "16") (term "1,1") (ifseqformula "10"))
                                                   (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "10"))
                                                   (rule "add_literals" (formula "11") (term "1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "33") (term "0,0"))
                                                   (rule "mul_literals" (formula "33") (term "1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "mul_literals" (formula "4") (term "1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "18") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "18") (term "0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "closeFalse" (formula "18"))
                                                )
                                             )
                                          )
                                       )
                                       (branch "CUT: from >= 1 FALSE"
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "true_left" (formula "24"))
                                          (rule "replace_known_right" (formula "30") (term "0") (ifseqformula "41"))
                                          (builtin "One Step Simplification" (formula "30"))
                                          (rule "true_left" (formula "30"))
                                          (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "40"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "true_left" (formula "14"))
                                          (rule "inEqSimp_geqRight" (formula "39"))
                                          (rule "mul_literals" (formula "1") (term "1,0,0"))
                                          (rule "add_literals" (formula "1") (term "0,0"))
                                          (rule "add_zero_left" (formula "1") (term "0"))
                                          (rule "inEqSimp_antiSymm" (formula "12") (ifseqformula "1"))
                                          (rule "applyEq" (formula "32") (term "1,1,0,0,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "32") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "30") (term "1,1,0,0,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "30") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "18") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "27") (term "1,1,0") (ifseqformula "12"))
                                          (rule "applyEq" (formula "23") (term "1,1,0,0,0") (ifseqformula "12"))
                                          (rule "add_zero_right" (formula "23") (term "1,0,0,0"))
                                          (rule "applyEq" (formula "1") (term "0") (ifseqformula "12"))
                                          (rule "leq_literals" (formula "1"))
                                          (rule "true_left" (formula "1"))
                                          (rule "applyEq" (formula "12") (term "0") (ifseqformula "11"))
                                          (rule "qeq_literals" (formula "12"))
                                          (rule "true_left" (formula "12"))
                                          (rule "applyEq" (formula "19") (term "1") (ifseqformula "11"))
                                          (rule "applyEq" (formula "1") (term "1,1,1,0,0") (ifseqformula "11"))
                                          (rule "add_zero_right" (formula "1") (term "1,1,0,0"))
                                          (rule "applyEq" (formula "3") (term "1,1,0,0,0,0,0") (ifseqformula "11"))
                                          (rule "applyEq" (formula "22") (term "1,1,0,0,0,1") (ifseqformula "11"))
                                          (rule "add_zero_right" (formula "22") (term "1,0,0,0,1"))
                                          (rule "applyEq" (formula "14") (term "1,1,0,0,0,1") (ifseqformula "11"))
                                          (rule "add_zero_right" (formula "14") (term "1,0,0,0,1"))
                                          (rule "applyEq" (formula "5") (term "1,1") (ifseqformula "11"))
                                          (rule "add_zero_right" (formula "5") (term "1"))
                                          (rule "applyEq" (formula "10") (term "0,1,0,0") (ifseqformula "11"))
                                          (rule "times_zero_2" (formula "10") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "10") (term "0,0"))
                                          (rule "cut_direct" (formula "37") (term "0"))
                                          (branch "CUT: array.length >= 2 + to TRUE"
                                             (builtin "One Step Simplification" (formula "38"))
                                             (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "37"))
                                             (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                                             (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                                             (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                                             (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                                             (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                                             (rule "add_literals" (formula "13") (term "1,1,0,0"))
                                             (rule "times_zero_1" (formula "13") (term "1,0,0"))
                                             (rule "add_literals" (formula "13") (term "0,0"))
                                             (rule "qeq_literals" (formula "13") (term "0"))
                                             (builtin "One Step Simplification" (formula "13"))
                                             (rule "true_left" (formula "13"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + result) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "40"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "8") (ifseqformula "42"))
                                                (rule "eqSymm" (formula "43"))
                                                (rule "applyEqRigid" (formula "40") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "40"))
                                                (rule "false_right" (formula "40"))
                                                (rule "applyEqRigid" (formula "6") (term "2,1,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "1,0") (ifseqformula "31") (ifseqformula "41"))
                                                (rule "applyEq" (formula "6") (term "2,2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "24") (ifseqformula "41"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "20") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "20") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "20") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "20"))
                                                (rule "polySimp_mulLiterals" (formula "20") (term "0"))
                                                (rule "polySimp_elimOne" (formula "20") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "20"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + result) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "ifthenelse_split" (formula "3") (term "0"))
                                                (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> TRUE"
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "notLeft" (formula "4"))
                                                   (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "andLeft" (formula "3"))
                                                   (rule "applyEqReverse" (formula "44") (term "1") (ifseqformula "6"))
                                                   (rule "hideAuxiliaryEq" (formula "6"))
                                                   (rule "eqSymm" (formula "3"))
                                                   (rule "eqSymm" (formula "43"))
                                                   (rule "replace_known_right" (formula "40") (term "0,1") (ifseqformula "39"))
                                                   (builtin "One Step Simplification" (formula "40"))
                                                   (rule "inEqSimp_commuteLeq" (formula "5"))
                                                   (rule "inEqSimp_homoInEq1" (formula "4"))
                                                   (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                   (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "1"))
                                                   (rule "applyEq" (formula "43") (term "2,1") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "43") (term "1") (ifseqformula "7") (ifseqformula "42"))
                                                   (rule "applyEqRigid" (formula "43") (term "2,0") (ifseqformula "3"))
                                                   (rule "narrowSelectArrayType" (formula "43") (term "0") (ifseqformula "30") (ifseqformula "42"))
                                                   (rule "applyEqRigid" (formula "39") (term "0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "false_right" (formula "39"))
                                                   (rule "applyEq" (formula "39") (term "1,0,0,0") (ifseqformula "3"))
                                                   (builtin "One Step Simplification" (formula "39"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                   (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                   (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                   (rule "mul_literals" (formula "4") (term "0,1"))
                                                   (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                   (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                   (rule "inEqSimp_exactShadow3" (formula "35") (ifseqformula "4"))
                                                   (rule "times_zero_1" (formula "35") (term "0,0"))
                                                   (rule "add_zero_left" (formula "35") (term "0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "35"))
                                                   (rule "mul_literals" (formula "35") (term "1"))
                                                   (rule "nnf_ex2all" (formula "40"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0"))
                                                   (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                   (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                   (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                   (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                   (rule "commute_or" (formula "2") (term "0,0"))
                                                   (rule "commute_or_2" (formula "2") (term "0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                   (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                   (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                   (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                   (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                   (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                   (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                                   (rule "inEqSimp_contradInEq1" (formula "2") (term "0") (ifseqformula "36"))
                                                   (rule "qeq_literals" (formula "2") (term "0,0"))
                                                   (builtin "One Step Simplification" (formula "2"))
                                                   (rule "inEqSimp_contradInEq0" (formula "6") (ifseqformula "2"))
                                                   (rule "andLeft" (formula "6"))
                                                   (rule "inEqSimp_homoInEq1" (formula "6"))
                                                   (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
                                                   (rule "polySimp_rightDist" (formula "6") (term "1,0"))
                                                   (rule "mul_literals" (formula "6") (term "0,1,0"))
                                                   (rule "polySimp_addAssoc" (formula "6") (term "0"))
                                                   (rule "polySimp_addComm0" (formula "6") (term "0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "6") (term "0"))
                                                   (rule "add_literals" (formula "6") (term "1,1,0"))
                                                   (rule "times_zero_1" (formula "6") (term "1,0"))
                                                   (rule "add_literals" (formula "6") (term "0"))
                                                   (rule "leq_literals" (formula "6"))
                                                   (rule "closeFalse" (formula "6"))
                                                )
                                                (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> FALSE"
                                                   (rule "close" (formula "41") (ifseqformula "3"))
                                                )
                                             )
                                          )
                                          (branch "CUT: array.length >= 2 + to FALSE"
                                             (builtin "One Step Simplification" (formula "37"))
                                             (rule "true_left" (formula "37"))
                                             (rule "replace_known_right" (formula "22") (term "0") (ifseqformula "37"))
                                             (builtin "One Step Simplification" (formula "22"))
                                             (rule "true_left" (formula "22"))
                                             (rule "replace_known_right" (formula "14") (term "0") (ifseqformula "36"))
                                             (builtin "One Step Simplification" (formula "14"))
                                             (rule "true_left" (formula "14"))
                                             (rule "inEqSimp_geqRight" (formula "35"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                             (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                             (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                             (rule "add_literals" (formula "1") (term "0,0,0"))
                                             (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                             (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                             (rule "polySimp_rightDist" (formula "1") (term "1"))
                                             (rule "mul_literals" (formula "1") (term "0,1"))
                                             (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                             (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                             (rule "inEqSimp_antiSymm" (formula "14") (ifseqformula "1"))
                                             (rule "applyEq" (formula "19") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "33") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "15") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "15"))
                                             (rule "polySimp_pullOutFactor1" (formula "15") (term "0"))
                                             (rule "add_literals" (formula "15") (term "1,0"))
                                             (rule "times_zero_1" (formula "15") (term "0"))
                                             (rule "leq_literals" (formula "15"))
                                             (rule "true_left" (formula "15"))
                                             (rule "applyEq" (formula "32") (term "1,1") (ifseqformula "14"))
                                             (rule "applyEq" (formula "27") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq1" (formula "27"))
                                             (rule "polySimp_mulComm0" (formula "27") (term "1,0"))
                                             (rule "polySimp_rightDist" (formula "27") (term "1,0"))
                                             (rule "mul_literals" (formula "27") (term "0,1,0"))
                                             (rule "polySimp_addAssoc" (formula "27") (term "0"))
                                             (rule "polySimp_addComm1" (formula "27") (term "0,0"))
                                             (rule "add_literals" (formula "27") (term "0,0,0"))
                                             (rule "add_zero_left" (formula "27") (term "0,0"))
                                             (rule "applyEq" (formula "25") (term "1,0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "13") (term "0") (ifseqformula "14"))
                                             (rule "applyEq" (formula "1") (term "0") (ifseqformula "14"))
                                             (rule "inEqSimp_homoInEq0" (formula "1"))
                                             (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                             (rule "add_literals" (formula "1") (term "1,0"))
                                             (rule "times_zero_1" (formula "1") (term "0"))
                                             (rule "qeq_literals" (formula "1"))
                                             (rule "true_left" (formula "1"))
                                             (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "13"))
                                             (rule "applyEq" (formula "17") (term "1,1") (ifseqformula "13"))
                                             (rule "inEqSimp_sepNegMonomial0" (formula "26"))
                                             (rule "polySimp_mulLiterals" (formula "26") (term "0"))
                                             (rule "polySimp_elimOne" (formula "26") (term "0"))
                                             (rule "inEqSimp_sepPosMonomial1" (formula "12"))
                                             (rule "mul_literals" (formula "12") (term "1"))
                                             (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "12") (term "0"))
                                             (builtin "One Step Simplification" (formula "12"))
                                             (rule "true_left" (formula "12"))
                                             (rule "seqDef_induction_upper_concrete" (formula "16") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (term "0,1,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "16") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "seqDef_induction_upper_concrete" (formula "29") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (term "0,1,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "29") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "seqDef_induction_upper_concrete" (formula "23") (term "0"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "23") (term "0,0,1,0"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "seqDef_induction_upper_concrete" (formula "16") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (term "0,1,1") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "16") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "seqDef_induction_upper_concrete" (formula "29") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (term "0,1,1") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "29") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "seqDef_induction_upper_concrete" (formula "23") (term "1"))
                                             (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,1"))
                                             (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,1") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "23") (term "0,0,1,1"))
                                             (builtin "One Step Simplification" (formula "23"))
                                             (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=arr_8"))
                                             (rule "applyEq" (formula "24") (term "0,1,1") (ifseqformula "16"))
                                             (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
                                             (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "35")) (ifInst ""  (formula "9")))
                                             (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "6") (ifseqformula "35"))
                                             (rule "narrowSelectArrayType" (formula "16") (term "1,0") (ifseqformula "13") (ifseqformula "35"))
                                             (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "16") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "16") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "16") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "16"))
                                             (rule "applyEqReverse" (formula "24") (term "0,1,1") (ifseqformula "16"))
                                             (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "16"))
                                             (rule "hideAuxiliaryEq" (formula "16"))
                                             (rule "pullOutSelect" (formula "29") (term "0,1,1") (inst "selectSK=arr_9"))
                                             (rule "applyEq" (formula "23") (term "0,1,0") (ifseqformula "29"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "21"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                                             (rule "replaceKnownSelect_taclet110001100000000_20" (formula "29") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110001100000000_21" (formula "29") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,1,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "narrowSelectArrayType" (formula "29") (term "1,0") (ifseqformula "20") (ifseqformula "35"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_subsumption1" (formula "29") (term "0,0,0") (ifseqformula "5"))
                                             (rule "leq_literals" (formula "29") (term "0,0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "inEqSimp_contradInEq1" (formula "29") (term "0,0") (ifseqformula "17"))
                                             (rule "inEqSimp_homoInEq1" (formula "29") (term "0,0,0"))
                                             (rule "polySimp_mulComm0" (formula "29") (term "1,0,0,0,0"))
                                             (rule "polySimp_rightDist" (formula "29") (term "1,0,0,0,0"))
                                             (rule "mul_literals" (formula "29") (term "0,1,0,0,0,0"))
                                             (rule "polySimp_addAssoc" (formula "29") (term "0,0,0,0"))
                                             (rule "polySimp_addComm0" (formula "29") (term "0,0,0,0,0"))
                                             (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                                             (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                                             (rule "leq_literals" (formula "29") (term "0,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "applyEqReverse" (formula "30") (term "0,1,1") (ifseqformula "29"))
                                             (rule "applyEqReverse" (formula "23") (term "0,1,0") (ifseqformula "29"))
                                             (rule "hideAuxiliaryEq" (formula "29"))
                                             (rule "pullOutSelect" (formula "29") (term "0,1,0") (inst "selectSK=arr_10"))
                                             (rule "simplifySelectOfAnonEQ" (formula "29") (ifseqformula "27"))
                                             (builtin "One Step Simplification" (formula "29") (ifInst ""  (formula "35")))
                                             (rule "replaceKnownSelect_taclet110001100000000_22" (formula "29") (term "2,0"))
                                             (rule "replaceKnownAuxiliaryConstant_taclet110001100000000_23" (formula "29") (term "2,0"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,1,0,0") (ifseqformula "21"))
                                             (rule "selectCreatedOfAnonAsFormulaEQ" (formula "29") (term "0,0,1,0,0") (ifseqformula "14"))
                                             (rule "replace_known_left" (formula "29") (term "0,0,0,1,0,0") (ifseqformula "9"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "elementOfArrayRangeConcrete" (formula "29") (term "0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "narrowSelectArrayType" (formula "29") (term "1,0") (ifseqformula "26") (ifseqformula "35"))
                                             (rule "inEqSimp_commuteLeq" (formula "29") (term "0,0,0"))
                                             (rule "inEqSimp_homoInEq0" (formula "29") (term "1,0,0"))
                                             (rule "polySimp_pullOutFactor1" (formula "29") (term "0,1,0,0"))
                                             (rule "add_literals" (formula "29") (term "1,0,1,0,0"))
                                             (rule "times_zero_1" (formula "29") (term "0,1,0,0"))
                                             (rule "qeq_literals" (formula "29") (term "1,0,0"))
                                             (builtin "One Step Simplification" (formula "29"))
                                             (rule "ifthenelse_split" (formula "3") (term "0"))
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + result) & !f_0 = java.lang.Object::<created> TRUE"
                                                (rule "andLeft" (formula "3"))
                                                (rule "notLeft" (formula "4"))
                                                (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "andLeft" (formula "3"))
                                                (rule "applyEqReverse" (formula "7") (term "2,0") (ifseqformula "6"))
                                                (rule "hideAuxiliaryEq" (formula "6"))
                                                (rule "eqSymm" (formula "3"))
                                                (rule "replace_known_right" (formula "6") (term "0,1,0,0") (ifseqformula "36"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "inEqSimp_homoInEq0" (formula "5"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0"))
                                                (rule "applyEq" (formula "39") (term "2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "39") (term "0") (ifseqformula "8") (ifseqformula "38"))
                                                (rule "eqSymm" (formula "39"))
                                                (rule "applyEq" (formula "36") (term "0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "36"))
                                                (rule "false_right" (formula "36"))
                                                (rule "applyEq" (formula "6") (term "1,0,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "6"))
                                                (rule "applyEq" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "applyEq" (formula "6") (term "2,2,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "2,0") (ifseqformula "22") (ifseqformula "37"))
                                                (rule "applyEqRigid" (formula "6") (term "2,1,0") (ifseqformula "3"))
                                                (rule "narrowSelectArrayType" (formula "6") (term "1,0") (ifseqformula "28") (ifseqformula "37"))
                                                (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1"))
                                                (rule "mul_literals" (formula "5") (term "0,1"))
                                                (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                                (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                                (rule "commute_or" (formula "1") (term "0,0"))
                                                (rule "commute_or_2" (formula "1") (term "0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_addComm1" (formula "1") (term "0,1"))
                                                (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1"))
                                                (rule "polySimp_mulComm0" (formula "1") (term "1,1"))
                                                (rule "polySimp_rightDist" (formula "1") (term "1,1"))
                                                (rule "polySimp_mulLiterals" (formula "1") (term "1,1,1"))
                                                (rule "mul_literals" (formula "1") (term "0,1,1"))
                                                (rule "polySimp_elimOne" (formula "1") (term "1,1,1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "0") (ifseqformula "4"))
                                                (rule "qeq_literals" (formula "1") (term "0,0"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_exactShadow3" (formula "19") (ifseqformula "1"))
                                                (rule "polySimp_mulComm0" (formula "19") (term "0,0"))
                                                (rule "polySimp_addComm0" (formula "19") (term "0"))
                                                (rule "inEqSimp_sepNegMonomial1" (formula "19"))
                                                (rule "polySimp_mulLiterals" (formula "19") (term "0"))
                                                (rule "polySimp_elimOne" (formula "19") (term "0"))
                                                (rule "inEqSimp_contradInEq0" (formula "5") (ifseqformula "19"))
                                                (rule "andLeft" (formula "5"))
                                                (rule "inEqSimp_homoInEq1" (formula "5"))
                                                (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
                                                (rule "polySimp_rightDist" (formula "5") (term "1,0"))
                                                (rule "mul_literals" (formula "5") (term "0,1,0"))
                                                (rule "polySimp_addAssoc" (formula "5") (term "0"))
                                                (rule "polySimp_addComm1" (formula "5") (term "0,0"))
                                                (rule "add_literals" (formula "5") (term "0,0,0"))
                                                (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                                (rule "add_literals" (formula "5") (term "1,1,0"))
                                                (rule "times_zero_1" (formula "5") (term "1,0"))
                                                (rule "add_literals" (formula "5") (term "0"))
                                                (rule "leq_literals" (formula "5"))
                                                (rule "closeFalse" (formula "5"))
                                             )
                                             (branch " exists int iv; (arr(iv) = f_0 & iv >= 0 & iv <= -1 + result) & !f_0 = java.lang.Object::<created> FALSE"
                                                (rule "applyEqReverse" (formula "4") (term "2,0") (ifseqformula "3"))
                                                (rule "hideAuxiliaryEq" (formula "3"))
                                                (rule "allLeft" (formula "1") (inst "t=to"))
                                                (rule "eqSymm" (formula "1") (term "0,0,0"))
                                                (rule "inEqSimp_homoInEq1" (formula "1") (term "1"))
                                                (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,1"))
                                                (rule "add_literals" (formula "1") (term "1,1,0,1"))
                                                (rule "times_zero_1" (formula "1") (term "1,0,1"))
                                                (rule "add_zero_right" (formula "1") (term "0,1"))
                                                (rule "leq_literals" (formula "1") (term "1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "inEqSimp_contradInEq1" (formula "1") (term "1") (ifseqformula "5"))
                                                (rule "qeq_literals" (formula "1") (term "0,1"))
                                                (builtin "One Step Simplification" (formula "1"))
                                                (rule "notLeft" (formula "1"))
                                                (rule "ifthenelse_split" (formula "28") (term "0"))
                                                (branch "to >= 1 + result TRUE"
                                                   (rule "applyEqReverse" (formula "30") (term "0,1,0") (ifseqformula "29"))
                                                   (rule "hideAuxiliaryEq" (formula "29"))
                                                   (rule "inEqSimp_subsumption1" (formula "16") (ifseqformula "28"))
                                                   (rule "inEqSimp_homoInEq0" (formula "16") (term "0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0"))
                                                   (rule "add_literals" (formula "16") (term "1,1,0,0"))
                                                   (rule "times_zero_1" (formula "16") (term "1,0,0"))
                                                   (rule "add_literals" (formula "16") (term "0,0"))
                                                   (rule "qeq_literals" (formula "16") (term "0"))
                                                   (builtin "One Step Simplification" (formula "16"))
                                                   (rule "true_left" (formula "16"))
                                                   (rule "ifthenelse_split" (formula "3") (term "0"))
                                                   (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> TRUE"
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "notLeft" (formula "4"))
                                                      (rule "exLeft" (formula "3") (inst "sk=iv_0"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "andLeft" (formula "3"))
                                                      (rule "applyEqReverse" (formula "40") (term "1") (ifseqformula "6"))
                                                      (rule "hideAuxiliaryEq" (formula "6"))
                                                      (rule "eqSymm" (formula "3"))
                                                      (rule "eqSymm" (formula "39"))
                                                      (rule "replace_known_right" (formula "36") (term "0,1") (ifseqformula "34"))
                                                      (builtin "One Step Simplification" (formula "36"))
                                                      (rule "inEqSimp_commuteLeq" (formula "5"))
                                                      (rule "inEqSimp_homoInEq1" (formula "4"))
                                                      (rule "polySimp_addComm1" (formula "4") (term "0"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "26") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "38"))
                                                      (rule "applyEq" (formula "34") (term "0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "eqSymm" (formula "34"))
                                                      (rule "applyEqRigid" (formula "1") (term "1,0,0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "1"))
                                                      (rule "applyEqRigid" (formula "35") (term "1,0,0,0") (ifseqformula "3"))
                                                      (builtin "One Step Simplification" (formula "35"))
                                                      (rule "applyEqRigid" (formula "38") (term "2,0") (ifseqformula "3"))
                                                      (rule "narrowSelectArrayType" (formula "38") (term "0") (ifseqformula "7") (ifseqformula "37"))
                                                      (rule "eqSymm" (formula "38"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                                      (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                                      (rule "polySimp_rightDist" (formula "4") (term "1"))
                                                      (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                                      (rule "mul_literals" (formula "4") (term "0,1"))
                                                      (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                                      (rule "inEqSimp_strengthen1" (formula "5") (ifseqformula "34"))
                                                      (rule "inEqSimp_contradEq7" (formula "34") (ifseqformula "5"))
                                                      (rule "polySimp_mulComm0" (formula "34") (term "1,0,0"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "34") (term "0,0"))
                                                      (rule "add_literals" (formula "34") (term "1,1,0,0"))
                                                      (rule "times_zero_1" (formula "34") (term "1,0,0"))
                                                      (rule "add_zero_right" (formula "34") (term "0,0"))
                                                      (rule "leq_literals" (formula "34") (term "0"))
                                                      (builtin "One Step Simplification" (formula "34"))
                                                      (rule "false_right" (formula "34"))
                                                      (rule "inEqSimp_exactShadow3" (formula "32") (ifseqformula "4"))
                                                      (rule "times_zero_1" (formula "32") (term "0,0"))
                                                      (rule "add_zero_left" (formula "32") (term "0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "32"))
                                                      (rule "mul_literals" (formula "32") (term "1"))
                                                      (rule "nnf_ex2all" (formula "35"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0"))
                                                      (rule "inEqSimp_notLeq" (formula "1") (term "1,0"))
                                                      (rule "polySimp_rightDist" (formula "1") (term "1,0,0,1,0"))
                                                      (rule "mul_literals" (formula "1") (term "0,1,0,0,1,0"))
                                                      (rule "polySimp_addAssoc" (formula "1") (term "0,0,1,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,0,1,0"))
                                                      (rule "add_zero_left" (formula "1") (term "0,0,1,0"))
                                                      (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "1,0"))
                                                      (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0"))
                                                      (rule "polySimp_elimOne" (formula "1") (term "1,1,0"))
                                                      (rule "nnf_notAnd" (formula "1") (term "0,0"))
                                                      (rule "inEqSimp_notGeq" (formula "1") (term "1,0,0"))
                                                      (rule "times_zero_1" (formula "1") (term "1,0,0,1,0,0"))
                                                      (rule "add_literals" (formula "1") (term "0,0,1,0,0"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "1") (term "1,0,0"))
                                                      (rule "mul_literals" (formula "1") (term "1,1,0,0"))
                                                      (rule "commute_or" (formula "2") (term "0,0"))
                                                      (rule "commute_or_2" (formula "2") (term "0"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "1"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,1"))
                                                      (rule "inEqSimp_sepPosMonomial0" (formula "2") (term "1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,1"))
                                                      (rule "polySimp_mulLiterals" (formula "2") (term "1,1,1"))
                                                      (rule "polySimp_elimOne" (formula "2") (term "1,1,1"))
                                                      (rule "inEqSimp_contradInEq1" (formula "2") (term "1") (ifseqformula "6"))
                                                      (rule "inEqSimp_homoInEq1" (formula "2") (term "0,1"))
                                                      (rule "polySimp_mulComm0" (formula "2") (term "1,0,0,1"))
                                                      (rule "polySimp_rightDist" (formula "2") (term "1,0,0,1"))
                                                      (rule "mul_literals" (formula "2") (term "0,1,0,0,1"))
                                                      (rule "polySimp_addAssoc" (formula "2") (term "0,0,1"))
                                                      (rule "polySimp_addComm1" (formula "2") (term "0,0,0,1"))
                                                      (rule "add_literals" (formula "2") (term "0,0,0,0,1"))
                                                      (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0,1"))
                                                      (rule "add_literals" (formula "2") (term "1,1,0,0,1"))
                                                      (rule "times_zero_1" (formula "2") (term "1,0,0,1"))
                                                      (rule "add_zero_right" (formula "2") (term "0,0,1"))
                                                      (rule "leq_literals" (formula "2") (term "0,1"))
                                                      (builtin "One Step Simplification" (formula "2"))
                                                      (rule "inEqSimp_contradInEq0" (formula "33") (ifseqformula "2"))
                                                      (rule "qeq_literals" (formula "33") (term "0"))
                                                      (builtin "One Step Simplification" (formula "33"))
                                                      (rule "closeFalse" (formula "33"))
                                                   )
                                                   (branch " exists int iv; (arr(iv) = f_0 & iv >= 1 + result & iv <= to) & !f_0 = java.lang.Object::<created> FALSE"
                                                      (rule "close" (formula "37") (ifseqformula "3"))
                                                   )
                                                )
                                                (branch "to >= 1 + result FALSE"
                                                   (rule "applyEqReverse" (formula "29") (term "0,1,0") (ifseqformula "28"))
                                                   (rule "hideAuxiliaryEq" (formula "28"))
                                                   (rule "inEqSimp_geqRight" (formula "32"))
                                                   (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                                   (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                                   (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                                   (rule "add_literals" (formula "1") (term "0,0,0"))
                                                   (rule "add_zero_left" (formula "1") (term "0,0"))
                                                   (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                                   (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                                   (rule "polySimp_elimOne" (formula "1") (term "1"))
                                                   (rule "inEqSimp_antiSymm" (formula "17") (ifseqformula "1"))
                                                   (rule "applyEq" (formula "28") (term "2,1,0") (ifseqformula "17"))
                                                   (rule "applyEq" (formula "1") (term "0") (ifseqformula "17"))
                                                   (rule "inEqSimp_homoInEq0" (formula "1"))
                                                   (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                                                   (rule "add_literals" (formula "1") (term "1,0"))
                                                   (rule "times_zero_1" (formula "1") (term "0"))
                                                   (rule "qeq_literals" (formula "1"))
                                                   (rule "true_left" (formula "1"))
                                                   (rule "applyEq" (formula "23") (term "1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "15") (term "0,2,0,1,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "15") (term "1,0,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "17") (term "0") (ifseqformula "16"))
                                                   (rule "inEqSimp_homoInEq1" (formula "17"))
                                                   (rule "polySimp_pullOutFactor1" (formula "17") (term "0"))
                                                   (rule "add_literals" (formula "17") (term "1,0"))
                                                   (rule "times_zero_1" (formula "17") (term "0"))
                                                   (rule "leq_literals" (formula "17"))
                                                   (rule "true_left" (formula "17"))
                                                   (rule "applyEq" (formula "29") (term "1,1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "28") (term "1,0,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "28") (term "1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "22") (term "0,2,0,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "13") (term "2,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "1") (term "1,1,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "28") (term "0,2,0,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "9") (term "1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "22") (term "1,0,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "3") (term "1,1,0,0,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "4") (term "0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "28") (term "0,2,0,1,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "22") (term "0,2,0,1,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "15") (term "1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "15") (term "0,2,0,1,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "31") (term "1,1,1,0,0") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "11") (term "1,1") (ifseqformula "16"))
                                                   (rule "applyEq" (formula "32") (term "0,1") (ifseqformula "16"))
                                                   (rule "inEqSimp_subsumption1" (formula "30") (ifseqformula "4"))
                                                   (rule "leq_literals" (formula "30") (term "0"))
                                                   (builtin "One Step Simplification" (formula "30"))
                                                   (rule "true_left" (formula "30"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "18") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "18") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "18") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "18") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "18") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "18") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "18") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "18") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "18"))
                                                   (rule "true_left" (formula "18"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "28") (term "0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "add_zero_right" (formula "28") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "inEqSimp_or_tautInEq0" (formula "28") (term "0,0"))
                                                   (rule "polySimp_addAssoc" (formula "28") (term "1,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "0,1,1,0,0"))
                                                   (rule "add_zero_left" (formula "28") (term "1,1,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "28") (term "1,0,0"))
                                                   (rule "polySimp_pullOutFactor1" (formula "28") (term "0,1,0,0"))
                                                   (rule "add_literals" (formula "28") (term "1,0,1,0,0"))
                                                   (rule "times_zero_1" (formula "28") (term "0,1,0,0"))
                                                   (rule "leq_literals" (formula "28") (term "1,0,0"))
                                                   (builtin "One Step Simplification" (formula "28"))
                                                   (rule "true_left" (formula "28"))
                                                   (rule "commute_and_2" (formula "3") (term "0,0,0,0"))
                                                   (rule "inEqSimp_and_contradInEq1" (formula "3") (term "0,0,0,0"))
                                                   (rule "inEqSimp_homoInEq1" (formula "3") (term "1,0,0,0,0"))
                                                   (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "add_literals" (formula "3") (term "1,1,0,1,0,0,0,0"))
                                                   (rule "times_zero_1" (formula "3") (term "1,0,1,0,0,0,0"))
                                                   (rule "add_zero_right" (formula "3") (term "0,1,0,0,0,0"))
                                                   (rule "leq_literals" (formula "3") (term "1,0,0,0,0"))
                                                   (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                                   (rule "closeFalse" (formula "3"))
                                                )
                                             )
                                          )
                                       )
                                    )
                                    (branch "CUT: array.length >= 1 + result FALSE"
                                       (builtin "One Step Simplification" (formula "32"))
                                       (rule "true_left" (formula "32"))
                                       (rule "inEqSimp_geqRight" (formula "40"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "13") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "13") (term "0,0"))
                                       (rule "add_zero_left" (formula "13") (term "0"))
                                       (rule "inEqSimp_exactShadow3" (formula "14") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "14") (term "0,0"))
                                       (rule "mul_literals" (formula "14") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "14") (term "0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "14"))
                                       (rule "polySimp_mulLiterals" (formula "14") (term "0"))
                                       (rule "polySimp_elimOne" (formula "14") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "14") (ifseqformula "23"))
                                       (rule "andLeft" (formula "14"))
                                       (rule "inEqSimp_homoInEq1" (formula "14"))
                                       (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "14") (term "1,0"))
                                       (rule "mul_literals" (formula "14") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "14") (term "0"))
                                       (rule "polySimp_addComm0" (formula "14") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "14") (term "0"))
                                       (rule "add_literals" (formula "14") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "14") (term "1,0"))
                                       (rule "add_literals" (formula "14") (term "0"))
                                       (rule "leq_literals" (formula "14"))
                                       (rule "closeFalse" (formula "14"))
                                    )
                                 )
                                 (branch "CUT: result >= 0 FALSE"
                                    (builtin "One Step Simplification" (formula "38"))
                                    (rule "true_left" (formula "38"))
                                    (rule "inEqSimp_geqRight" (formula "39"))
                                    (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "21") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "21") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "21") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "21"))
                                    (rule "polySimp_mulLiterals" (formula "21") (term "0"))
                                    (rule "polySimp_elimOne" (formula "21") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "26") (term "0") (ifseqformula "21"))
                                    (rule "qeq_literals" (formula "26") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "26"))
                                    (rule "true_left" (formula "26"))
                                    (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "12"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                              )
                              (branch "CUT: o_0 = array FALSE"
                                 (builtin "One Step Simplification" (formula "42"))
                                 (rule "false_right" (formula "42"))
                                 (rule "replace_known_right" (formula "3") (term "0,0,0,0") (ifseqformula "41"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "applyEqReverse" (formula "43") (term "1") (ifseqformula "3"))
                                 (rule "hideAuxiliaryEq" (formula "3"))
                                 (rule "replace_known_right" (formula "2") (term "0,0,0,0") (ifseqformula "40"))
                                 (builtin "One Step Simplification" (formula "2") (ifInst ""  (formula "42")))
                                 (rule "closeFalse" (formula "2"))
                              )
                           )
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "44"))
                        (rule "closeTrue" (formula "44"))
                     )
                  )
                  (branch "Exceptional Post (sort)"
                     (builtin "One Step Simplification" (formula "34"))
                     (builtin "One Step Simplification" (formula "37"))
                     (rule "translateJavaSubInt" (formula "34") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0,0,1,0,1,1"))
                     (rule "translateJavaSubInt" (formula "34") (term "1,0,0,1,1,1,0,1,1"))
                     (rule "translateJavaAddInt" (formula "34") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
                     (rule "andLeft" (formula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,0") (ifseqformula "34"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,0") (ifseqformula "25"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,0,1,0") (ifseqformula "13"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "35"))
                     (rule "andLeft" (formula "37"))
                     (rule "notLeft" (formula "35"))
                     (rule "close" (formula "38") (ifseqformula "37"))
                  )
                  (branch "Pre (sort)"
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "9")) (ifInst ""  (formula "34")) (ifInst ""  (formula "34")))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "1,1,0") (ifseqformula "25"))
                     (rule "wellFormedAnonEQ" (formula "35") (term "0,1,0") (ifseqformula "25"))
                     (rule "wellFormedAnonEQ" (formula "35") (term "0,0,1,0") (ifseqformula "13"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "35") (term "0,1,1,0") (ifseqformula "13"))
                     (rule "translateJavaSubInt" (formula "35") (term "0,2,1,1,0,1,0,1,0,0"))
                     (rule "translateJavaSubInt" (formula "35") (term "0,0,1"))
                     (rule "translateJavaSubInt" (formula "35") (term "1,0,0,1,1,0,0"))
                     (rule "translateJavaAddInt" (formula "35") (term "0,2,1,1,0,1,0,1,1,0,0"))
                     (rule "translateJavaAddInt" (formula "35") (term "0,1"))
                     (rule "replace_known_left" (formula "35") (term "1,0,1,0") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "35") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")) (ifInst ""  (formula "5")))
                     (rule "polySimp_elimSub" (formula "35") (term "0,0,1"))
                     (rule "polySimp_elimSub" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "35") (term "1,0,2,1,1,0,1,0,1,0"))
                     (rule "polySimp_elimSub" (formula "35") (term "1,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "1,1,0,0,1,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "35") (term "0,2,1,1,0,1,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,2,1,1,0,1,0,1,0"))
                     (rule "add_zero_left" (formula "35") (term "0,2,1,1,0,1,0,1,0"))
                     (rule "replaceKnownSelect_taclet00000_4" (formula "35") (term "1,1,0,1,0,1,0"))
                     (rule "polySimp_addComm0" (formula "35") (term "1,0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,1"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,1"))
                     (rule "polySimp_addComm0" (formula "35") (term "0,0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,1"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,1"))
                     (rule "add_literals" (formula "35") (term "0,0,0,1"))
                     (rule "add_zero_left" (formula "35") (term "0,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "30") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "30") (term "1,0,0,1,0,1"))
                     (rule "inEqSimp_ltToLeq" (formula "9"))
                     (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "9") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                     (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                     (rule "add_literals" (formula "10") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "0"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "32") (term "0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "28") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
                     (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "30") (term "0"))
                     (rule "times_zero_1" (formula "30") (term "1,0,0,0"))
                     (rule "add_literals" (formula "30") (term "0,0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "21") (term "0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                     (rule "add_literals" (formula "21") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "1"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0"))
                     (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
                     (rule "inEqSimp_gtToGeq" (formula "35") (term "0,0,1,0"))
                     (rule "times_zero_1" (formula "35") (term "1,0,0,0,0,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "32") (term "0,0"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "28") (term "0,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                     (rule "add_literals" (formula "23") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "23") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "35") (term "1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "35") (term "1,0,0,1,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "35") (term "0,0,1,1,0"))
                     (rule "polySimp_rightDist" (formula "35") (term "1,0,0,0,0,1,1,0"))
                     (rule "mul_literals" (formula "35") (term "0,1,0,0,0,0,1,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,1,0"))
                     (rule "add_zero_left" (formula "35") (term "0,0,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "32") (term "0,0,0"))
                     (rule "add_literals" (formula "32") (term "0,0,0,0"))
                     (rule "measuredByCheck" (formula "35") (term "1") (ifseqformula "6"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,1,1,0"))
                     (rule "inEqSimp_commuteLeq" (formula "35") (term "0,0,0,1,0,1,0"))
                     (rule "polySimp_addAssoc" (formula "35") (term "0,0,0,0,1,1,0"))
                     (rule "add_literals" (formula "35") (term "0,0,0,0,0,1,1,0"))
                     (rule "polySimp_addComm1" (formula "35") (term "0,0,0,1,1,0"))
                     (rule "precOfInt" (formula "35") (term "1"))
                     (rule "inEqSimp_homoInEq0" (formula "31") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "31") (term "0,0,0"))
                     (rule "add_literals" (formula "31") (term "1,1,0,0,0"))
                     (rule "times_zero_1" (formula "31") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "31") (term "0,0,0"))
                     (rule "qeq_literals" (formula "31") (term "0,0"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "applyEqReverse" (formula "35") (term "0,1,0,0,1,0,1,0,1,0") (ifseqformula "31"))
                     (rule "applyEqReverse" (formula "32") (term "1,1,0,1") (ifseqformula "31"))
                     (rule "hideAuxiliaryEq" (formula "31"))
                     (rule "inEqSimp_homoInEq0" (formula "29") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "29") (term "0,0,0,0"))
                     (rule "add_literals" (formula "29") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "29") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "29") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "29") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "29"))
                     (rule "applyEqReverse" (formula "30") (term "0,1,0,0,1,0,1") (ifseqformula "29"))
                     (rule "hideAuxiliaryEq" (formula "29"))
                     (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
                     (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
                     (rule "qeq_literals" (formula "20") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "20"))
                     (rule "applyEqReverse" (formula "29") (term "0,1,0,0,1,0,1") (ifseqformula "20"))
                     (rule "hideAuxiliaryEq" (formula "20"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "32") (term "0,0"))
                     (rule "times_zero_2" (formula "32") (term "1,0,0,0"))
                     (rule "add_zero_right" (formula "32") (term "0,0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "32") (term "1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "1,0,0,1,1"))
                     (rule "polySimp_rightDist" (formula "32") (term "0,1,0,0,1,1"))
                     (rule "mul_literals" (formula "32") (term "0,0,1,0,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "32") (term "1,0,1,0,0,1,1"))
                     (rule "polySimp_elimOne" (formula "32") (term "1,0,1,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
                     (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0"))
                     (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
                     (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
                     (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
                     (rule "qeq_literals" (formula "21") (term "1,0,0"))
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "applyEqReverse" (formula "22") (term "1,1,0,1") (ifseqformula "21"))
                     (rule "hideAuxiliaryEq" (formula "21"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,1,1"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,1,1"))
                     (rule "polySimp_addComm1" (formula "31") (term "0,0,1,1"))
                     (rule "polySimp_pullOutFactor2b" (formula "31") (term "0,1,1"))
                     (rule "add_literals" (formula "31") (term "1,1,0,1,1"))
                     (rule "times_zero_1" (formula "31") (term "1,0,1,1"))
                     (rule "add_zero_right" (formula "31") (term "0,1,1"))
                     (rule "inEqSimp_homoInEq0" (formula "31") (term "0,1"))
                     (rule "times_zero_2" (formula "31") (term "1,0,0,1"))
                     (rule "add_zero_right" (formula "31") (term "0,0,1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                     (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                     (rule "polySimp_elimOne" (formula "9") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                     (rule "mul_literals" (formula "10") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "0"))
                     (rule "mul_literals" (formula "27") (term "1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0"))
                     (rule "mul_literals" (formula "20") (term "1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "21") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "28") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "28") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "0,0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,0,0,1,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,0,0,1,1,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,1,0,1,0"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,1,0,1,0"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,1,0,1,0"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,1,0,1,0"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,1,0,1,0"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,1,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,1,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,1,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,1,0,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "0,0"))
                     (rule "mul_literals" (formula "31") (term "1,0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "31") (term "1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "0,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "0,1,1"))
                     (rule "replace_known_left" (formula "31") (term "1,1") (ifseqformula "16"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1"))
                     (rule "replace_known_left" (formula "31") (term "1") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "31"))
                     (rule "pullOutSelect" (formula "31") (term "1,1,0,1,0,1,1") (inst "selectSK=arr_5"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "24"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "31")))
                     (rule "replaceKnownSelect_taclet000_2" (formula "1") (term "2,0"))
                     (rule "replaceKnownAuxiliaryConstant_taclet2000000_9" (formula "1") (term "2,0"))
                     (rule "selectCreatedOfAnonAsFormulaEQ" (formula "1") (term "0,1,0,0") (ifseqformula "14"))
                     (rule "replace_known_left" (formula "1") (term "0,0,1,0,0") (ifseqformula "6"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfArrayRangeConcrete" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,1,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,1,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "1,1,0,0,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "1") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "0,1,0,0"))
                     (rule "polySimp_elimOne" (formula "1") (term "0,1,0,0"))
                     (rule "inEqSimp_subsumption1" (formula "1") (term "0,0,0") (ifseqformula "2"))
                     (rule "inEqSimp_homoInEq0" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "1") (term "0,0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0,0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0,0"))
                     (rule "qeq_literals" (formula "1") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "inEqSimp_contradInEq1" (formula "1") (term "0,0") (ifseqformula "18"))
                     (rule "inEqSimp_homoInEq1" (formula "1") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "1") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "1") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "1") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "1") (term "0,0,0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "1") (term "0,0,0,0"))
                     (rule "add_literals" (formula "1") (term "1,1,0,0,0,0"))
                     (rule "times_zero_1" (formula "1") (term "1,0,0,0,0"))
                     (rule "add_zero_right" (formula "1") (term "0,0,0,0"))
                     (rule "leq_literals" (formula "1") (term "0,0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "32") (term "1,1,0,1,0,1,1") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "nnf_imp2or" (formula "18") (term "0"))
                     (rule "nnf_imp2or" (formula "11") (term "0,1"))
                     (rule "nnf_imp2or" (formula "28") (term "0,1"))
                     (rule "nnf_imp2or" (formula "21") (term "0,1"))
                     (rule "nnf_imp2or" (formula "19") (term "0"))
                     (rule "nnf_imp2or" (formula "26") (term "0"))
                     (rule "nnf_imp2or" (formula "10") (term "0,1"))
                     (rule "nnf_imp2or" (formula "20") (term "0,1"))
                     (rule "nnf_imp2or" (formula "27") (term "0,1"))
                     (rule "nnf_imp2or" (formula "31") (term "0,1,0,1"))
                     (rule "nnf_notAnd" (formula "18") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
                     (rule "nnf_notAnd" (formula "19") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
                     (rule "nnf_notAnd" (formula "26") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "26") (term "0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "26") (term "0,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "26") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,0,0,0"))
                     (rule "inEqSimp_notGeq" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "26") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "26") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "26") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0,0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                     (rule "nnf_notAnd" (formula "28") (term "0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "28") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "28") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "28") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "28") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "28") (term "1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "28") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "28") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "28") (term "0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "28") (term "0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "28") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "28") (term "1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "28") (term "1,1,0,0,1"))
                     (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1"))
                     (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                     (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
                     (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
                     (rule "nnf_notAnd" (formula "27") (term "0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "27") (term "1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,1,0,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "27") (term "0,0,1,0,0,1"))
                     (rule "add_literals" (formula "27") (term "0,0,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "27") (term "0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "27") (term "1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "27") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "27") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "27") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "27") (term "1,0,0,0,1"))
                     (rule "mul_literals" (formula "27") (term "0,1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "27") (term "1,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "27") (term "1,1,0,0,0,1"))
                     (rule "nnf_imp2or" (formula "31") (term "0,1,0,1,1"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,1,0,1"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,1,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,1,0,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,1,0,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1,0,1"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,1,0,1"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,1"))
                     (rule "nnf_notAnd" (formula "31") (term "0,0,1,0,1,1"))
                     (rule "inEqSimp_notLeq" (formula "31") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,0,0,1,0,0,1,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "31") (term "1,0,0,1,0,1,1"))
                     (rule "polySimp_mulComm0" (formula "31") (term "1,1,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,1,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,1,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,1,1,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,1,1,0,0,1,0,1,1"))
                     (rule "inEqSimp_notGeq" (formula "31") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_rightDist" (formula "31") (term "1,0,0,0,0,0,1,0,1,1"))
                     (rule "mul_literals" (formula "31") (term "0,1,0,0,0,0,0,1,0,1,1"))
                     (rule "polySimp_addAssoc" (formula "31") (term "0,0,0,0,0,1,0,1,1"))
                     (rule "add_literals" (formula "31") (term "0,0,0,0,0,0,1,0,1,1"))
                     (rule "add_zero_left" (formula "31") (term "0,0,0,0,0,1,0,1,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "31") (term "0,0,0,1,0,1,1"))
                     (rule "polySimp_mulLiterals" (formula "31") (term "1,0,0,0,1,0,1,1"))
                     (rule "polySimp_elimOne" (formula "31") (term "1,0,0,0,1,0,1,1"))
                     (rule "commute_or" (formula "26") (term "0,0"))
                     (rule "Class_invariant_axiom_for_Quicksort" (formula "31") (term "1,1,1") (inst "sk=sk_3") (ifseqformula "4"))
                     (branch "Use Axiom"
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "cut_direct" (formula "20") (term "0"))
                        (branch "CUT: from >= 1 TRUE"
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "replace_known_left" (formula "28") (term "0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "20"))
                           (rule "leq_literals" (formula "7") (term "0"))
                           (builtin "One Step Simplification" (formula "7"))
                           (rule "true_left" (formula "7"))
                           (rule "cut_direct" (formula "10") (term "0"))
                           (branch "CUT: array.length >= 2 + to TRUE"
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "replace_known_left" (formula "32") (term "0,1,1") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "32"))
                              (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                              (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                              (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                              (rule "add_literals" (formula "8") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "8") (term "1,0,0"))
                              (rule "add_literals" (formula "8") (term "0,0"))
                              (rule "qeq_literals" (formula "8") (term "0"))
                              (builtin "One Step Simplification" (formula "8"))
                              (rule "true_left" (formula "8"))
                              (rule "cut_direct" (formula "28") (term "0"))
                              (branch "CUT: array.length >= 1 + result TRUE"
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "cut_direct" (formula "32") (term "0"))
                                 (branch "CUT: result >= -1 TRUE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "andRight" (formula "33"))
                                    (branch
                                       (rule "impRight" (formula "33"))
                                       (rule "allRight" (formula "34") (inst "sk=x_0"))
                                       (rule "orRight" (formula "34"))
                                       (rule "orRight" (formula "34"))
                                       (rule "inEqSimp_geqRight" (formula "36"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_geqRight" (formula "36"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "36"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                                       (rule "leq_literals" (formula "5") (term "0"))
                                       (builtin "One Step Simplification" (formula "5"))
                                       (rule "true_left" (formula "5"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "4"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "x_0 >= from TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_commuteGeq" (formula "5"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "14") (inst "t=result"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,1,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "14") (term "1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                                          (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                                          (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (term "1,0") (ifseqformula "1"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0,1,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,1,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,1,0"))
                                          (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "0,0,0,0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "14") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "14") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                          (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                          (rule "leq_literals" (formula "14") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "14"))
                                          (rule "allLeft" (formula "24") (inst "t=x_0"))
                                          (rule "replaceKnownSelect_taclet0000002000000_13" (formula "24") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet00000002000000_14" (formula "24") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,1"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,1"))
                                          (rule "leq_literals" (formula "24") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                          (rule "leq_literals" (formula "24") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "24"))
                                          (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "3"))
                                          (rule "andLeft" (formula "24"))
                                          (rule "inEqSimp_homoInEq1" (formula "24"))
                                          (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                          (rule "add_literals" (formula "24") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "24") (term "1,0"))
                                          (rule "add_zero_right" (formula "24") (term "0"))
                                          (rule "leq_literals" (formula "24"))
                                          (rule "closeFalse" (formula "24"))
                                       )
                                       (branch "x_0 >= from FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "3"))
                                          (rule "andLeft" (formula "22"))
                                          (rule "inEqSimp_homoInEq1" (formula "22"))
                                          (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                          (rule "mul_literals" (formula "22") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                          (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                          (rule "add_literals" (formula "22") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "22") (term "1,0"))
                                          (rule "add_zero_right" (formula "22") (term "0"))
                                          (rule "leq_literals" (formula "22"))
                                          (rule "closeFalse" (formula "22"))
                                       )
                                    )
                                    (branch
                                       (rule "allRight" (formula "33") (inst "sk=x_0"))
                                       (rule "orRight" (formula "33"))
                                       (rule "orRight" (formula "33"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_geqRight" (formula "35"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                       (rule "add_literals" (formula "1") (term "0,0,0"))
                                       (rule "add_zero_left" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_leqRight" (formula "35"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1"))
                                       (rule "mul_literals" (formula "3") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                       (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                       (rule "polySimp_elimOne" (formula "2") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "28"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")))
                                       (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "17"))
                                       (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "10"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_homoInEq1" (formula "4"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "1"))
                                       (rule "mul_literals" (formula "4") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                       (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                       (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                       (builtin "One Step Simplification" (formula "3"))
                                       (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "36")) (ifInst ""  (formula "10")))
                                       (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                       (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                       (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                       (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                       (rule "mul_literals" (formula "1") (term "0,0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_subsumption1" (formula "22") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq0" (formula "22") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0"))
                                       (rule "qeq_literals" (formula "22") (term "0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "true_left" (formula "22"))
                                       (rule "ifthenelse_split" (formula "4") (term "0"))
                                       (branch "x_0 >= from TRUE"
                                          (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                          (rule "hideAuxiliaryEq" (formula "5"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                          (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                          (rule "polySimp_elimOne" (formula "4") (term "1"))
                                          (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                          (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                          (rule "add_zero_right" (formula "4") (term "0,0"))
                                          (rule "qeq_literals" (formula "4") (term "0"))
                                          (builtin "One Step Simplification" (formula "4"))
                                          (rule "true_left" (formula "4"))
                                          (rule "allLeft" (formula "23") (inst "t=x_0"))
                                          (rule "replaceKnownSelect_taclet1000002000000_13" (formula "23") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01000002000000_14" (formula "23") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "23") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                                          (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                          (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                          (rule "leq_literals" (formula "23") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "23"))
                                          (rule "allLeft" (formula "26") (inst "t=x_0"))
                                          (rule "replaceKnownSelect_taclet1000002000000_13" (formula "26") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01000002000000_14" (formula "26") (term "0,1"))
                                          (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                          (rule "leq_literals" (formula "26") (term "0,1,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                          (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                          (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                          (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                          (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                          (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                          (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                          (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                          (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                          (rule "leq_literals" (formula "26") (term "0,0"))
                                          (builtin "One Step Simplification" (formula "26"))
                                          (rule "allLeft" (formula "28") (inst "t=x_0"))
                                          (rule "replaceKnownSelect_taclet1000002000000_13" (formula "28") (term "0,1"))
                                          (rule "replaceKnownAuxiliaryConstant_taclet01000002000000_14" (formula "28") (term "0,1"))
                                          (rule "inEqSimp_contradInEq1" (formula "28") (term "1") (ifseqformula "5"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "28") (term "1") (ifseqformula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "28") (term "0,1"))
                                          (rule "polySimp_pullOutFactor1b" (formula "28") (term "0,0,1"))
                                          (rule "add_literals" (formula "28") (term "1,1,0,0,1"))
                                          (rule "times_zero_1" (formula "28") (term "1,0,0,1"))
                                          (rule "add_zero_right" (formula "28") (term "0,0,1"))
                                          (rule "leq_literals" (formula "28") (term "0,1"))
                                          (builtin "One Step Simplification" (formula "28"))
                                          (rule "inEqSimp_contradInEq0" (formula "4") (ifseqformula "28"))
                                          (rule "andLeft" (formula "4"))
                                          (rule "inEqSimp_homoInEq1" (formula "4"))
                                          (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                                          (rule "mul_literals" (formula "4") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "4") (term "0"))
                                          (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                                          (rule "add_literals" (formula "4") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "4") (term "1,0"))
                                          (rule "add_zero_right" (formula "4") (term "0"))
                                          (rule "leq_literals" (formula "4"))
                                          (rule "closeFalse" (formula "4"))
                                       )
                                       (branch "x_0 >= from FALSE"
                                          (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                          (rule "hideAuxiliaryEq" (formula "4"))
                                          (rule "inEqSimp_geqRight" (formula "34"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                          (rule "inEqSimp_homoInEq0" (formula "5"))
                                          (rule "polySimp_addComm1" (formula "5") (term "0"))
                                          (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                          (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                          (rule "polySimp_rightDist" (formula "1") (term "1"))
                                          (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                          (rule "mul_literals" (formula "1") (term "0,1"))
                                          (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                          (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                          (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                          (rule "polySimp_rightDist" (formula "5") (term "1"))
                                          (rule "mul_literals" (formula "5") (term "0,1"))
                                          (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                          (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                          (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                          (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                          (rule "mul_literals" (formula "3") (term "0,0,0"))
                                          (rule "polySimp_addComm1" (formula "3") (term "0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                          (rule "add_literals" (formula "3") (term "0,0,0"))
                                          (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                          (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                          (rule "polySimp_elimOne" (formula "3") (term "0"))
                                          (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "22"))
                                          (rule "andLeft" (formula "3"))
                                          (rule "inEqSimp_homoInEq1" (formula "3"))
                                          (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                          (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                          (rule "mul_literals" (formula "3") (term "0,1,0"))
                                          (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                          (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                          (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                          (rule "add_literals" (formula "3") (term "1,1,0"))
                                          (rule "times_zero_1" (formula "3") (term "1,0"))
                                          (rule "add_zero_right" (formula "3") (term "0"))
                                          (rule "leq_literals" (formula "3"))
                                          (rule "closeFalse" (formula "3"))
                                       )
                                    )
                                 )
                                 (branch "CUT: result >= -1 FALSE"
                                    (builtin "One Step Simplification" (formula "33"))
                                    (rule "false_right" (formula "33"))
                                    (rule "inEqSimp_geqRight" (formula "32"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "16") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "16") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "16") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "16"))
                                    (rule "polySimp_mulLiterals" (formula "16") (term "0"))
                                    (rule "polySimp_elimOne" (formula "16") (term "0"))
                                    (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "16"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "closeFalse" (formula "21"))
                                 )
                              )
                              (branch "CUT: array.length >= 1 + result FALSE"
                                 (builtin "One Step Simplification" (formula "28"))
                                 (rule "true_left" (formula "28"))
                                 (rule "inEqSimp_geqRight" (formula "28"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "8") (term "0,0"))
                                 (rule "add_zero_left" (formula "8") (term "0"))
                                 (rule "replace_known_left" (formula "32") (term "0,0,1") (ifseqformula "8"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_subsumption1" (formula "32") (term "0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "32") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "32"))
                                 (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                                 (rule "mul_literals" (formula "11") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "11") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                                 (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                                 (rule "polySimp_elimOne" (formula "11") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "11"))
                                 (rule "andLeft" (formula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "19"))
                                 (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                                 (rule "mul_literals" (formula "19") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "19") (term "0"))
                                 (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                                 (rule "add_literals" (formula "19") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "19") (term "1,0"))
                                 (rule "add_literals" (formula "19") (term "0"))
                                 (rule "leq_literals" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                           (branch "CUT: array.length >= 2 + to FALSE"
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "28"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "true_left" (formula "20"))
                              (rule "replace_known_right" (formula "30") (term "0,1,1") (ifseqformula "27"))
                              (builtin "One Step Simplification" (formula "30"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                              (rule "applyEq" (formula "10") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "10"))
                              (rule "polySimp_pullOutFactor1" (formula "10") (term "0"))
                              (rule "add_literals" (formula "10") (term "1,0"))
                              (rule "times_zero_1" (formula "10") (term "0"))
                              (rule "leq_literals" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "applyEq" (formula "27") (term "0,0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq1" (formula "27") (term "0"))
                              (rule "polySimp_mulComm0" (formula "27") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "27") (term "1,0,0"))
                              (rule "mul_literals" (formula "27") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "27") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "27") (term "0,0,0"))
                              (rule "add_literals" (formula "27") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "27") (term "0,0,0"))
                              (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "24") (term "1,1") (ifseqformula "9"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "9"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                              (rule "inEqSimp_homoInEq0" (formula "1"))
                              (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,0"))
                              (rule "times_zero_1" (formula "1") (term "0"))
                              (rule "qeq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "8"))
                              (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "15"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                              (rule "mul_literals" (formula "7") (term "1"))
                              (rule "seqDef_induction_upper_concrete" (formula "13") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1"))
                              (rule "seqDef_induction_upper_concrete" (formula "23") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,1"))
                              (rule "seqDef_induction_upper_concrete" (formula "23") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0"))
                              (rule "seqDef_induction_upper_concrete" (formula "13") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                              (rule "pullOutSelect" (formula "23") (term "0,1,1,1") (inst "selectSK=arr_6"))
                              (rule "applyEq" (formula "13") (term "0,1,1,0") (ifseqformula "23"))
                              (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "11"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")) (ifInst ""  (formula "5")))
                              (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "narrowSelectArrayType" (formula "23") (term "1,0") (ifseqformula "10") (ifseqformula "29"))
                              (rule "narrowSelectArrayType" (formula "23") (term "2,0") (ifseqformula "2") (ifseqformula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                              (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                              (rule "qeq_literals" (formula "23") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "13") (term "0,1,1,0") (ifseqformula "23"))
                              (rule "applyEqReverse" (formula "24") (term "0,1,1,1") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "pullOutSelect" (formula "23") (term "0,1,1,0") (inst "selectSK=arr_7"))
                              (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "21"))
                              (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "29")))
                              (rule "replaceKnownSelect_taclet1002000000_12" (formula "23") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1002000000_13" (formula "23") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "23") (term "0,1,0,0") (ifseqformula "11"))
                              (rule "replace_known_left" (formula "23") (term "0,0,1,0,0") (ifseqformula "5"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "narrowSelectArrayType" (formula "23") (term "1,0") (ifseqformula "20") (ifseqformula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "0,0,0") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0,0"))
                              (rule "qeq_literals" (formula "23") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0,0") (ifseqformula "15"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "23") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "23") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "applyEqReverse" (formula "24") (term "0,1,1,0") (ifseqformula "23"))
                              (rule "hideAuxiliaryEq" (formula "23"))
                              (rule "ifthenelse_split" (formula "13") (term "1,1"))
                              (branch "to >= 0 TRUE"
                                 (rule "replace_known_left" (formula "24") (term "0,1,1") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "13")))
                                 (rule "replace_known_left" (formula "14") (term "0,1,0") (ifseqformula "13"))
                                 (builtin "One Step Simplification" (formula "14"))
                                 (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "13"))
                                 (rule "leq_literals" (formula "7") (term "0"))
                                 (builtin "One Step Simplification" (formula "7"))
                                 (rule "true_left" (formula "7"))
                                 (rule "cut_direct" (formula "29") (term "0"))
                                 (branch "CUT: result >= -1 TRUE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "impRight" (formula "30"))
                                    (rule "allRight" (formula "31") (inst "sk=x_0"))
                                    (rule "orRight" (formula "31"))
                                    (rule "orRight" (formula "31"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_geqRight" (formula "33"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "33"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                                    (rule "leq_literals" (formula "5") (term "0"))
                                    (builtin "One Step Simplification" (formula "5"))
                                    (rule "true_left" (formula "5"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_8"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "26"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "15"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "10"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "15"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "33")) (ifInst ""  (formula "10")))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "2")))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                    (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1"))
                                    (rule "mul_literals" (formula "1") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "allLeft" (formula "14") (inst "t=to"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,1,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,1,0"))
                                    (rule "leq_literals" (formula "14") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "inEqSimp_contradInEq1" (formula "14") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "14") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "14") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "14") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "14") (term "0,0,0"))
                                    (rule "add_literals" (formula "14") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "14") (term "0,0,0"))
                                    (rule "leq_literals" (formula "14") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "14"))
                                    (rule "allLeft" (formula "25") (inst "t=to"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "1,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,1,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,1,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,1,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,1,0"))
                                    (rule "leq_literals" (formula "25") (term "1,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_contradInEq1" (formula "25") (term "0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq1" (formula "25") (term "0,0"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1,0,0,0"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1,0,0,0"))
                                    (rule "mul_literals" (formula "25") (term "0,1,0,0,0"))
                                    (rule "polySimp_addAssoc" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "0,0,0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0"))
                                    (rule "leq_literals" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "pullOutSelect" (formula "25") (term "0") (inst "selectSK=arr_9"))
                                    (rule "simplifySelectOfAnonEQ" (formula "25") (ifseqformula "17"))
                                    (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "36")) (ifInst ""  (formula "11")))
                                    (rule "elementOfArrayRangeConcrete" (formula "25") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_commuteLeq" (formula "25") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "26"))
                                    (rule "polySimp_addComm1" (formula "26") (term "0"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "1,0,0"))
                                    (rule "polySimp_pullOutFactor1" (formula "25") (term "0,1,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,0,1,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "0,1,0,0"))
                                    (rule "qeq_literals" (formula "25") (term "1,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "26"))
                                    (rule "polySimp_mulComm0" (formula "26") (term "1"))
                                    (rule "polySimp_rightDist" (formula "26") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "26") (term "1,1"))
                                    (rule "mul_literals" (formula "26") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "26") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "25") (term "0,0") (ifseqformula "7"))
                                    (rule "inEqSimp_homoInEq0" (formula "25") (term "0,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,0,0"))
                                    (rule "add_literals" (formula "25") (term "1,1,0,0,0,0"))
                                    (rule "times_zero_1" (formula "25") (term "1,0,0,0,0"))
                                    (rule "add_zero_right" (formula "25") (term "0,0,0,0"))
                                    (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                    (builtin "One Step Simplification" (formula "25"))
                                    (rule "applyEqReverse" (formula "26") (term "1,1") (ifseqformula "25"))
                                    (rule "hideAuxiliaryEq" (formula "25"))
                                    (rule "inEqSimp_homoInEq0" (formula "25"))
                                    (rule "polySimp_addComm1" (formula "25") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "25"))
                                    (rule "polySimp_mulComm0" (formula "25") (term "1"))
                                    (rule "polySimp_rightDist" (formula "25") (term "1"))
                                    (rule "polySimp_mulLiterals" (formula "25") (term "1,1"))
                                    (rule "mul_literals" (formula "25") (term "0,1"))
                                    (rule "polySimp_elimOne" (formula "25") (term "1,1"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "x_0 >= from TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "3"))
                                       (rule "polySimp_mulComm0" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "1"))
                                       (rule "polySimp_elimOne" (formula "4") (term "1"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "8"))
                                       (rule "inEqSimp_homoInEq0" (formula "4") (term "0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "4") (term "0,0"))
                                       (rule "add_literals" (formula "4") (term "1,1,0,0"))
                                       (rule "times_zero_1" (formula "4") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "4") (term "0,0"))
                                       (rule "qeq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "26") (inst "t=result"))
                                       (rule "replaceKnownSelect_taclet000_0" (formula "26") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "26") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "1,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,1,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "26") (term "1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,1,0"))
                                       (rule "polySimp_mulLiterals" (formula "26") (term "1,1,1,0"))
                                       (rule "polySimp_elimOne" (formula "26") (term "1,1,1,0"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,1,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,1,0"))
                                       (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "26") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "inEqSimp_contradInEq1" (formula "26") (term "0") (ifseqformula "21"))
                                       (rule "inEqSimp_homoInEq1" (formula "26") (term "0,0"))
                                       (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0"))
                                       (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0"))
                                       (rule "mul_literals" (formula "26") (term "0,1,0,0,0"))
                                       (rule "polySimp_addAssoc" (formula "26") (term "0,0,0"))
                                       (rule "polySimp_addComm0" (formula "26") (term "0,0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,0"))
                                       (rule "add_literals" (formula "26") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "26") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "26") (term "0,0,0"))
                                       (rule "leq_literals" (formula "26") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "26"))
                                       (rule "allLeft" (formula "23") (inst "t=to"))
                                       (rule "replaceKnownSelect_taclet001002000000_18" (formula "23") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet001002000000_19" (formula "23") (term "0,1"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                       (rule "leq_literals" (formula "23") (term "1,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                       (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                       (rule "leq_literals" (formula "23") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "23"))
                                       (rule "allLeft" (formula "24") (inst "t=x_0"))
                                       (rule "replaceKnownSelect_taclet001002000000_17" (formula "24") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0001002000000_20" (formula "24") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "2"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                       (rule "leq_literals" (formula "24") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "24"))
                                       (rule "inEqSimp_contradInEq0" (formula "24") (ifseqformula "5"))
                                       (rule "andLeft" (formula "24"))
                                       (rule "inEqSimp_homoInEq1" (formula "24"))
                                       (rule "polySimp_pullOutFactor1b" (formula "24") (term "0"))
                                       (rule "add_literals" (formula "24") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "24") (term "1,0"))
                                       (rule "add_zero_right" (formula "24") (term "0"))
                                       (rule "leq_literals" (formula "24"))
                                       (rule "closeFalse" (formula "24"))
                                    )
                                    (branch "x_0 >= from FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_geqRight" (formula "33"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                       (rule "polySimp_rightDist" (formula "1") (term "1"))
                                       (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                       (rule "mul_literals" (formula "1") (term "0,1"))
                                       (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "3") (term "0,0"))
                                       (rule "mul_literals" (formula "3") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "3") (term "0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0,0"))
                                       (rule "add_literals" (formula "3") (term "0,0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "3"))
                                       (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                       (rule "polySimp_elimOne" (formula "3") (term "0"))
                                       (rule "inEqSimp_contradInEq1" (formula "3") (ifseqformula "22"))
                                       (rule "andLeft" (formula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "3"))
                                       (rule "polySimp_mulComm0" (formula "3") (term "1,0"))
                                       (rule "polySimp_rightDist" (formula "3") (term "1,0"))
                                       (rule "mul_literals" (formula "3") (term "0,1,0"))
                                       (rule "polySimp_addAssoc" (formula "3") (term "0"))
                                       (rule "polySimp_addComm0" (formula "3") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                                       (rule "add_literals" (formula "3") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "3") (term "1,0"))
                                       (rule "add_zero_right" (formula "3") (term "0"))
                                       (rule "leq_literals" (formula "3"))
                                       (rule "closeFalse" (formula "3"))
                                    )
                                 )
                                 (branch "CUT: result >= -1 FALSE"
                                    (builtin "One Step Simplification" (formula "30"))
                                    (rule "false_right" (formula "30"))
                                    (rule "inEqSimp_geqRight" (formula "29"))
                                    (rule "mul_literals" (formula "1") (term "1,0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "mul_literals" (formula "1") (term "1"))
                                    (rule "inEqSimp_exactShadow3" (formula "15") (ifseqformula "1"))
                                    (rule "polySimp_mulComm0" (formula "15") (term "0,0"))
                                    (rule "polySimp_addComm0" (formula "15") (term "0"))
                                    (rule "inEqSimp_sepNegMonomial1" (formula "15"))
                                    (rule "polySimp_mulLiterals" (formula "15") (term "0"))
                                    (rule "polySimp_elimOne" (formula "15") (term "0"))
                                    (rule "inEqSimp_contradInEq1" (formula "15") (ifseqformula "20"))
                                    (rule "qeq_literals" (formula "15") (term "0"))
                                    (builtin "One Step Simplification" (formula "15"))
                                    (rule "closeFalse" (formula "15"))
                                 )
                              )
                              (branch "to >= 0 FALSE"
                                 (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "27")))
                                 (rule "replace_known_right" (formula "23") (term "0,1,0") (ifseqformula "27"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")))
                                 (rule "inEqSimp_geqRight" (formula "27"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                                 (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                                 (rule "qeq_literals" (formula "9"))
                                 (rule "true_left" (formula "9"))
                                 (rule "applyEq" (formula "16") (term "0") (ifseqformula "8"))
                                 (rule "inEqSimp_commuteGeq" (formula "16"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "true_left" (formula "1"))
                                 (rule "applyEq" (formula "19") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "add_literals" (formula "19") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "6") (term "1,0") (ifseqformula "7"))
                                 (rule "polySimp_addComm1" (formula "6") (term "0"))
                                 (rule "add_literals" (formula "6") (term "0,0"))
                                 (rule "add_zero_left" (formula "6") (term "0"))
                                 (rule "applyEq" (formula "1") (term "0") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "applyEq" (formula "29") (term "1,1,1,0,0,1,1") (ifseqformula "7"))
                                 (rule "add_literals" (formula "29") (term "1,1,0,0,1,1"))
                                 (rule "applyEq" (formula "23") (term "1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "23") (term "1,1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "17") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "add_literals" (formula "17") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "9") (term "1,1,1,0,0") (ifseqformula "7"))
                                 (rule "add_literals" (formula "9") (term "1,1,0,0"))
                                 (rule "applyEq" (formula "11") (term "2,1,0") (ifseqformula "7"))
                                 (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "7"))
                                 (rule "applyEq" (formula "8") (term "1,1") (ifseqformula "7"))
                                 (rule "add_literals" (formula "8") (term "1"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "29") (term "0,1") (ifseqformula "15"))
                                 (rule "qeq_literals" (formula "29") (term "0,0,1"))
                                 (builtin "One Step Simplification" (formula "29"))
                                 (rule "inEqSimp_geqRight" (formula "29"))
                                 (rule "mul_literals" (formula "1") (term "1,0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "2"))
                                 (rule "qeq_literals" (formula "19") (term "0"))
                                 (builtin "One Step Simplification" (formula "19"))
                                 (rule "closeFalse" (formula "19"))
                              )
                           )
                        )
                        (branch "CUT: from >= 1 FALSE"
                           (builtin "One Step Simplification" (formula "20"))
                           (rule "true_left" (formula "20"))
                           (rule "replace_known_right" (formula "26") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "true_left" (formula "26"))
                           (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "10"))
                           (rule "true_left" (formula "10"))
                           (rule "inEqSimp_geqRight" (formula "26"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                           (rule "applyEq" (formula "21") (term "1,1,0,0,0,1") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "21") (term "1,0,0,0,1"))
                           (rule "applyEq" (formula "14") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "23") (term "1,1,0") (ifseqformula "8"))
                           (rule "applyEq" (formula "17") (term "1") (ifseqformula "8"))
                           (rule "replace_known_left" (formula "30") (term "0,0,1") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "30"))
                           (rule "applyEq" (formula "19") (term "1,1,0,0,0") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "19") (term "1,0,0,0"))
                           (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                           (rule "qeq_literals" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "2") (term "1,1") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "2") (term "1"))
                           (rule "applyEq" (formula "25") (term "1,1,0,0,0") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "25") (term "1,0,0,0"))
                           (rule "applyEq" (formula "11") (term "1,1,0,0,0,1") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "11") (term "1,0,0,0,1"))
                           (rule "applyEq" (formula "26") (term "1,1,0,0,0,1") (ifseqformula "8"))
                           (rule "add_zero_right" (formula "26") (term "1,0,0,0,1"))
                           (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                           (rule "leq_literals" (formula "1"))
                           (rule "true_left" (formula "1"))
                           (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "7"))
                           (rule "times_zero_2" (formula "6") (term "1,0,0"))
                           (rule "add_zero_right" (formula "6") (term "0,0"))
                           (rule "inEqSimp_subsumption1" (formula "28") (term "0") (ifseqformula "15"))
                           (rule "leq_literals" (formula "28") (term "0,0"))
                           (builtin "One Step Simplification" (formula "28"))
                           (rule "cut_direct" (formula "10") (term "0"))
                           (branch "CUT: array.length >= 2 + to TRUE"
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "replace_known_left" (formula "29") (term "0,1") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "29"))
                              (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                              (builtin "One Step Simplification" (formula "20"))
                              (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                              (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                              (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                              (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                              (rule "add_literals" (formula "9") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "9") (term "1,0,0"))
                              (rule "add_literals" (formula "9") (term "0,0"))
                              (rule "qeq_literals" (formula "9") (term "0"))
                              (builtin "One Step Simplification" (formula "9"))
                              (rule "true_left" (formula "9"))
                              (rule "cut_direct" (formula "25") (term "0"))
                              (branch "CUT: array.length >= 1 + result TRUE"
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "andRight" (formula "29"))
                                 (branch
                                    (rule "allRight" (formula "29") (inst "sk=x_0"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_leqRight" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "16"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "4"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "9")))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "x_0 >= 0 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_commuteGeq" (formula "5"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "22") (inst "t=x_0"))
                                       (rule "replaceKnownSelect_taclet000102000000_13" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0000102000000_14" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "1") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                       (rule "leq_literals" (formula "22") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (ifseqformula "3"))
                                       (rule "andLeft" (formula "22"))
                                       (rule "inEqSimp_homoInEq1" (formula "22"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0"))
                                       (rule "leq_literals" (formula "22"))
                                       (rule "closeFalse" (formula "22"))
                                    )
                                    (branch "x_0 >= 0 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_geqRight" (formula "30"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                                 (branch
                                    (rule "allRight" (formula "29") (inst "sk=x_0"))
                                    (rule "orRight" (formula "29"))
                                    (rule "orRight" (formula "29"))
                                    (rule "inEqSimp_leqRight" (formula "31"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_leqRight" (formula "30"))
                                    (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                    (rule "inEqSimp_geqRight" (formula "31"))
                                    (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                    (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                    (rule "add_literals" (formula "1") (term "0,0,0"))
                                    (rule "add_zero_left" (formula "1") (term "0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1"))
                                    (rule "mul_literals" (formula "3") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                    (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                    (rule "polySimp_elimOne" (formula "1") (term "1"))
                                    (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "25"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")))
                                    (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "16"))
                                    (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "9"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                                    (rule "inEqSimp_homoInEq1" (formula "4"))
                                    (rule "polySimp_addComm1" (formula "4") (term "0"))
                                    (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                                    (rule "polySimp_mulComm0" (formula "4") (term "1"))
                                    (rule "polySimp_rightDist" (formula "4") (term "1"))
                                    (rule "mul_literals" (formula "4") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                                    (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                                    (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                                    (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                                    (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                                    (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                                    (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                                    (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                                    (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                                    (builtin "One Step Simplification" (formula "3"))
                                    (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "16"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "32")) (ifInst ""  (formula "9")))
                                    (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                                    (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                                    (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                                    (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                                    (rule "mul_literals" (formula "2") (term "0,0,0"))
                                    (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                    (rule "polySimp_mulComm0" (formula "2") (term "1"))
                                    (rule "polySimp_rightDist" (formula "2") (term "1"))
                                    (rule "mul_literals" (formula "2") (term "0,1"))
                                    (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                                    (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                                    (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                                    (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                                    (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                                    (rule "add_literals" (formula "21") (term "1,1,0,0"))
                                    (rule "times_zero_1" (formula "21") (term "1,0,0"))
                                    (rule "add_zero_right" (formula "21") (term "0,0"))
                                    (rule "qeq_literals" (formula "21") (term "0"))
                                    (builtin "One Step Simplification" (formula "21"))
                                    (rule "true_left" (formula "21"))
                                    (rule "ifthenelse_split" (formula "4") (term "0"))
                                    (branch "x_0 >= 0 TRUE"
                                       (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                       (rule "hideAuxiliaryEq" (formula "5"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                       (rule "times_zero_1" (formula "4") (term "0,0"))
                                       (rule "add_zero_left" (formula "4") (term "0"))
                                       (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                       (rule "leq_literals" (formula "4") (term "0"))
                                       (builtin "One Step Simplification" (formula "4"))
                                       (rule "true_left" (formula "4"))
                                       (rule "allLeft" (formula "22") (inst "t=x_0"))
                                       (rule "replaceKnownSelect_taclet100102000000_13" (formula "22") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0100102000000_14" (formula "22") (term "0,1"))
                                       (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                       (rule "leq_literals" (formula "22") (term "0,1,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "3"))
                                       (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                       (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                       (rule "leq_literals" (formula "22") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "22"))
                                       (rule "allLeft" (formula "15") (inst "t=x_0"))
                                       (rule "inEqSimp_contradInEq1" (formula "15") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "15") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "inEqSimp_contradInEq0" (formula "15") (term "0") (ifseqformula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "15") (term "0,0"))
                                       (rule "polySimp_pullOutFactor1b" (formula "15") (term "0,0,0"))
                                       (rule "add_literals" (formula "15") (term "1,1,0,0,0"))
                                       (rule "times_zero_1" (formula "15") (term "1,0,0,0"))
                                       (rule "add_zero_right" (formula "15") (term "0,0,0"))
                                       (rule "leq_literals" (formula "15") (term "0,0"))
                                       (builtin "One Step Simplification" (formula "15"))
                                       (rule "allLeft" (formula "25") (inst "t=x_0"))
                                       (rule "replaceKnownSelect_taclet100102000000_13" (formula "25") (term "0,1"))
                                       (rule "replaceKnownAuxiliaryConstant_taclet0100102000000_14" (formula "25") (term "0,1"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "0,0") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "25") (term "0,0,0"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "25") (term "1") (ifseqformula "5"))
                                       (rule "inEqSimp_homoInEq1" (formula "25") (term "0,1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "25") (term "0,0,1"))
                                       (rule "add_literals" (formula "25") (term "1,1,0,0,1"))
                                       (rule "times_zero_1" (formula "25") (term "1,0,0,1"))
                                       (rule "add_zero_right" (formula "25") (term "0,0,1"))
                                       (rule "leq_literals" (formula "25") (term "0,1"))
                                       (builtin "One Step Simplification" (formula "25"))
                                       (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "25"))
                                       (rule "andLeft" (formula "1"))
                                       (rule "inEqSimp_homoInEq1" (formula "1"))
                                       (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                       (rule "add_literals" (formula "1") (term "1,1,0"))
                                       (rule "times_zero_1" (formula "1") (term "1,0"))
                                       (rule "add_zero_right" (formula "1") (term "0"))
                                       (rule "leq_literals" (formula "1"))
                                       (rule "closeFalse" (formula "1"))
                                    )
                                    (branch "x_0 >= 0 FALSE"
                                       (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                       (rule "hideAuxiliaryEq" (formula "4"))
                                       (rule "inEqSimp_geqRight" (formula "30"))
                                       (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                       (rule "add_zero_right" (formula "1") (term "0,0"))
                                       (rule "inEqSimp_homoInEq0" (formula "5"))
                                       (rule "polySimp_addComm1" (formula "5") (term "0"))
                                       (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                       (rule "mul_literals" (formula "1") (term "1"))
                                       (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                       (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                       (rule "polySimp_rightDist" (formula "5") (term "1"))
                                       (rule "mul_literals" (formula "5") (term "0,1"))
                                       (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                       (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                       (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                       (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                       (rule "mul_literals" (formula "4") (term "0,0,0"))
                                       (rule "polySimp_addComm1" (formula "4") (term "0"))
                                       (rule "add_literals" (formula "4") (term "0,0"))
                                       (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                       (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                       (rule "polySimp_elimOne" (formula "4") (term "0"))
                                       (rule "inEqSimp_contradInEq0" (formula "21") (ifseqformula "4"))
                                       (rule "qeq_literals" (formula "21") (term "0"))
                                       (builtin "One Step Simplification" (formula "21"))
                                       (rule "closeFalse" (formula "21"))
                                    )
                                 )
                              )
                              (branch "CUT: array.length >= 1 + result FALSE"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "true_left" (formula "25"))
                                 (rule "inEqSimp_geqRight" (formula "25"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "add_zero_left" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "10") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "10") (term "0,0"))
                                 (rule "mul_literals" (formula "10") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "10") (term "0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "10"))
                                 (rule "polySimp_mulLiterals" (formula "10") (term "0"))
                                 (rule "polySimp_elimOne" (formula "10") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "10") (ifseqformula "18"))
                                 (rule "andLeft" (formula "10"))
                                 (rule "inEqSimp_homoInEq1" (formula "10"))
                                 (rule "polySimp_mulComm0" (formula "10") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "10") (term "1,0"))
                                 (rule "mul_literals" (formula "10") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "10") (term "0"))
                                 (rule "polySimp_addComm0" (formula "10") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "10") (term "0"))
                                 (rule "add_literals" (formula "10") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "10") (term "1,0"))
                                 (rule "add_literals" (formula "10") (term "0"))
                                 (rule "leq_literals" (formula "10"))
                                 (rule "closeFalse" (formula "10"))
                              )
                           )
                           (branch "CUT: array.length >= 2 + to FALSE"
                              (builtin "One Step Simplification" (formula "10"))
                              (rule "true_left" (formula "10"))
                              (rule "replace_known_right" (formula "28") (term "0,1") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "28"))
                              (rule "allRight" (formula "28") (inst "sk=x_0"))
                              (rule "orRight" (formula "28"))
                              (rule "orRight" (formula "28"))
                              (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "25"))
                              (builtin "One Step Simplification" (formula "18"))
                              (rule "true_left" (formula "18"))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_geqRight" (formula "29"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_geqRight" (formula "29"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "4"))
                              (rule "applyEq" (formula "18") (term "1,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "4") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_homoInEq0" (formula "4"))
                              (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                              (rule "add_literals" (formula "4") (term "1,0"))
                              (rule "times_zero_1" (formula "4") (term "0"))
                              (rule "qeq_literals" (formula "4"))
                              (rule "true_left" (formula "4"))
                              (rule "applyEq" (formula "25") (term "1,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "13"))
                              (rule "polySimp_pullOutFactor1" (formula "13") (term "0"))
                              (rule "add_literals" (formula "13") (term "1,0"))
                              (rule "times_zero_1" (formula "13") (term "0"))
                              (rule "leq_literals" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "24") (term "1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "26") (term "0,0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "26") (term "0"))
                              (rule "polySimp_mulComm0" (formula "26") (term "1,0,0"))
                              (rule "polySimp_rightDist" (formula "26") (term "1,0,0"))
                              (rule "mul_literals" (formula "26") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "26") (term "0,0"))
                              (rule "polySimp_addComm1" (formula "26") (term "0,0,0"))
                              (rule "add_literals" (formula "26") (term "0,0,0,0"))
                              (rule "add_zero_left" (formula "26") (term "0,0,0"))
                              (rule "applyEq" (formula "11") (term "0") (ifseqformula "12"))
                              (rule "applyEq" (formula "16") (term "1,0") (ifseqformula "12"))
                              (rule "inEqSimp_sepNegMonomial0" (formula "26") (term "0"))
                              (rule "polySimp_mulLiterals" (formula "26") (term "0,0"))
                              (rule "polySimp_elimOne" (formula "26") (term "0,0"))
                              (rule "replace_known_left" (formula "26") (term "0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "11"))
                              (rule "mul_literals" (formula "11") (term "1"))
                              (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                              (rule "leq_literals" (formula "11") (term "0"))
                              (builtin "One Step Simplification" (formula "11"))
                              (rule "true_left" (formula "11"))
                              (rule "seqDef_induction_upper_concrete" (formula "15") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,1"))
                              (rule "inEqSimp_subsumption1" (formula "15") (term "0,1,1") (ifseqformula "4"))
                              (rule "leq_literals" (formula "15") (term "0,0,1,1"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "seqDef_induction_upper_concrete" (formula "23") (term "1"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,1"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,1") (ifseqformula "4"))
                              (rule "leq_literals" (formula "23") (term "0,0,1,1"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "seqDef_induction_upper_concrete" (formula "15") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "15") (term "0,1,0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "15") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "15"))
                              (rule "seqDef_induction_upper_concrete" (formula "23") (term "0"))
                              (rule "inEqSimp_commuteLeq" (formula "23") (term "0,1,0"))
                              (rule "inEqSimp_subsumption1" (formula "23") (term "0,1,0") (ifseqformula "4"))
                              (rule "leq_literals" (formula "23") (term "0,0,1,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_6"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "3") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "3") (term "0,0,1,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                              (rule "inEqSimp_contradInEq1" (formula "3") (term "1,0,0") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq1" (formula "3") (term "0,1,0,0"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "polySimp_rightDist" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "mul_literals" (formula "3") (term "0,1,0,0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "3") (term "0,0,1,0,0"))
                              (rule "polySimp_addComm1" (formula "3") (term "0,0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "0,0,0,0,1,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0,1,0,0"))
                              (rule "add_literals" (formula "3") (term "1,1,0,0,1,0,0"))
                              (rule "times_zero_1" (formula "3") (term "1,0,0,1,0,0"))
                              (rule "add_zero_right" (formula "3") (term "0,0,1,0,0"))
                              (rule "leq_literals" (formula "3") (term "0,1,0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "9")))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "1")))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0"))
                              (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=arr_7"))
                              (rule "applyEq" (formula "25") (term "0,1,1") (ifseqformula "16"))
                              (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
                              (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "29")) (ifInst ""  (formula "9")))
                              (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "narrowSelectArrayType" (formula "16") (term "1,0") (ifseqformula "13") (ifseqformula "29"))
                              (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "6") (ifseqformula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                              (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                              (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0,0"))
                              (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
                              (rule "times_zero_1" (formula "16") (term "0,1,0,0"))
                              (rule "qeq_literals" (formula "16") (term "1,0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "16") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "16"))
                              (rule "applyEqReverse" (formula "25") (term "0,1,1") (ifseqformula "16"))
                              (rule "hideAuxiliaryEq" (formula "16"))
                              (rule "pullOutSelect" (formula "24") (term "0,1,0") (inst "selectSK=arr_8"))
                              (rule "simplifySelectOfAnonEQ" (formula "24") (ifseqformula "22"))
                              (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "29")))
                              (rule "replaceKnownSelect_taclet1102000000_14" (formula "24") (term "2,0"))
                              (rule "replaceKnownAuxiliaryConstant_taclet1102000000_15" (formula "24") (term "2,0"))
                              (rule "selectCreatedOfAnonAsFormulaEQ" (formula "24") (term "0,1,0,0") (ifseqformula "14"))
                              (rule "replace_known_left" (formula "24") (term "0,0,1,0,0") (ifseqformula "9"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "elementOfArrayRangeConcrete" (formula "24") (term "0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "narrowSelectArrayType" (formula "24") (term "1,0") (ifseqformula "21") (ifseqformula "29"))
                              (rule "inEqSimp_commuteLeq" (formula "24") (term "0,0,0"))
                              (rule "inEqSimp_subsumption1" (formula "24") (term "0,0,0") (ifseqformula "5"))
                              (rule "leq_literals" (formula "24") (term "0,0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "18"))
                              (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                              (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                              (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                              (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                              (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                              (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                              (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                              (rule "leq_literals" (formula "24") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "24"))
                              (rule "applyEqReverse" (formula "25") (term "0,1,0") (ifseqformula "24"))
                              (rule "hideAuxiliaryEq" (formula "24"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "0,0"))
                              (rule "mul_literals" (formula "2") (term "0,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                              (rule "add_literals" (formula "19") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "19") (term "1,0,0"))
                              (rule "add_zero_right" (formula "19") (term "0,0"))
                              (rule "qeq_literals" (formula "19") (term "0"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "true_left" (formula "19"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "x_0 >= 0 TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                 (rule "times_zero_1" (formula "4") (term "0,0"))
                                 (rule "add_zero_left" (formula "4") (term "0"))
                                 (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "7"))
                                 (rule "leq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "true_left" (formula "4"))
                                 (rule "allLeft" (formula "20") (inst "t=to"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,1,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,1,0"))
                                 (rule "leq_literals" (formula "20") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_contradInEq1" (formula "20") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "20") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "20") (term "0,0,0"))
                                 (rule "leq_literals" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "pullOutSelect" (formula "20") (term "0") (inst "selectSK=arr_9"))
                                 (rule "simplifySelectOfAnonEQ" (formula "20") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "20") (ifInst ""  (formula "30")) (ifInst ""  (formula "10")))
                                 (rule "elementOfArrayRangeConcrete" (formula "20") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_commuteLeq" (formula "20") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "20") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "20") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "20") (term "1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "20") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "20") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "21") (term "1,1"))
                                 (rule "mul_literals" (formula "21") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "21") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "20") (term "0,0") (ifseqformula "6"))
                                 (rule "leq_literals" (formula "20") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "20"))
                                 (rule "applyEqReverse" (formula "21") (term "1,1") (ifseqformula "20"))
                                 (rule "hideAuxiliaryEq" (formula "20"))
                                 (rule "inEqSimp_homoInEq0" (formula "20"))
                                 (rule "polySimp_addComm1" (formula "20") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "20"))
                                 (rule "polySimp_mulComm0" (formula "20") (term "1"))
                                 (rule "polySimp_rightDist" (formula "20") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "20") (term "1,1"))
                                 (rule "mul_literals" (formula "20") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "20") (term "1,1"))
                                 (rule "allLeft" (formula "21") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet1102000000_13" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01102000000_18" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "5") (ifseqformula "21"))
                                 (rule "andLeft" (formula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "5"))
                                 (rule "polySimp_pullOutFactor1b" (formula "5") (term "0"))
                                 (rule "add_literals" (formula "5") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "5") (term "1,0"))
                                 (rule "add_zero_right" (formula "5") (term "0"))
                                 (rule "leq_literals" (formula "5"))
                                 (rule "closeFalse" (formula "5"))
                              )
                              (branch "x_0 >= 0 FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_geqRight" (formula "26"))
                                 (rule "times_zero_1" (formula "1") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "1") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                                 (rule "mul_literals" (formula "1") (term "1"))
                                 (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "1"))
                                 (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                                 (rule "mul_literals" (formula "4") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "4") (term "0"))
                                 (rule "add_literals" (formula "4") (term "0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                                 (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                                 (rule "polySimp_elimOne" (formula "4") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "19"))
                                 (rule "qeq_literals" (formula "4") (term "0"))
                                 (builtin "One Step Simplification" (formula "4"))
                                 (rule "closeFalse" (formula "4"))
                              )
                           )
                        )
                     )
                     (branch "Show Axiom Satisfiability"
                        (builtin "One Step Simplification" (formula "31"))
                        (rule "closeTrue" (formula "31"))
                     )
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "34"))
                  (rule "closeTrue" (formula "34"))
               )
            )
            (branch "Exceptional Post (sort)"
               (builtin "One Step Simplification" (formula "25"))
               (builtin "One Step Simplification" (formula "28"))
               (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,0,1,0,1,1"))
               (rule "translateJavaAddInt" (formula "25") (term "0,2,1,1,0,1,0,1,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "25") (term "0,2,1,1,0,1,0,1,1,0,1,1"))
               (rule "translateJavaSubInt" (formula "25") (term "1,0,0,1,1,1,0,1,1"))
               (rule "andLeft" (formula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,0") (ifseqformula "25"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "0,1,0") (ifseqformula "13"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "26"))
               (rule "andLeft" (formula "28"))
               (rule "notLeft" (formula "26"))
               (rule "close" (formula "29") (ifseqformula "28"))
            )
            (branch "Pre (sort)"
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "25")) (ifInst ""  (formula "25")))
               (rule "wellFormedAnonEQ" (formula "26") (term "0,1,0") (ifseqformula "13"))
               (rule "selectCreatedOfAnonAsFormulaEQ" (formula "26") (term "1,1,0") (ifseqformula "13"))
               (rule "translateJavaAddInt" (formula "26") (term "0,2,1,1,0,1,0,1,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "26") (term "0,0,1"))
               (rule "translateJavaSubInt" (formula "26") (term "0,2,1,1,0,1,0,1,1,0,0"))
               (rule "translateJavaSubInt" (formula "26") (term "1,0,0,1,1,1,0,0"))
               (rule "translateJavaAddInt" (formula "26") (term "0,1"))
               (rule "replace_known_left" (formula "26") (term "0,1,1,0") (ifseqformula "5"))
               (builtin "One Step Simplification" (formula "26") (ifInst ""  (formula "2")) (ifInst ""  (formula "12")))
               (rule "polySimp_elimSub" (formula "26") (term "0,0,1"))
               (rule "polySimp_elimSub" (formula "26") (term "1,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "26") (term "1,1,0,0,1,1,1,0"))
               (rule "polySimp_elimSub" (formula "26") (term "0,2,1,1,0,1,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,2,1,1,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,2,1,1,0,1,0,1,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,2,1,1,0,1,0,1,1,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,2,1,1,0,1,0,1,1,1,0"))
               (rule "replaceKnownSelect_taclet000_0" (formula "26") (term "1,1,0,1,0,1,1,1,0"))
               (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "26") (term "1,1,0,1,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,1"))
               (rule "polySimp_addComm0" (formula "26") (term "1,0,0,1,1,1,0"))
               (rule "polySimp_addComm0" (formula "26") (term "0,2,1,1,0,1,0,1,1,0"))
               (rule "replaceKnownSelect_taclet000_3" (formula "26") (term "1,1,0,1,0,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1"))
               (rule "add_literals" (formula "26") (term "0,0,0,1"))
               (rule "add_zero_left" (formula "26") (term "0,0,1"))
               (rule "polySimp_addComm0" (formula "26") (term "0,1"))
               (rule "inEqSimp_ltToLeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0,0,0"))
               (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "21") (term "0"))
               (rule "mul_literals" (formula "21") (term "1,0,0,0"))
               (rule "add_literals" (formula "21") (term "0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "1"))
               (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "1") (term "0"))
               (rule "inEqSimp_ltToLeq" (formula "21") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,1"))
               (rule "polySimp_addComm1" (formula "21") (term "0,1,0,1"))
               (rule "inEqSimp_ltToLeq" (formula "23") (term "0"))
               (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
               (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
               (rule "inEqSimp_gtToGeq" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0"))
               (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "9"))
               (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "9") (term "0"))
               (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "1,0,0,0"))
               (rule "add_literals" (formula "10") (term "0,0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,0,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "26") (term "0,0,1,1,0"))
               (rule "mul_literals" (formula "26") (term "1,0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
               (rule "add_literals" (formula "23") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "23") (term "0,0"))
               (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
               (rule "add_literals" (formula "11") (term "0,0,0,0"))
               (rule "polySimp_addComm1" (formula "11") (term "0,0"))
               (rule "inEqSimp_ltToLeq" (formula "26") (term "0,0,1,1,1,0"))
               (rule "polySimp_rightDist" (formula "26") (term "1,0,0,0,0,1,1,1,0"))
               (rule "mul_literals" (formula "26") (term "0,1,0,0,0,0,1,1,1,0"))
               (rule "inEqSimp_gtToGeq" (formula "26") (term "1,0,1,0,1,1,0"))
               (rule "polySimp_mulComm0" (formula "26") (term "1,0,0,1,0,1,0,1,1,0"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,1,0"))
               (rule "add_zero_left" (formula "26") (term "0,0,0,1,0"))
               (rule "measuredByCheck" (formula "26") (term "1") (ifseqformula "6"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,1,0"))
               (rule "polySimp_addComm1" (formula "26") (term "0,0,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,1,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0,0,1,0,1,1,0"))
               (rule "inEqSimp_commuteLeq" (formula "26") (term "0,0"))
               (rule "replace_known_left" (formula "26") (term "0,0") (ifseqformula "7"))
               (builtin "One Step Simplification" (formula "26"))
               (rule "polySimp_addAssoc" (formula "26") (term "0,0,0,0,1,1,0"))
               (rule "add_literals" (formula "26") (term "0,0,0,0,0,1,1,0"))
               (rule "precOfInt" (formula "26") (term "1"))
               (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0,0"))
               (rule "add_literals" (formula "20") (term "1,1,0,0,0,0"))
               (rule "times_zero_1" (formula "20") (term "1,0,0,0,0"))
               (rule "add_zero_right" (formula "20") (term "0,0,0,0"))
               (rule "qeq_literals" (formula "20") (term "0,0,0"))
               (builtin "One Step Simplification" (formula "20"))
               (rule "applyEqReverse" (formula "21") (term "1,0,0,1,0,1") (ifseqformula "20"))
               (rule "applyEqReverse" (formula "26") (term "0,1,0,0,1,0,1,0,1,0") (ifseqformula "20"))
               (rule "hideAuxiliaryEq" (formula "20"))
               (rule "inEqSimp_homoInEq0" (formula "21") (term "0,0,0"))
               (rule "polySimp_addComm1" (formula "21") (term "0,0,0,0"))
               (rule "inEqSimp_homoInEq0" (formula "21") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,1,0,0"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,1,0,0"))
               (rule "mul_literals" (formula "21") (term "0,1,0,1,0,0"))
               (rule "polySimp_addAssoc" (formula "21") (term "0,1,0,0"))
               (rule "polySimp_addComm0" (formula "21") (term "0,0,1,0,0"))
               (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0,0"))
               (rule "add_literals" (formula "21") (term "1,1,0,1,0,0"))
               (rule "times_zero_1" (formula "21") (term "1,0,1,0,0"))
               (rule "add_zero_right" (formula "21") (term "0,1,0,0"))
               (rule "qeq_literals" (formula "21") (term "1,0,0"))
               (builtin "One Step Simplification" (formula "21"))
               (rule "applyEqReverse" (formula "22") (term "1,1,0,1") (ifseqformula "21"))
               (rule "hideAuxiliaryEq" (formula "21"))
               (rule "inEqSimp_ltToLeq" (formula "24") (term "1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "0,1,0,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,0,1,0,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,0,1,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
               (rule "polySimp_addComm1" (formula "24") (term "0,1,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,0,1,1"))
               (rule "add_zero_left" (formula "24") (term "0,0,0,1,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,1"))
               (rule "polySimp_pullOutFactor1" (formula "24") (term "0,0,0,1,1"))
               (rule "add_literals" (formula "24") (term "1,0,0,0,1,1"))
               (rule "times_zero_1" (formula "24") (term "0,0,0,1,1"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,1"))
               (rule "inEqSimp_homoInEq0" (formula "24") (term "0,1"))
               (rule "times_zero_2" (formula "24") (term "1,0,0,1"))
               (rule "add_zero_right" (formula "24") (term "0,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "0,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "0"))
               (rule "mul_literals" (formula "20") (term "1,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
               (rule "inEqSimp_sepNegMonomial0" (formula "1"))
               (rule "polySimp_mulLiterals" (formula "1") (term "0"))
               (rule "polySimp_elimOne" (formula "1") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "9"))
               (rule "polySimp_mulLiterals" (formula "9") (term "0"))
               (rule "polySimp_elimOne" (formula "9") (term "0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
               (rule "mul_literals" (formula "10") (term "1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "21") (term "0"))
               (rule "polySimp_mulLiterals" (formula "21") (term "0,0"))
               (rule "polySimp_elimOne" (formula "21") (term "0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
               (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
               (rule "polySimp_elimOne" (formula "11") (term "0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "0,0,1,0"))
               (rule "mul_literals" (formula "24") (term "1,0,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "0,0,1,1,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,0,0,1,1,0"))
               (rule "polySimp_elimOne" (formula "24") (term "0,0,0,1,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "1,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "0,1,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,1,0,1,0"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,1,0,1,0,1,0"))
               (rule "polySimp_rightDist" (formula "24") (term "1,1,0,1,0,1,0"))
               (rule "mul_literals" (formula "24") (term "0,1,1,0,1,0,1,0"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0,1,0,1,0"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0,1,0,1,0"))
               (rule "inEqSimp_sepNegMonomial0" (formula "24") (term "1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "0,1,1"))
               (rule "replace_known_left" (formula "24") (term "1,1") (ifseqformula "17"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1"))
               (rule "replace_known_left" (formula "24") (term "1") (ifseqformula "16"))
               (builtin "One Step Simplification" (formula "24"))
               (rule "nnf_imp2or" (formula "18") (term "0"))
               (rule "nnf_imp2or" (formula "11") (term "0,1"))
               (rule "nnf_imp2or" (formula "21") (term "0,1"))
               (rule "nnf_imp2or" (formula "19") (term "0"))
               (rule "nnf_imp2or" (formula "10") (term "0,1"))
               (rule "nnf_imp2or" (formula "20") (term "0,1"))
               (rule "nnf_notAnd" (formula "18") (term "0,0"))
               (rule "inEqSimp_notLeq" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "18") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,1,0,0"))
               (rule "inEqSimp_notGeq" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "18") (term "0,0,0"))
               (rule "polySimp_mulComm0" (formula "18") (term "1,0,0,0"))
               (rule "polySimp_rightDist" (formula "18") (term "1,0,0,0"))
               (rule "mul_literals" (formula "18") (term "0,1,0,0,0"))
               (rule "polySimp_mulLiterals" (formula "18") (term "1,1,0,0,0"))
               (rule "polySimp_elimOne" (formula "18") (term "1,1,0,0,0"))
               (rule "nnf_notAnd" (formula "19") (term "0,0"))
               (rule "inEqSimp_notGeq" (formula "19") (term "0,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,0,0,0,0,0"))
               (rule "polySimp_addAssoc" (formula "19") (term "0,0,0,0,0"))
               (rule "add_literals" (formula "19") (term "0,0,0,0,0,0"))
               (rule "add_zero_left" (formula "19") (term "0,0,0,0,0"))
               (rule "inEqSimp_sepPosMonomial0" (formula "19") (term "0,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,0,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,0,0,0"))
               (rule "inEqSimp_notLeq" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,1,0,0"))
               (rule "inEqSimp_sepPosMonomial1" (formula "19") (term "1,0,0"))
               (rule "polySimp_mulComm0" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_rightDist" (formula "19") (term "1,1,0,0"))
               (rule "polySimp_mulLiterals" (formula "19") (term "1,1,1,0,0"))
               (rule "mul_literals" (formula "19") (term "0,1,1,0,0"))
               (rule "polySimp_elimOne" (formula "19") (term "1,1,1,0,0"))
               (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
               (rule "nnf_notAnd" (formula "21") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "21") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "21") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "21") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "21") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "21") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "21") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "21") (term "1,1,1,0,0,1"))
               (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
               (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
               (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
               (rule "nnf_notAnd" (formula "20") (term "0,0,1"))
               (rule "inEqSimp_notLeq" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,1,0,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "20") (term "1,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,1,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,1,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,1,0,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,1,0,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,1,0,0,1"))
               (rule "inEqSimp_notGeq" (formula "20") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,0,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "20") (term "0,0,0,1"))
               (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0,1"))
               (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0,1"))
               (rule "mul_literals" (formula "20") (term "0,1,0,0,0,1"))
               (rule "polySimp_mulLiterals" (formula "20") (term "1,1,0,0,0,1"))
               (rule "polySimp_elimOne" (formula "20") (term "1,1,0,0,0,1"))
               (rule "nnf_imp2or" (formula "24") (term "0,1,0,1"))
               (rule "nnf_imp2or" (formula "24") (term "0,1,0,1,1"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,1"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,1"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,1"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0,1"))
               (rule "nnf_notAnd" (formula "24") (term "0,0,1,0,1,1"))
               (rule "inEqSimp_notLeq" (formula "24") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,1,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,1,0,0,1,0,1,1"))
               (rule "polySimp_addAssoc" (formula "24") (term "0,0,1,0,0,1,0,1,1"))
               (rule "add_literals" (formula "24") (term "0,0,0,1,0,0,1,0,1,1"))
               (rule "add_zero_left" (formula "24") (term "0,0,1,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial1" (formula "24") (term "1,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,1,0,1,1"))
               (rule "inEqSimp_notGeq" (formula "24") (term "0,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0,0,1,0,1,1"))
               (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "0,0,0,1,0,1,1"))
               (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,1,0,1,1"))
               (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,1,0,1,1"))
               (rule "mul_literals" (formula "24") (term "0,1,0,0,0,1,0,1,1"))
               (rule "polySimp_mulLiterals" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
               (rule "polySimp_elimOne" (formula "24") (term "1,1,0,0,0,1,0,1,1"))
               (rule "Class_invariant_axiom_for_Quicksort" (formula "24") (term "1,1,1") (inst "sk=sk_2") (ifseqformula "4"))
               (branch "Use Axiom"
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "cut_direct" (formula "20") (term "0"))
                  (branch "CUT: from >= 1 TRUE"
                     (builtin "One Step Simplification" (formula "21"))
                     (rule "replace_known_left" (formula "10") (term "0") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "replace_known_left" (formula "25") (term "0,0,1") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "inEqSimp_subsumption1" (formula "7") (ifseqformula "20"))
                     (rule "leq_literals" (formula "7") (term "0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "cut_direct" (formula "10") (term "0"))
                     (branch "CUT: array.length >= 2 + to TRUE"
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_left" (formula "22") (term "0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "8") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "8") (term "0"))
                        (rule "polySimp_mulComm0" (formula "8") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "8") (term "1,0,0"))
                        (rule "mul_literals" (formula "8") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "8") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "8") (term "0,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "8") (term "0,0"))
                        (rule "add_literals" (formula "8") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "8") (term "1,0,0"))
                        (rule "add_literals" (formula "8") (term "0,0"))
                        (rule "qeq_literals" (formula "8") (term "0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "cut_direct" (formula "24") (term "0"))
                        (branch "CUT: array.length >= result TRUE"
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "andRight" (formula "25"))
                           (branch
                              (rule "allRight" (formula "25") (inst "sk=x_0"))
                              (rule "orRight" (formula "25"))
                              (rule "orRight" (formula "25"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "27"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "4"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                              (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "x_0 <= to TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "22") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet0000020000_6" (formula "22") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000020000_7" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (term "1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "allLeft" (formula "26") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet0000020000_6" (formula "26") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00000020000_7" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "inEqSimp_homoInEq1" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0"))
                                 (rule "leq_literals" (formula "26"))
                                 (rule "closeFalse" (formula "26"))
                              )
                              (branch "x_0 <= to FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                           (branch
                              (rule "impRight" (formula "25"))
                              (rule "allRight" (formula "26") (inst "sk=x_0"))
                              (rule "orRight" (formula "26"))
                              (rule "orRight" (formula "26"))
                              (rule "inEqSimp_leqRight" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_leqRight" (formula "27"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "add_zero_left" (formula "1") (term "0,0"))
                              (rule "inEqSimp_geqRight" (formula "28"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                              (rule "polySimp_mulComm0" (formula "3") (term "1"))
                              (rule "polySimp_rightDist" (formula "3") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                              (rule "mul_literals" (formula "3") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                              (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                              (rule "add_literals" (formula "5") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "5") (term "1,0,0"))
                              (rule "add_zero_right" (formula "5") (term "0,0"))
                              (rule "qeq_literals" (formula "5") (term "0"))
                              (builtin "One Step Simplification" (formula "5"))
                              (rule "true_left" (formula "5"))
                              (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                              (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                              (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "28")) (ifInst ""  (formula "10")))
                              (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                              (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                              (builtin "One Step Simplification" (formula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "4"))
                              (rule "polySimp_addComm1" (formula "4") (term "0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                              (rule "polySimp_mulComm0" (formula "4") (term "1"))
                              (rule "polySimp_rightDist" (formula "4") (term "1"))
                              (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                              (rule "mul_literals" (formula "4") (term "0,1"))
                              (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                              (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                              (rule "polySimp_addAssoc" (formula "2") (term "0"))
                              (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                              (rule "polySimp_mulComm0" (formula "2") (term "1"))
                              (rule "polySimp_rightDist" (formula "2") (term "1"))
                              (rule "mul_literals" (formula "2") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                              (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "2"))
                              (rule "inEqSimp_homoInEq0" (formula "21") (term "0"))
                              (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0"))
                              (rule "add_literals" (formula "21") (term "1,1,0,0"))
                              (rule "times_zero_1" (formula "21") (term "1,0,0"))
                              (rule "add_zero_right" (formula "21") (term "0,0"))
                              (rule "qeq_literals" (formula "21") (term "0"))
                              (builtin "One Step Simplification" (formula "21"))
                              (rule "true_left" (formula "21"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "x_0 <= to TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "8"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "22") (inst "t=result"))
                                 (rule "replaceKnownSelect_taclet000_0" (formula "22") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,1,0"))
                                 (rule "leq_literals" (formula "22") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                                 (rule "add_literals" (formula "22") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "0,1"))
                                 (rule "qeq_literals" (formula "22") (term "1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "true_left" (formula "22"))
                                 (rule "allLeft" (formula "22") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet1000020000_6" (formula "22") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet01000020000_7" (formula "22") (term "0,1"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "0,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0,0,0,0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "22") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq1" (formula "22") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,1"))
                                 (rule "add_literals" (formula "22") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "22") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "22") (term "0,0,1"))
                                 (rule "leq_literals" (formula "22") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "22"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm1" (formula "22") (term "0,0"))
                                 (rule "add_literals" (formula "22") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                              (branch "x_0 <= to FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "1"))
                                 (rule "andLeft" (formula "22"))
                                 (rule "inEqSimp_homoInEq1" (formula "22"))
                                 (rule "polySimp_mulComm0" (formula "22") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "22") (term "1,0"))
                                 (rule "mul_literals" (formula "22") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "22") (term "0"))
                                 (rule "polySimp_addComm0" (formula "22") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "22") (term "0"))
                                 (rule "add_literals" (formula "22") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "22") (term "1,0"))
                                 (rule "add_zero_right" (formula "22") (term "0"))
                                 (rule "leq_literals" (formula "22"))
                                 (rule "closeFalse" (formula "22"))
                              )
                           )
                        )
                        (branch "CUT: array.length >= result FALSE"
                           (builtin "One Step Simplification" (formula "25"))
                           (rule "false_right" (formula "25"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "8") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "8") (term "0,0"))
                           (rule "add_zero_left" (formula "8") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                           (rule "mul_literals" (formula "8") (term "1"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "11"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                     )
                     (branch "CUT: array.length >= 2 + to FALSE"
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_right" (formula "20") (term "0") (ifseqformula "21"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "true_left" (formula "20"))
                        (rule "inEqSimp_geqRight" (formula "20"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_antiSymm" (formula "9") (ifseqformula "1"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "9") (term "0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "9"))
                        (rule "polySimp_pullOutFactor1" (formula "9") (term "0"))
                        (rule "add_literals" (formula "9") (term "1,0"))
                        (rule "times_zero_1" (formula "9") (term "0"))
                        (rule "leq_literals" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "8"))
                        (rule "applyEq" (formula "13") (term "1,0") (ifseqformula "8"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                        (rule "applyEq" (formula "22") (term "0,0,1,1") (ifseqformula "8"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,1,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "7"))
                        (rule "mul_literals" (formula "7") (term "1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "22") (term "0,1,1"))
                        (rule "polySimp_mulLiterals" (formula "22") (term "0,0,1,1"))
                        (rule "polySimp_elimOne" (formula "22") (term "0,0,1,1"))
                        (rule "replace_known_left" (formula "22") (term "0,1,1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "inEqSimp_subsumption1" (formula "22") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "22") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,0,0"))
                        (rule "add_literals" (formula "22") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "22") (term "1,0,0,0"))
                        (rule "add_literals" (formula "22") (term "0,0,0"))
                        (rule "qeq_literals" (formula "22") (term "0,0"))
                        (builtin "One Step Simplification" (formula "22"))
                        (rule "seqDef_induction_upper_concrete" (formula "13") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,1"))
                        (rule "seqDef_induction_upper_concrete" (formula "13") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,1,0"))
                        (rule "pullOutSelect" (formula "13") (term "0,1,1,0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "13") (ifseqformula "11"))
                        (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "22")) (ifInst ""  (formula "5")))
                        (rule "elementOfArrayRangeConcrete" (formula "13") (term "0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "narrowSelectArrayType" (formula "13") (term "1,0") (ifseqformula "10") (ifseqformula "22"))
                        (rule "narrowSelectArrayType" (formula "13") (term "2,0") (ifseqformula "2") (ifseqformula "22"))
                        (rule "inEqSimp_commuteLeq" (formula "13") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "1,0,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "0,1,0,0"))
                        (rule "qeq_literals" (formula "13") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_subsumption1" (formula "13") (term "0,0") (ifseqformula "1"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0,0,0"))
                        (rule "qeq_literals" (formula "13") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "applyEqReverse" (formula "14") (term "0,1,1,0") (ifseqformula "13"))
                        (rule "hideAuxiliaryEq" (formula "13"))
                        (rule "andRight" (formula "22"))
                        (branch
                           (rule "allRight" (formula "22") (inst "sk=x_0"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "3"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "9")))
                           (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_commuteLeq" (formula "4"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0"))
                           (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "ifthenelse_split" (formula "18") (term "1,1"))
                           (branch "to >= 0 TRUE"
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "x_0 <= to TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                                 (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                                 (rule "polySimp_elimOne" (formula "2") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "2") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "2") (term "0,0"))
                                 (rule "add_literals" (formula "2") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "2") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "2") (term "0,0"))
                                 (rule "qeq_literals" (formula "2") (term "0"))
                                 (builtin "One Step Simplification" (formula "2"))
                                 (rule "true_left" (formula "2"))
                                 (rule "allLeft" (formula "23") (inst "t=to"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                 (rule "leq_literals" (formula "23") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                 (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                                 (rule "hideAuxiliaryEq" (formula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "allLeft" (formula "13") (inst "t=to"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "allLeft" (formula "21") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet010020000_8" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00010020000_9" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "3"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,0"))
                                 (rule "leq_literals" (formula "21") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "allLeft" (formula "26") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet010020000_8" (formula "26") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00010020000_9" (formula "26") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "1,0") (ifseqformula "4"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "26") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq0" (formula "26") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "26") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0,0,1"))
                                 (rule "add_literals" (formula "26") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "26") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "26") (term "0,0,1"))
                                 (rule "leq_literals" (formula "26") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "26"))
                                 (rule "inEqSimp_contradInEq1" (formula "26") (ifseqformula "2"))
                                 (rule "andLeft" (formula "26"))
                                 (rule "inEqSimp_homoInEq1" (formula "26"))
                                 (rule "polySimp_mulComm0" (formula "26") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "26") (term "1,0"))
                                 (rule "mul_literals" (formula "26") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "26") (term "0"))
                                 (rule "polySimp_addComm0" (formula "26") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "26") (term "0"))
                                 (rule "add_literals" (formula "26") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "26") (term "1,0"))
                                 (rule "add_zero_right" (formula "26") (term "0"))
                                 (rule "leq_literals" (formula "26"))
                                 (rule "closeFalse" (formula "26"))
                              )
                              (branch "x_0 <= to FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_commuteGeq" (formula "5"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "to >= 0 FALSE"
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                              (rule "applyEq" (formula "21") (term "0") (ifseqformula "13"))
                              (rule "inEqSimp_commuteGeq" (formula "21"))
                              (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "20") (term "1,1") (ifseqformula "13"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "applyEq" (formula "15") (term "1,1,1,0,0") (ifseqformula "12"))
                              (rule "add_literals" (formula "15") (term "1,1,0,0"))
                              (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "22") (term "1,1,1,0,0") (ifseqformula "12"))
                              (rule "add_literals" (formula "22") (term "1,1,0,0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "12"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "12"))
                              (rule "add_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_contradInEq1" (formula "6") (ifseqformula "22"))
                              (rule "qeq_literals" (formula "6") (term "0"))
                              (builtin "One Step Simplification" (formula "6"))
                              (rule "closeFalse" (formula "6"))
                           )
                        )
                        (branch
                           (rule "allRight" (formula "22") (inst "sk=x_0"))
                           (rule "orRight" (formula "22"))
                           (rule "orRight" (formula "22"))
                           (rule "inEqSimp_leqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "23"))
                           (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                           (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "add_zero_left" (formula "1") (term "0,0"))
                           (rule "inEqSimp_geqRight" (formula "24"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_4"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "15"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "25")) (ifInst ""  (formula "9")))
                           (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                           (rule "polySimp_mulComm0" (formula "2") (term "0,0"))
                           (rule "polySimp_addAssoc" (formula "2") (term "0"))
                           (rule "polySimp_addComm0" (formula "2") (term "0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "19") (ifseqformula "2"))
                           (rule "inEqSimp_homoInEq0" (formula "19") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0"))
                           (rule "qeq_literals" (formula "19") (term "0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "true_left" (formula "19"))
                           (rule "ifthenelse_split" (formula "18") (term "1,1"))
                           (branch "to >= 0 TRUE"
                              (rule "replace_known_left" (formula "19") (term "0,1,0") (ifseqformula "18"))
                              (builtin "One Step Simplification" (formula "19"))
                              (rule "inEqSimp_subsumption1" (formula "12") (ifseqformula "18"))
                              (rule "leq_literals" (formula "12") (term "0"))
                              (builtin "One Step Simplification" (formula "12"))
                              (rule "true_left" (formula "12"))
                              (rule "ifthenelse_split" (formula "4") (term "0"))
                              (branch "x_0 <= to TRUE"
                                 (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                                 (rule "hideAuxiliaryEq" (formula "5"))
                                 (rule "inEqSimp_homoInEq0" (formula "5"))
                                 (rule "polySimp_addComm1" (formula "5") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                                 (rule "polySimp_mulComm0" (formula "5") (term "1"))
                                 (rule "polySimp_rightDist" (formula "5") (term "1"))
                                 (rule "mul_literals" (formula "5") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                                 (rule "polySimp_elimOne" (formula "3") (term "1"))
                                 (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                                 (rule "inEqSimp_homoInEq0" (formula "3") (term "0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "3") (term "0,0"))
                                 (rule "add_literals" (formula "3") (term "1,1,0,0"))
                                 (rule "times_zero_1" (formula "3") (term "1,0,0"))
                                 (rule "add_zero_right" (formula "3") (term "0,0"))
                                 (rule "qeq_literals" (formula "3") (term "0"))
                                 (builtin "One Step Simplification" (formula "3"))
                                 (rule "true_left" (formula "3"))
                                 (rule "allLeft" (formula "23") (inst "t=to"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,1,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,1,0"))
                                 (rule "leq_literals" (formula "23") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "23") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "23") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0"))
                                 (rule "leq_literals" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "pullOutSelect" (formula "23") (term "0") (inst "selectSK=arr_5"))
                                 (rule "simplifySelectOfAnonEQ" (formula "23") (ifseqformula "15"))
                                 (builtin "One Step Simplification" (formula "23") (ifInst ""  (formula "27")) (ifInst ""  (formula "10")))
                                 (rule "elementOfArrayRangeConcrete" (formula "23") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_commuteLeq" (formula "23") (term "0,0,0"))
                                 (rule "inEqSimp_homoInEq1" (formula "24"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "1,0,0"))
                                 (rule "polySimp_pullOutFactor1" (formula "23") (term "0,1,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,0,1,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "0,1,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "1,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1"))
                                 (rule "mul_literals" (formula "24") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1"))
                                 (rule "inEqSimp_subsumption1" (formula "23") (term "0,0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq0" (formula "23") (term "0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "23") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "23") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "23") (term "0,0,0,0"))
                                 (rule "qeq_literals" (formula "23") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "23"))
                                 (rule "applyEqReverse" (formula "24") (term "1,1") (ifseqformula "23"))
                                 (rule "hideAuxiliaryEq" (formula "23"))
                                 (rule "inEqSimp_homoInEq0" (formula "23"))
                                 (rule "polySimp_addComm1" (formula "23") (term "0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "23") (term "1"))
                                 (rule "polySimp_rightDist" (formula "23") (term "1"))
                                 (rule "mul_literals" (formula "23") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "23") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "23") (term "1,1"))
                                 (rule "allLeft" (formula "24") (inst "t=result"))
                                 (rule "replaceKnownSelect_taclet000_0" (formula "24") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "24") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "1,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,1,0"))
                                 (rule "inEqSimp_sepPosMonomial0" (formula "24") (term "1,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,1,0"))
                                 (rule "polySimp_mulLiterals" (formula "24") (term "1,1,1,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,1,0"))
                                 (rule "polySimp_elimOne" (formula "24") (term "1,1,1,0"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0,0") (ifseqformula "2"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_addComm1" (formula "24") (term "0,0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "0,0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "inEqSimp_contradInEq1" (formula "24") (term "0") (ifseqformula "19"))
                                 (rule "inEqSimp_homoInEq1" (formula "24") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "24") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "24") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "24") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "24") (term "0,0,0"))
                                 (rule "polySimp_addComm0" (formula "24") (term "0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "24") (term "0,0,0"))
                                 (rule "add_literals" (formula "24") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "24") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "24") (term "0,0,0"))
                                 (rule "leq_literals" (formula "24") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "24"))
                                 (rule "allLeft" (formula "13") (inst "t=to"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,1,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,1,0"))
                                 (rule "leq_literals" (formula "13") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "inEqSimp_contradInEq1" (formula "13") (term "0") (ifseqformula "6"))
                                 (rule "inEqSimp_homoInEq1" (formula "13") (term "0,0"))
                                 (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                                 (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                                 (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                                 (rule "polySimp_addAssoc" (formula "13") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0"))
                                 (rule "add_literals" (formula "13") (term "0,0,0,0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0,0"))
                                 (rule "add_literals" (formula "13") (term "1,1,0,0,0"))
                                 (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                                 (rule "add_zero_right" (formula "13") (term "0,0,0"))
                                 (rule "leq_literals" (formula "13") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "13"))
                                 (rule "allLeft" (formula "21") (inst "t=result"))
                                 (rule "replaceKnownSelect_taclet000_0" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "1,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_homoInEq0" (formula "21") (term "1"))
                                 (rule "polySimp_pullOutFactor1" (formula "21") (term "0,1"))
                                 (rule "add_literals" (formula "21") (term "1,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "0,1"))
                                 (rule "qeq_literals" (formula "21") (term "1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "true_left" (formula "21"))
                                 (rule "allLeft" (formula "21") (inst "t=x_0"))
                                 (rule "replaceKnownSelect_taclet110020000_8" (formula "21") (term "0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet00110020000_9" (formula "21") (term "0,1"))
                                 (rule "inEqSimp_contradInEq0" (formula "21") (term "1,0") (ifseqformula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0,0,1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0,0,1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0,0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0,0,1,0"))
                                 (rule "polySimp_addComm1" (formula "21") (term "0,0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "0,0,0,0,1,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1,0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1,0"))
                                 (rule "leq_literals" (formula "21") (term "0,1,0"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (term "1") (ifseqformula "5"))
                                 (rule "inEqSimp_homoInEq1" (formula "21") (term "0,1"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0,0,1"))
                                 (rule "add_literals" (formula "21") (term "1,1,0,0,1"))
                                 (rule "times_zero_1" (formula "21") (term "1,0,0,1"))
                                 (rule "add_zero_right" (formula "21") (term "0,0,1"))
                                 (rule "leq_literals" (formula "21") (term "0,1"))
                                 (builtin "One Step Simplification" (formula "21"))
                                 (rule "inEqSimp_contradInEq1" (formula "21") (ifseqformula "3"))
                                 (rule "andLeft" (formula "21"))
                                 (rule "inEqSimp_homoInEq1" (formula "21"))
                                 (rule "polySimp_mulComm0" (formula "21") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "21") (term "1,0"))
                                 (rule "mul_literals" (formula "21") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "21") (term "0"))
                                 (rule "polySimp_addComm0" (formula "21") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "21") (term "0"))
                                 (rule "add_literals" (formula "21") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "21") (term "1,0"))
                                 (rule "add_zero_right" (formula "21") (term "0"))
                                 (rule "leq_literals" (formula "21"))
                                 (rule "closeFalse" (formula "21"))
                              )
                              (branch "x_0 <= to FALSE"
                                 (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                                 (rule "hideAuxiliaryEq" (formula "4"))
                                 (rule "inEqSimp_leqRight" (formula "23"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                                 (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1"))
                                 (rule "mul_literals" (formula "1") (term "0,1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                                 (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                                 (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                                 (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                                 (rule "mul_literals" (formula "1") (term "0,0,0"))
                                 (rule "polySimp_addComm1" (formula "1") (term "0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                                 (rule "add_literals" (formula "1") (term "0,0,0"))
                                 (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                                 (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                                 (rule "polySimp_elimOne" (formula "1") (term "0"))
                                 (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "20"))
                                 (rule "andLeft" (formula "1"))
                                 (rule "inEqSimp_homoInEq1" (formula "1"))
                                 (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                                 (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                                 (rule "mul_literals" (formula "1") (term "0,1,0"))
                                 (rule "polySimp_addAssoc" (formula "1") (term "0"))
                                 (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                                 (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                                 (rule "add_literals" (formula "1") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "1") (term "1,0"))
                                 (rule "add_zero_right" (formula "1") (term "0"))
                                 (rule "leq_literals" (formula "1"))
                                 (rule "closeFalse" (formula "1"))
                              )
                           )
                           (branch "to >= 0 FALSE"
                              (builtin "One Step Simplification" (formula "18") (ifInst ""  (formula "24")))
                              (rule "inEqSimp_geqRight" (formula "24"))
                              (rule "times_zero_1" (formula "1") (term "1,0,0"))
                              (rule "add_zero_right" (formula "1") (term "0,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                              (rule "mul_literals" (formula "1") (term "1"))
                              (rule "inEqSimp_antiSymm" (formula "13") (ifseqformula "1"))
                              (rule "applyEq" (formula "5") (term "1,0,0") (ifseqformula "13"))
                              (rule "applyEq" (formula "23") (term "1,1,1,0,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0"))
                              (rule "applyEq" (formula "16") (term "1,1,1,0,0") (ifseqformula "13"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0"))
                              (rule "applyEq" (formula "1") (term "0") (ifseqformula "13"))
                              (rule "leq_literals" (formula "1"))
                              (rule "true_left" (formula "1"))
                              (rule "applyEq" (formula "17") (term "2,1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "6") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_homoInEq1" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "6") (term "0"))
                              (rule "add_literals" (formula "6") (term "0,0"))
                              (rule "applyEq" (formula "19") (term "1,1") (ifseqformula "12"))
                              (rule "applyEq" (formula "24") (term "1,1,1,0,0") (ifseqformula "12"))
                              (rule "add_literals" (formula "24") (term "1,1,0,0"))
                              (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "12"))
                              (rule "polySimp_addComm1" (formula "11") (term "0"))
                              (rule "add_literals" (formula "11") (term "0,0"))
                              (rule "add_zero_left" (formula "11") (term "0"))
                              (rule "applyEq" (formula "13") (term "0") (ifseqformula "12"))
                              (rule "qeq_literals" (formula "13"))
                              (rule "true_left" (formula "13"))
                              (rule "applyEq" (formula "19") (term "0") (ifseqformula "12"))
                              (rule "inEqSimp_commuteGeq" (formula "19"))
                              (rule "applyEq" (formula "18") (term "1,0") (ifseqformula "12"))
                              (rule "applyEq" (formula "13") (term "1,1") (ifseqformula "12"))
                              (rule "add_literals" (formula "13") (term "1"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "6"))
                              (rule "mul_literals" (formula "6") (term "1"))
                              (rule "inEqSimp_contradInEq0" (formula "22") (ifseqformula "6"))
                              (rule "qeq_literals" (formula "22") (term "0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "closeFalse" (formula "22"))
                           )
                        )
                     )
                  )
                  (branch "CUT: from >= 1 FALSE"
                     (builtin "One Step Simplification" (formula "20"))
                     (rule "true_left" (formula "20"))
                     (rule "replace_known_right" (formula "10") (term "0") (ifseqformula "21"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "true_left" (formula "10"))
                     (rule "replace_known_right" (formula "23") (term "0,0,1") (ifseqformula "20"))
                     (builtin "One Step Simplification" (formula "23"))
                     (rule "inEqSimp_geqRight" (formula "20"))
                     (rule "mul_literals" (formula "1") (term "1,0,0"))
                     (rule "add_literals" (formula "1") (term "0,0"))
                     (rule "add_zero_left" (formula "1") (term "0"))
                     (rule "inEqSimp_antiSymm" (formula "8") (ifseqformula "1"))
                     (rule "applyEq" (formula "1") (term "0") (ifseqformula "8"))
                     (rule "leq_literals" (formula "1"))
                     (rule "true_left" (formula "1"))
                     (rule "applyEq" (formula "13") (term "1,1,0") (ifseqformula "7"))
                     (rule "applyEq" (formula "23") (term "1,1,0,0,0,1,1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "23") (term "1,0,0,0,1,1"))
                     (rule "applyEq" (formula "18") (term "1,1,0,0,0") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "18") (term "1,0,0,0"))
                     (rule "applyEq" (formula "1") (term "1,1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "1") (term "1"))
                     (rule "applyEq" (formula "20") (term "1,1,0,0,0,1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "20") (term "1,0,0,0,1"))
                     (rule "applyEq" (formula "16") (term "1") (ifseqformula "7"))
                     (rule "applyEq" (formula "8") (term "0") (ifseqformula "7"))
                     (rule "qeq_literals" (formula "8"))
                     (rule "true_left" (formula "8"))
                     (rule "applyEq" (formula "10") (term "1,1,0,0,0,1") (ifseqformula "7"))
                     (rule "add_zero_right" (formula "10") (term "1,0,0,0,1"))
                     (rule "applyEq" (formula "6") (term "0,1,0,0") (ifseqformula "7"))
                     (rule "times_zero_2" (formula "6") (term "1,0,0"))
                     (rule "add_literals" (formula "6") (term "0,0"))
                     (rule "cut_direct" (formula "10") (term "0"))
                     (branch "CUT: array.length >= 2 + to TRUE"
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "replace_known_left" (formula "20") (term "0") (ifseqformula "10"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_subsumption1" (formula "9") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "9") (term "0"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "9") (term "1,0,0"))
                        (rule "mul_literals" (formula "9") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "9") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "9") (term "0,0"))
                        (rule "add_literals" (formula "9") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "9") (term "1,0,0"))
                        (rule "add_literals" (formula "9") (term "0,0"))
                        (rule "qeq_literals" (formula "9") (term "0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "cut_direct" (formula "22") (term "0"))
                        (branch "CUT: array.length >= result TRUE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "impRight" (formula "23"))
                           (rule "allRight" (formula "24") (inst "sk=x_0"))
                           (rule "orRight" (formula "24"))
                           (rule "orRight" (formula "24"))
                           (rule "inEqSimp_leqRight" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_geqRight" (formula "26"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_leqRight" (formula "26"))
                           (rule "mul_literals" (formula "1") (term "1,0,0"))
                           (rule "add_literals" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                           (rule "polySimp_mulComm0" (formula "3") (term "1"))
                           (rule "polySimp_rightDist" (formula "3") (term "1"))
                           (rule "mul_literals" (formula "3") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "2"))
                           (rule "polySimp_mulComm0" (formula "2") (term "1"))
                           (rule "polySimp_rightDist" (formula "2") (term "1"))
                           (rule "mul_literals" (formula "2") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "2") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "2") (term "1,1"))
                           (rule "inEqSimp_subsumption1" (formula "5") (ifseqformula "4"))
                           (rule "inEqSimp_homoInEq0" (formula "5") (term "0"))
                           (rule "polySimp_pullOutFactor1b" (formula "5") (term "0,0"))
                           (rule "add_literals" (formula "5") (term "1,1,0,0"))
                           (rule "times_zero_1" (formula "5") (term "1,0,0"))
                           (rule "add_zero_right" (formula "5") (term "0,0"))
                           (rule "qeq_literals" (formula "5") (term "0"))
                           (builtin "One Step Simplification" (formula "5"))
                           (rule "true_left" (formula "5"))
                           (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                           (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "17"))
                           (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "26")) (ifInst ""  (formula "10")))
                           (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                           (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "inEqSimp_homoInEq1" (formula "4"))
                           (rule "polySimp_addComm1" (formula "4") (term "0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                           (rule "polySimp_mulComm0" (formula "4") (term "1"))
                           (rule "polySimp_rightDist" (formula "4") (term "1"))
                           (rule "mul_literals" (formula "4") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "times_zero_1" (formula "1") (term "0,0"))
                           (rule "add_zero_left" (formula "1") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "mul_literals" (formula "1") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "21") (ifseqformula "1"))
                           (rule "leq_literals" (formula "21") (term "0"))
                           (builtin "One Step Simplification" (formula "21"))
                           (rule "true_left" (formula "21"))
                           (rule "ifthenelse_split" (formula "4") (term "0"))
                           (branch "x_0 <= to TRUE"
                              (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                              (rule "hideAuxiliaryEq" (formula "5"))
                              (rule "inEqSimp_homoInEq0" (formula "5"))
                              (rule "polySimp_addComm1" (formula "5") (term "0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                              (rule "polySimp_mulComm0" (formula "5") (term "1"))
                              (rule "polySimp_rightDist" (formula "5") (term "1"))
                              (rule "mul_literals" (formula "5") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "4"))
                              (rule "times_zero_1" (formula "2") (term "0,0"))
                              (rule "add_zero_left" (formula "2") (term "0"))
                              (rule "inEqSimp_subsumption1" (formula "2") (ifseqformula "8"))
                              (rule "leq_literals" (formula "2") (term "0"))
                              (builtin "One Step Simplification" (formula "2"))
                              (rule "true_left" (formula "2"))
                              (rule "allLeft" (formula "22") (inst "t=result"))
                              (rule "replaceKnownSelect_taclet000_0" (formula "22") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet000_1" (formula "22") (term "0,1"))
                              (rule "inEqSimp_homoInEq1" (formula "22") (term "1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "22") (term "0,1,0"))
                              (rule "add_literals" (formula "22") (term "1,1,0,1,0"))
                              (rule "times_zero_1" (formula "22") (term "1,0,1,0"))
                              (rule "add_zero_right" (formula "22") (term "0,1,0"))
                              (rule "leq_literals" (formula "22") (term "1,0"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "inEqSimp_homoInEq0" (formula "22") (term "1"))
                              (rule "polySimp_pullOutFactor1" (formula "22") (term "0,1"))
                              (rule "add_literals" (formula "22") (term "1,0,1"))
                              (rule "times_zero_1" (formula "22") (term "0,1"))
                              (rule "qeq_literals" (formula "22") (term "1"))
                              (builtin "One Step Simplification" (formula "22"))
                              (rule "true_left" (formula "22"))
                              (rule "allLeft" (formula "16") (inst "t=result"))
                              (rule "inEqSimp_commuteLeq" (formula "16") (term "1"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "1,0"))
                              (rule "polySimp_addComm1" (formula "16") (term "0,1,0"))
                              (rule "inEqSimp_sepPosMonomial0" (formula "16") (term "1,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,1,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,1,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,1,0"))
                              (rule "polySimp_mulLiterals" (formula "16") (term "1,1,1,0"))
                              (rule "polySimp_elimOne" (formula "16") (term "1,1,1,0"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0,0") (ifseqformula "1"))
                              (rule "qeq_literals" (formula "16") (term "0,0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "22"))
                              (rule "inEqSimp_homoInEq1" (formula "16") (term "0,0"))
                              (rule "polySimp_mulComm0" (formula "16") (term "1,0,0,0"))
                              (rule "polySimp_rightDist" (formula "16") (term "1,0,0,0"))
                              (rule "mul_literals" (formula "16") (term "0,1,0,0,0"))
                              (rule "polySimp_addAssoc" (formula "16") (term "0,0,0"))
                              (rule "polySimp_addComm0" (formula "16") (term "0,0,0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "16") (term "0,0,0"))
                              (rule "add_literals" (formula "16") (term "1,1,0,0,0"))
                              (rule "times_zero_1" (formula "16") (term "1,0,0,0"))
                              (rule "add_zero_right" (formula "16") (term "0,0,0"))
                              (rule "leq_literals" (formula "16") (term "0,0"))
                              (builtin "One Step Simplification" (formula "16"))
                              (rule "allLeft" (formula "23") (inst "t=x_0"))
                              (rule "replaceKnownSelect_taclet001020000_6" (formula "23") (term "0,1"))
                              (rule "replaceKnownAuxiliaryConstant_taclet0001020000_7" (formula "23") (term "0,1"))
                              (rule "inEqSimp_contradInEq0" (formula "23") (term "1,0") (ifseqformula "3"))
                              (rule "inEqSimp_homoInEq1" (formula "23") (term "0,1,0"))
                              (rule "polySimp_mulComm0" (formula "23") (term "1,0,0,1,0"))
                              (rule "polySimp_rightDist" (formula "23") (term "1,0,0,1,0"))
                              (rule "mul_literals" (formula "23") (term "0,1,0,0,1,0"))
                              (rule "polySimp_addAssoc" (formula "23") (term "0,0,1,0"))
                              (rule "polySimp_addComm1" (formula "23") (term "0,0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "0,0,0,0,1,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0,0,1,0"))
                              (rule "add_literals" (formula "23") (term "1,1,0,0,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0,0,1,0"))
                              (rule "add_zero_right" (formula "23") (term "0,0,1,0"))
                              (rule "leq_literals" (formula "23") (term "0,1,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (term "0") (ifseqformula "2"))
                              (rule "qeq_literals" (formula "23") (term "0,0"))
                              (builtin "One Step Simplification" (formula "23"))
                              (rule "inEqSimp_contradInEq1" (formula "23") (ifseqformula "5"))
                              (rule "andLeft" (formula "23"))
                              (rule "inEqSimp_homoInEq1" (formula "23"))
                              (rule "polySimp_pullOutFactor1b" (formula "23") (term "0"))
                              (rule "add_literals" (formula "23") (term "1,1,0"))
                              (rule "times_zero_1" (formula "23") (term "1,0"))
                              (rule "add_zero_right" (formula "23") (term "0"))
                              (rule "leq_literals" (formula "23"))
                              (rule "closeFalse" (formula "23"))
                           )
                           (branch "x_0 <= to FALSE"
                              (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                              (rule "hideAuxiliaryEq" (formula "4"))
                              (rule "inEqSimp_leqRight" (formula "24"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                              (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1"))
                              (rule "polySimp_rightDist" (formula "1") (term "1"))
                              (rule "mul_literals" (formula "1") (term "0,1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                              (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                              (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "4"))
                              (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                              (rule "mul_literals" (formula "1") (term "0,0,0"))
                              (rule "polySimp_addComm1" (formula "1") (term "0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                              (rule "add_literals" (formula "1") (term "0,0,0"))
                              (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                              (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                              (rule "polySimp_elimOne" (formula "1") (term "0"))
                              (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "22"))
                              (rule "andLeft" (formula "1"))
                              (rule "inEqSimp_homoInEq1" (formula "1"))
                              (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                              (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                              (rule "mul_literals" (formula "1") (term "0,1,0"))
                              (rule "polySimp_addAssoc" (formula "1") (term "0"))
                              (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                              (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                              (rule "add_literals" (formula "1") (term "1,1,0"))
                              (rule "times_zero_1" (formula "1") (term "1,0"))
                              (rule "add_zero_right" (formula "1") (term "0"))
                              (rule "leq_literals" (formula "1"))
                              (rule "closeFalse" (formula "1"))
                           )
                        )
                        (branch "CUT: array.length >= result FALSE"
                           (builtin "One Step Simplification" (formula "23"))
                           (rule "false_right" (formula "23"))
                           (rule "inEqSimp_geqRight" (formula "22"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "9") (ifseqformula "1"))
                           (rule "times_zero_1" (formula "9") (term "0,0"))
                           (rule "add_zero_left" (formula "9") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "9"))
                           (rule "mul_literals" (formula "9") (term "1"))
                           (rule "inEqSimp_subsumption1" (formula "17") (ifseqformula "9"))
                           (rule "leq_literals" (formula "17") (term "0"))
                           (builtin "One Step Simplification" (formula "17"))
                           (rule "true_left" (formula "17"))
                           (rule "inEqSimp_exactShadow3" (formula "11") (ifseqformula "1"))
                           (rule "polySimp_rightDist" (formula "11") (term "0,0"))
                           (rule "mul_literals" (formula "11") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "11") (term "0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0,0"))
                           (rule "add_literals" (formula "11") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "11"))
                           (rule "polySimp_mulLiterals" (formula "11") (term "0"))
                           (rule "polySimp_elimOne" (formula "11") (term "0"))
                           (rule "inEqSimp_contradInEq1" (formula "11") (ifseqformula "18"))
                           (rule "andLeft" (formula "11"))
                           (rule "inEqSimp_homoInEq1" (formula "11"))
                           (rule "polySimp_mulComm0" (formula "11") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "11") (term "1,0"))
                           (rule "mul_literals" (formula "11") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "11") (term "0"))
                           (rule "polySimp_addComm0" (formula "11") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "11") (term "0"))
                           (rule "add_literals" (formula "11") (term "1,1,0"))
                           (rule "times_zero_1" (formula "11") (term "1,0"))
                           (rule "add_zero_right" (formula "11") (term "0"))
                           (rule "leq_literals" (formula "11"))
                           (rule "closeFalse" (formula "11"))
                        )
                     )
                     (branch "CUT: array.length >= 2 + to FALSE"
                        (builtin "One Step Simplification" (formula "10"))
                        (rule "true_left" (formula "10"))
                        (rule "replace_known_right" (formula "18") (term "0") (ifseqformula "19"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "inEqSimp_geqRight" (formula "18"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                        (rule "add_literals" (formula "1") (term "0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_antiSymm" (formula "10") (ifseqformula "1"))
                        (rule "applyEq" (formula "15") (term "1,0") (ifseqformula "10"))
                        (rule "applyEq" (formula "15") (term "1,1") (ifseqformula "10"))
                        (rule "applyEq" (formula "22") (term "0,0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "22") (term "0,0,0"))
                        (rule "applyEq" (formula "22") (term "0,0,1") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "22") (term "0,1"))
                        (rule "polySimp_mulComm0" (formula "22") (term "1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "22") (term "1,0,0,1"))
                        (rule "mul_literals" (formula "22") (term "0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "22") (term "0,0,1"))
                        (rule "polySimp_addComm1" (formula "22") (term "0,0,0,1"))
                        (rule "add_literals" (formula "22") (term "0,0,0,0,1"))
                        (rule "add_zero_left" (formula "22") (term "0,0,0,1"))
                        (rule "applyEq" (formula "11") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq1" (formula "11"))
                        (rule "polySimp_pullOutFactor1" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,0"))
                        (rule "times_zero_1" (formula "11") (term "0"))
                        (rule "leq_literals" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "applyEq" (formula "1") (term "0") (ifseqformula "10"))
                        (rule "inEqSimp_homoInEq0" (formula "1"))
                        (rule "polySimp_pullOutFactor1" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,0"))
                        (rule "times_zero_1" (formula "1") (term "0"))
                        (rule "qeq_literals" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "applyEq" (formula "8") (term "0") (ifseqformula "9"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "20") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "20") (term "0,0,1"))
                        (rule "polySimp_elimOne" (formula "20") (term "0,0,1"))
                        (rule "replace_known_left" (formula "20") (term "0,1") (ifseqformula "15"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "8"))
                        (rule "mul_literals" (formula "8") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "20") (term "0") (ifseqformula "15"))
                        (rule "inEqSimp_homoInEq0" (formula "20") (term "0,0"))
                        (rule "polySimp_mulComm0" (formula "20") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "20") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "20") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "20") (term "0,0,0"))
                        (rule "polySimp_addComm0" (formula "20") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "20") (term "0,0,0"))
                        (rule "add_literals" (formula "20") (term "1,1,0,0,0"))
                        (rule "times_zero_1" (formula "20") (term "1,0,0,0"))
                        (rule "add_literals" (formula "20") (term "0,0,0"))
                        (rule "qeq_literals" (formula "20") (term "0,0"))
                        (builtin "One Step Simplification" (formula "20"))
                        (rule "allRight" (formula "20") (inst "sk=x_0"))
                        (rule "orRight" (formula "20"))
                        (rule "orRight" (formula "20"))
                        (rule "inEqSimp_leqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_leqRight" (formula "21"))
                        (rule "mul_literals" (formula "1") (term "1,0,0"))
                        (rule "add_literals" (formula "1") (term "0,0"))
                        (rule "add_zero_left" (formula "1") (term "0"))
                        (rule "inEqSimp_geqRight" (formula "22"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulComm0" (formula "3") (term "1"))
                        (rule "polySimp_rightDist" (formula "3") (term "1"))
                        (rule "mul_literals" (formula "3") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "4"))
                        (rule "leq_literals" (formula "11") (term "0"))
                        (builtin "One Step Simplification" (formula "11"))
                        (rule "true_left" (formula "11"))
                        (rule "seqDef_induction_upper_concrete" (formula "15") (term "0"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,0"))
                        (rule "inEqSimp_subsumption1" (formula "15") (term "0,1,0") (ifseqformula "4"))
                        (rule "leq_literals" (formula "15") (term "0,0,1,0"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "seqDef_induction_upper_concrete" (formula "15") (term "1"))
                        (rule "inEqSimp_commuteLeq" (formula "15") (term "0,1,1"))
                        (rule "inEqSimp_subsumption1" (formula "15") (term "0,1,1") (ifseqformula "4"))
                        (rule "leq_literals" (formula "15") (term "0,0,1,1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "pullOutSelect" (formula "3") (term "0") (inst "selectSK=arr_3"))
                        (rule "simplifySelectOfAnonEQ" (formula "3") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "3") (ifInst ""  (formula "22")) (ifInst ""  (formula "9")))
                        (rule "elementOfArrayRangeConcrete" (formula "3") (term "0,0"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_commuteLeq" (formula "3") (term "0,0,0"))
                        (rule "replace_known_left" (formula "3") (term "0,0,0") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_addComm1" (formula "4") (term "0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "4"))
                        (rule "polySimp_mulComm0" (formula "4") (term "1"))
                        (rule "polySimp_rightDist" (formula "4") (term "1"))
                        (rule "mul_literals" (formula "4") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "4") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "4") (term "1,1"))
                        (rule "pullOutSelect" (formula "16") (term "0,1,0") (inst "selectSK=arr_4"))
                        (rule "simplifySelectOfAnonEQ" (formula "16") (ifseqformula "14"))
                        (builtin "One Step Simplification" (formula "16") (ifInst ""  (formula "23")) (ifInst ""  (formula "9")))
                        (rule "elementOfArrayRangeConcrete" (formula "16") (term "0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "narrowSelectArrayType" (formula "16") (term "1,0") (ifseqformula "13") (ifseqformula "23"))
                        (rule "narrowSelectArrayType" (formula "16") (term "2,0") (ifseqformula "6") (ifseqformula "23"))
                        (rule "inEqSimp_commuteLeq" (formula "16") (term "0,0,0"))
                        (rule "inEqSimp_homoInEq0" (formula "16") (term "1,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "16") (term "0,1,0,0"))
                        (rule "add_literals" (formula "16") (term "1,0,1,0,0"))
                        (rule "times_zero_1" (formula "16") (term "0,1,0,0"))
                        (rule "qeq_literals" (formula "16") (term "1,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "inEqSimp_subsumption1" (formula "16") (term "0,0") (ifseqformula "5"))
                        (rule "leq_literals" (formula "16") (term "0,0,0"))
                        (builtin "One Step Simplification" (formula "16"))
                        (rule "applyEqReverse" (formula "17") (term "0,1,0") (ifseqformula "16"))
                        (rule "hideAuxiliaryEq" (formula "16"))
                        (rule "inEqSimp_exactShadow3" (formula "2") (ifseqformula "1"))
                        (rule "times_zero_1" (formula "2") (term "0,0"))
                        (rule "add_zero_left" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "2"))
                        (rule "mul_literals" (formula "2") (term "1"))
                        (rule "inEqSimp_subsumption1" (formula "18") (ifseqformula "2"))
                        (rule "leq_literals" (formula "18") (term "0"))
                        (builtin "One Step Simplification" (formula "18"))
                        (rule "true_left" (formula "18"))
                        (rule "ifthenelse_split" (formula "4") (term "0"))
                        (branch "x_0 <= to TRUE"
                           (rule "applyEqReverse" (formula "6") (term "1,1") (ifseqformula "5"))
                           (rule "hideAuxiliaryEq" (formula "5"))
                           (rule "inEqSimp_homoInEq0" (formula "5"))
                           (rule "polySimp_addComm1" (formula "5") (term "0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                           (rule "polySimp_mulComm0" (formula "5") (term "1"))
                           (rule "polySimp_rightDist" (formula "5") (term "1"))
                           (rule "mul_literals" (formula "5") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "5") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "5") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                           (rule "times_zero_1" (formula "3") (term "0,0"))
                           (rule "add_zero_left" (formula "3") (term "0"))
                           (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "7"))
                           (rule "leq_literals" (formula "3") (term "0"))
                           (builtin "One Step Simplification" (formula "3"))
                           (rule "true_left" (formula "3"))
                           (rule "allLeft" (formula "19") (inst "t=x_0"))
                           (rule "replaceKnownSelect_taclet11020000_6" (formula "19") (term "0,1"))
                           (rule "replaceKnownAuxiliaryConstant_taclet011020000_9" (formula "19") (term "0,1"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (term "0,0") (ifseqformula "3"))
                           (rule "qeq_literals" (formula "19") (term "0,0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (term "0") (ifseqformula "1"))
                           (rule "inEqSimp_homoInEq1" (formula "19") (term "0,0"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0,0,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0,0,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0,0,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "19") (term "0,0,0,0"))
                           (rule "add_literals" (formula "19") (term "0,0,0,0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0,0,0"))
                           (rule "add_literals" (formula "19") (term "1,1,0,0,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0,0,0"))
                           (rule "add_zero_right" (formula "19") (term "0,0,0"))
                           (rule "leq_literals" (formula "19") (term "0,0"))
                           (builtin "One Step Simplification" (formula "19"))
                           (rule "inEqSimp_contradInEq1" (formula "19") (ifseqformula "5"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                        (branch "x_0 <= to FALSE"
                           (rule "applyEqReverse" (formula "5") (term "1,1") (ifseqformula "4"))
                           (rule "hideAuxiliaryEq" (formula "4"))
                           (rule "inEqSimp_leqRight" (formula "20"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                           (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                           (rule "polySimp_mulComm0" (formula "1") (term "1"))
                           (rule "polySimp_rightDist" (formula "1") (term "1"))
                           (rule "mul_literals" (formula "1") (term "0,1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                           (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                           (rule "inEqSimp_exactShadow3" (formula "1") (ifseqformula "2"))
                           (rule "polySimp_rightDist" (formula "1") (term "0,0"))
                           (rule "mul_literals" (formula "1") (term "0,0,0"))
                           (rule "polySimp_addComm1" (formula "1") (term "0"))
                           (rule "polySimp_addAssoc" (formula "1") (term "0,0"))
                           (rule "add_literals" (formula "1") (term "0,0,0"))
                           (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                           (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                           (rule "polySimp_elimOne" (formula "1") (term "0"))
                           (rule "inEqSimp_contradInEq0" (formula "19") (ifseqformula "1"))
                           (rule "andLeft" (formula "19"))
                           (rule "inEqSimp_homoInEq1" (formula "19"))
                           (rule "polySimp_mulComm0" (formula "19") (term "1,0"))
                           (rule "polySimp_rightDist" (formula "19") (term "1,0"))
                           (rule "mul_literals" (formula "19") (term "0,1,0"))
                           (rule "polySimp_addAssoc" (formula "19") (term "0"))
                           (rule "polySimp_addComm0" (formula "19") (term "0,0"))
                           (rule "polySimp_pullOutFactor1b" (formula "19") (term "0"))
                           (rule "add_literals" (formula "19") (term "1,1,0"))
                           (rule "times_zero_1" (formula "19") (term "1,0"))
                           (rule "add_zero_right" (formula "19") (term "0"))
                           (rule "leq_literals" (formula "19"))
                           (rule "closeFalse" (formula "19"))
                        )
                     )
                  )
               )
               (branch "Show Axiom Satisfiability"
                  (builtin "One Step Simplification" (formula "24"))
                  (rule "closeTrue" (formula "24"))
               )
            )
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "25"))
            (rule "closeTrue" (formula "25"))
         )
      )
      (branch "Exceptional Post (split)"
         (builtin "One Step Simplification" (formula "13"))
         (builtin "One Step Simplification" (formula "16"))
         (rule "translateJavaSubInt" (formula "13") (term "1,0,0,1,1,1,1,1,0,1,1"))
         (rule "translateJavaAddInt" (formula "13") (term "0,2,1,1,0,1,0,1,1,1,1,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "13") (term "0,2,0,1,0,1,0,1,1,1,1,0,1,1"))
         (rule "andLeft" (formula "13"))
         (rule "selectCreatedOfAnonAsFormulaEQ" (formula "14") (term "1,0") (ifseqformula "13"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "15"))
         (rule "andLeft" (formula "14"))
         (rule "andLeft" (formula "16"))
         (rule "notLeft" (formula "14"))
         (rule "close" (formula "18") (ifseqformula "17"))
      )
      (branch "Pre (split)"
         (builtin "One Step Simplification" (formula "14") (ifInst ""  (formula "1")) (ifInst ""  (formula "13")) (ifInst ""  (formula "2")) (ifInst ""  (formula "13")) (ifInst ""  (formula "5")))
         (rule "translateJavaSubInt" (formula "14") (term "1,0,0,1,1"))
         (rule "translateJavaAddInt" (formula "14") (term "0,2,1,1,0,1,0,1,1"))
         (rule "translateJavaSubInt" (formula "14") (term "1,1,0"))
         (rule "translateJavaSubInt" (formula "14") (term "0,2,0,1,0,1,0,1"))
         (rule "polySimp_elimSub" (formula "14") (term "1,0,0,1,1"))
         (rule "mul_literals" (formula "14") (term "1,1,0,0,1,1"))
         (rule "polySimp_elimSub" (formula "14") (term "1,1,0"))
         (rule "mul_literals" (formula "14") (term "1,1,1,0"))
         (rule "polySimp_elimSub" (formula "14") (term "0,2,0,1,0,1,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,2,0,1,0,1,0,1"))
         (rule "polySimp_addComm0" (formula "14") (term "0,2,1,1,0,1,0,1,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,0,0,1,1"))
         (rule "polySimp_addComm0" (formula "14") (term "1,1,0"))
         (rule "polySimp_addComm0" (formula "14") (term "0,2,0,1,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "9"))
         (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "9") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
         (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
         (rule "add_literals" (formula "11") (term "0,0,0,0"))
         (rule "polySimp_addComm1" (formula "11") (term "0,0"))
         (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
         (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
         (rule "add_literals" (formula "10") (term "0,0,0"))
         (rule "inEqSimp_ltToLeq" (formula "1"))
         (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
         (rule "polySimp_addComm1" (formula "1") (term "0"))
         (rule "inEqSimp_gtToGeq" (formula "14") (term "0,0,1"))
         (rule "times_zero_1" (formula "14") (term "1,0,0,0,0,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "0,0,1,1"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0,0,1,1"))
         (rule "mul_literals" (formula "14") (term "0,1,0,0,0,0,1,1"))
         (rule "polySimp_addAssoc" (formula "14") (term "0,0,0,0,1,1"))
         (rule "add_literals" (formula "14") (term "0,0,0,0,0,1,1"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0,0,1,1"))
         (rule "inEqSimp_ltToLeq" (formula "14") (term "1,0,1,0,1"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1,0,1"))
         (rule "polySimp_addComm1" (formula "14") (term "0,1,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0"))
         (rule "replace_known_left" (formula "14") (term "0,0") (ifseqformula "7"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_commuteLeq" (formula "14") (term "0,0,0,1,0,1,1"))
         (rule "replace_known_left" (formula "14") (term "0,1,1") (ifseqformula "11"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_homoInEq0" (formula "14") (term "0"))
         (rule "polySimp_addComm1" (formula "14") (term "0,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "9"))
         (rule "polySimp_mulLiterals" (formula "9") (term "0"))
         (rule "polySimp_elimOne" (formula "9") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
         (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
         (rule "polySimp_elimOne" (formula "11") (term "0,0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
         (rule "mul_literals" (formula "10") (term "1,0"))
         (rule "inEqSimp_sepNegMonomial0" (formula "1"))
         (rule "polySimp_mulLiterals" (formula "1") (term "0"))
         (rule "polySimp_elimOne" (formula "1") (term "0"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0,0,1"))
         (rule "mul_literals" (formula "14") (term "1,0,0,1"))
         (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "1,0,1,0,1"))
         (rule "polySimp_mulLiterals" (formula "14") (term "0,1,0,1,0,1"))
         (rule "polySimp_elimOne" (formula "14") (term "0,1,0,1,0,1"))
         (rule "replace_known_left" (formula "14") (term "0,1") (ifseqformula "10"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0"))
         (rule "polySimp_mulComm0" (formula "14") (term "1,0"))
         (rule "polySimp_rightDist" (formula "14") (term "1,0"))
         (rule "mul_literals" (formula "14") (term "0,1,0"))
         (rule "polySimp_mulLiterals" (formula "14") (term "1,1,0"))
         (rule "polySimp_elimOne" (formula "14") (term "1,1,0"))
         (rule "replace_known_left" (formula "14") (term "0") (ifseqformula "9"))
         (builtin "One Step Simplification" (formula "14"))
         (rule "nnf_imp2or" (formula "11") (term "0,1"))
         (rule "nnf_imp2or" (formula "10") (term "0,1"))
         (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
         (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
         (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
         (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
         (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
         (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
         (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1"))
         (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
         (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
         (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
         (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
         (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
         (rule "Class_invariant_axiom_for_Quicksort" (formula "14") (inst "sk=sk_1") (ifseqformula "4"))
         (branch "Use Axiom"
            (rule "closeTrue" (formula "14"))
         )
         (branch "Show Axiom Satisfiability"
            (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "14"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "methodCallEmpty" (formula "14") (term "1"))
      (rule "tryEmpty" (formula "14") (term "1"))
      (rule "emptyModality" (formula "14") (term "1"))
      (rule "andRight" (formula "14"))
      (branch
         (rule "andRight" (formula "14"))
         (branch
            (rule "andRight" (formula "14"))
            (branch
               (builtin "One Step Simplification" (formula "14"))
               (rule "closeTrue" (formula "14"))
            )
            (branch
               (rule "andRight" (formula "14"))
               (branch
                  (builtin "One Step Simplification" (formula "14"))
                  (rule "allRight" (formula "14") (inst "sk=i_0"))
                  (rule "impRight" (formula "14"))
                  (rule "andLeft" (formula "1"))
                  (rule "inEqSimp_ltRight" (formula "13"))
                  (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                  (rule "polySimp_addComm0" (formula "1") (term "0"))
                  (rule "inEqSimp_geqRight" (formula "16"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "14") (term "0"))
                  (rule "polySimp_rightDist" (formula "14") (term "1,0,0,0"))
                  (rule "mul_literals" (formula "14") (term "0,1,0,0,0"))
                  (rule "polySimp_addAssoc" (formula "14") (term "0,0,0"))
                  (rule "add_literals" (formula "14") (term "0,0,0,0"))
                  (rule "polySimp_addComm1" (formula "14") (term "0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "12"))
                  (rule "polySimp_mulComm0" (formula "12") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "12") (term "0"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,1"))
                  (rule "inEqSimp_gtToGeq" (formula "13") (term "0"))
                  (rule "times_zero_1" (formula "13") (term "1,0,0,0"))
                  (rule "add_zero_right" (formula "13") (term "0,0,0"))
                  (rule "inEqSimp_ltToLeq" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                  (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                  (rule "polySimp_elimOne" (formula "2") (term "0"))
                  (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                  (rule "polySimp_mulComm0" (formula "1") (term "1"))
                  (rule "polySimp_rightDist" (formula "1") (term "1"))
                  (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                  (rule "mul_literals" (formula "1") (term "0,1"))
                  (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "14") (term "0"))
                  (rule "polySimp_mulLiterals" (formula "14") (term "0,0"))
                  (rule "polySimp_elimOne" (formula "14") (term "0,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "12"))
                  (rule "polySimp_mulLiterals" (formula "12") (term "0"))
                  (rule "polySimp_elimOne" (formula "12") (term "0"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,1"))
                  (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,1"))
                  (rule "polySimp_rightDist" (formula "13") (term "1,1,0,1"))
                  (rule "mul_literals" (formula "13") (term "0,1,1,0,1"))
                  (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,1"))
                  (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,1"))
                  (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "0"))
                  (rule "mul_literals" (formula "13") (term "1,0"))
                  (rule "inEqSimp_sepNegMonomial0" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_exactShadow3" (formula "4") (ifseqformula "2"))
                  (rule "polySimp_rightDist" (formula "4") (term "0,0"))
                  (rule "mul_literals" (formula "4") (term "0,0,0"))
                  (rule "polySimp_addComm1" (formula "4") (term "0"))
                  (rule "inEqSimp_sepNegMonomial1" (formula "4"))
                  (rule "polySimp_mulLiterals" (formula "4") (term "0"))
                  (rule "polySimp_elimOne" (formula "4") (term "0"))
                  (rule "inEqSimp_contradInEq1" (formula "4") (ifseqformula "3"))
                  (rule "andLeft" (formula "4"))
                  (rule "inEqSimp_homoInEq1" (formula "4"))
                  (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
                  (rule "polySimp_rightDist" (formula "4") (term "1,0"))
                  (rule "mul_literals" (formula "4") (term "0,1,0"))
                  (rule "polySimp_addAssoc" (formula "4") (term "0"))
                  (rule "polySimp_addComm0" (formula "4") (term "0,0"))
                  (rule "polySimp_pullOutFactor1b" (formula "4") (term "0"))
                  (rule "add_literals" (formula "4") (term "1,1,0"))
                  (rule "times_zero_1" (formula "4") (term "1,0"))
                  (rule "add_zero_right" (formula "4") (term "0"))
                  (rule "leq_literals" (formula "4"))
                  (rule "closeFalse" (formula "4"))
               )
               (branch
                  (rule "andRight" (formula "14"))
                  (branch
                     (rule "impRight" (formula "14"))
                     (builtin "One Step Simplification" (formula "1"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "allRight" (formula "15") (inst "sk=x_0"))
                     (rule "impRight" (formula "15"))
                     (rule "andLeft" (formula "1"))
                     (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "3"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_ltRight" (formula "14"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "polySimp_addComm0" (formula "1") (term "0"))
                     (rule "inEqSimp_gtRight" (formula "17"))
                     (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "15") (term "0"))
                     (rule "polySimp_rightDist" (formula "15") (term "1,0,0,0"))
                     (rule "mul_literals" (formula "15") (term "0,1,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "15") (term "0,0,0"))
                     (rule "add_literals" (formula "15") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "15") (term "0,0"))
                     (rule "inEqSimp_ltToLeq" (formula "13"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "13") (term "0"))
                     (rule "inEqSimp_gtToGeq" (formula "5"))
                     (rule "times_zero_1" (formula "5") (term "1,0,0"))
                     (rule "add_zero_right" (formula "5") (term "0,0"))
                     (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0"))
                     (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                     (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                     (rule "polySimp_elimOne" (formula "2") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                     (rule "polySimp_mulLiterals" (formula "1") (term "1"))
                     (rule "polySimp_elimOne" (formula "1") (term "1"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "15") (term "0"))
                     (rule "polySimp_mulLiterals" (formula "15") (term "0,0"))
                     (rule "polySimp_elimOne" (formula "15") (term "0,0"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                     (rule "polySimp_elimOne" (formula "13") (term "0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "5"))
                     (rule "mul_literals" (formula "5") (term "1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0"))
                     (rule "polySimp_mulComm0" (formula "14") (term "1,1,0"))
                     (rule "polySimp_rightDist" (formula "14") (term "1,1,0"))
                     (rule "mul_literals" (formula "14") (term "0,1,1,0"))
                     (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0"))
                     (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0"))
                     (rule "inEqSimp_subsumption1" (formula "11") (ifseqformula "5"))
                     (rule "leq_literals" (formula "11") (term "0"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "true_left" (formula "11"))
                     (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                     (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                     (rule "polySimp_elimOne" (formula "3") (term "1"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "2"))
                     (rule "applyEq" (formula "14") (term "1,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,0"))
                     (rule "times_zero_1" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "applyEq" (formula "15") (term "1,1,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "15") (term "1,1,0,0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "3"))
                     (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                     (rule "add_literals" (formula "11") (term "1,1,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0"))
                     (rule "add_zero_right" (formula "11") (term "0"))
                     (rule "applyEq" (formula "15") (term "1,0,2,1,1,0,1") (ifseqformula "3"))
                     (rule "applyEq" (formula "14") (term "1,1,0,0") (ifseqformula "3"))
                     (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "2"))
                     (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                     (rule "add_literals" (formula "2") (term "1,0"))
                     (rule "times_zero_1" (formula "2") (term "0"))
                     (rule "qeq_literals" (formula "2"))
                     (rule "true_left" (formula "2"))
                     (rule "applyEq" (formula "4") (term "1") (ifseqformula "2"))
                     (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
                     (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq0" (formula "5"))
                     (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                     (rule "add_literals" (formula "5") (term "1,0"))
                     (rule "times_zero_1" (formula "5") (term "0"))
                     (rule "qeq_literals" (formula "5"))
                     (rule "true_left" (formula "5"))
                     (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "3"))
                     (rule "inEqSimp_commuteLeq" (formula "1"))
                     (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "4"))
                     (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                     (rule "add_literals" (formula "4") (term "1,0"))
                     (rule "times_zero_1" (formula "4") (term "0"))
                     (rule "leq_literals" (formula "4"))
                     (rule "true_left" (formula "4"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_imp2or" (formula "13") (term "0,1"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0"))
                     (rule "inEqSimp_or_antiSymm0" (formula "12") (term "0,0"))
                     (rule "polySimp_homoEq" (formula "12") (term "0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,1,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "1,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,1,0,0,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0"))
                     (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,0,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,0,0,0"))
                     (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0,0"))
                     (rule "add_literals" (formula "12") (term "1,0,0,0,0"))
                     (rule "times_zero_1" (formula "12") (term "0,0,0,0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "nnf_notAnd" (formula "13") (term "0,0,1"))
                     (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0,1"))
                     (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0,1"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,1"))
                     (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,1"))
                     (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0,1"))
                     (rule "inEqSimp_or_antiSymm0" (formula "13") (term "0,0,1"))
                     (rule "polySimp_homoEq" (formula "13") (term "0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0,1"))
                     (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0,1"))
                     (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "13") (term "1,0,1,0,0,1"))
                     (rule "add_literals" (formula "13") (term "0,1,0,1,0,0,1"))
                     (rule "add_zero_left" (formula "13") (term "1,0,1,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,0,0,1"))
                     (rule "add_literals" (formula "13") (term "0,1,0,0,0,0,1"))
                     (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0,1"))
                     (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0,1"))
                     (rule "add_literals" (formula "13") (term "0,0,0,0,0,0,1"))
                     (rule "add_zero_left" (formula "13") (term "0,0,0,0,0,1"))
                     (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,0,0,1"))
                     (rule "add_literals" (formula "13") (term "1,0,0,0,0,1"))
                     (rule "times_zero_1" (formula "13") (term "0,0,0,0,1"))
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "commute_or" (formula "12") (term "0"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_addComm1" (formula "12") (term "0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1"))
                     (rule "polySimp_rightDist" (formula "12") (term "1"))
                     (rule "mul_literals" (formula "12") (term "0,1"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1"))
                     (rule "inEqSimp_contradInEq1" (formula "12") (ifseqformula "1"))
                     (rule "andLeft" (formula "12"))
                     (rule "inEqSimp_homoInEq1" (formula "12"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0"))
                     (rule "polySimp_addComm0" (formula "12") (term "0,0"))
                     (rule "polySimp_pullOutFactor1b" (formula "12") (term "0"))
                     (rule "add_literals" (formula "12") (term "1,1,0"))
                     (rule "times_zero_1" (formula "12") (term "1,0"))
                     (rule "add_zero_right" (formula "12") (term "0"))
                     (rule "leq_literals" (formula "12"))
                     (rule "closeFalse" (formula "12"))
                  )
                  (branch
                     (rule "andRight" (formula "14"))
                     (branch
                        (rule "impRight" (formula "14"))
                        (builtin "One Step Simplification" (formula "1"))
                        (builtin "One Step Simplification" (formula "15"))
                        (rule "allRight" (formula "15") (inst "sk=x_0"))
                        (rule "impRight" (formula "15"))
                        (rule "andLeft" (formula "1"))
                        (rule "replace_known_left" (formula "13") (term "0") (ifseqformula "3"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_ltRight" (formula "14"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_leqRight" (formula "17"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "14") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_ltToLeq" (formula "13"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0"))
                        (rule "inEqSimp_gtToGeq" (formula "14") (term "0"))
                        (rule "times_zero_1" (formula "14") (term "1,0,0,0"))
                        (rule "add_zero_right" (formula "14") (term "0,0,0"))
                        (rule "inEqSimp_ltToLeq" (formula "5"))
                        (rule "polySimp_rightDist" (formula "5") (term "1,0,0"))
                        (rule "mul_literals" (formula "5") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "5") (term "0,0"))
                        (rule "add_literals" (formula "5") (term "0,0,0"))
                        (rule "polySimp_addComm1" (formula "5") (term "0"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "2"))
                        (rule "polySimp_mulLiterals" (formula "2") (term "0"))
                        (rule "polySimp_elimOne" (formula "2") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "14") (term "1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "14") (term "1,1,0,1"))
                        (rule "mul_literals" (formula "14") (term "0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "14") (term "1,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "14") (term "1,1,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "13"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "0"))
                        (rule "polySimp_elimOne" (formula "13") (term "0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "14") (term "0"))
                        (rule "mul_literals" (formula "14") (term "1,0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "5"))
                        (rule "polySimp_mulLiterals" (formula "5") (term "0"))
                        (rule "polySimp_elimOne" (formula "5") (term "0"))
                        (rule "inEqSimp_subsumption1" (formula "13") (ifseqformula "5"))
                        (rule "inEqSimp_homoInEq0" (formula "13") (term "0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "13") (term "0,0"))
                        (rule "add_literals" (formula "13") (term "1,1,0,0"))
                        (rule "times_zero_1" (formula "13") (term "1,0,0"))
                        (rule "add_zero_right" (formula "13") (term "0,0"))
                        (rule "qeq_literals" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "true_left" (formula "13"))
                        (rule "inEqSimp_exactShadow3" (formula "3") (ifseqformula "4"))
                        (rule "polySimp_mulComm0" (formula "3") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "3"))
                        (rule "polySimp_mulLiterals" (formula "3") (term "1"))
                        (rule "polySimp_elimOne" (formula "3") (term "1"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "2"))
                        (rule "applyEq" (formula "6") (term "1") (ifseqformula "3"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "applyEq" (formula "11") (term "1,0") (ifseqformula "3"))
                        (rule "polySimp_pullOutFactor2b" (formula "11") (term "0"))
                        (rule "add_literals" (formula "11") (term "1,1,0"))
                        (rule "times_zero_1" (formula "11") (term "1,0"))
                        (rule "add_zero_right" (formula "11") (term "0"))
                        (rule "applyEq" (formula "14") (term "1,1,0,0,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "6") (term "1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "1") (term "1,0,2,1,1") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "1,1,0,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "15") (term "1,0,2,1,1,0") (ifseqformula "3"))
                        (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "2"))
                        (rule "polySimp_pullOutFactor1" (formula "2") (term "0"))
                        (rule "add_literals" (formula "2") (term "1,0"))
                        (rule "times_zero_1" (formula "2") (term "0"))
                        (rule "qeq_literals" (formula "2"))
                        (rule "true_left" (formula "2"))
                        (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "4"))
                        (rule "applyEq" (formula "5") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq0" (formula "5"))
                        (rule "polySimp_pullOutFactor1" (formula "5") (term "0"))
                        (rule "add_literals" (formula "5") (term "1,0"))
                        (rule "times_zero_1" (formula "5") (term "0"))
                        (rule "qeq_literals" (formula "5"))
                        (rule "true_left" (formula "5"))
                        (rule "applyEq" (formula "1") (term "0,2,0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_addComm1" (formula "1") (term "0"))
                        (rule "applyEq" (formula "4") (term "0") (ifseqformula "3"))
                        (rule "inEqSimp_homoInEq1" (formula "4"))
                        (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
                        (rule "add_literals" (formula "4") (term "1,0"))
                        (rule "times_zero_1" (formula "4") (term "0"))
                        (rule "leq_literals" (formula "4"))
                        (rule "true_left" (formula "4"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1"))
                        (rule "polySimp_rightDist" (formula "1") (term "1"))
                        (rule "mul_literals" (formula "1") (term "0,1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "1,1"))
                        (rule "polySimp_elimOne" (formula "1") (term "1,1"))
                        (rule "nnf_imp2or" (formula "13") (term "0"))
                        (rule "nnf_imp2or" (formula "12") (term "0,1"))
                        (rule "nnf_notAnd" (formula "13") (term "0,0"))
                        (rule "inEqSimp_notLeq" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,1,0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "13") (term "1,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,1,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,1,0,0"))
                        (rule "inEqSimp_notGeq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0,0"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0"))
                        (rule "polySimp_mulLiterals" (formula "13") (term "1,1,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0"))
                        (rule "polySimp_elimOne" (formula "13") (term "1,1,0,0,0"))
                        (rule "inEqSimp_or_antiSymm0" (formula "13") (term "0,0"))
                        (rule "polySimp_homoEq" (formula "13") (term "0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,0,0,0,0"))
                        (rule "polySimp_mulComm0" (formula "13") (term "1,1,0,0,0,0"))
                        (rule "polySimp_rightDist" (formula "13") (term "1,1,0,0,0,0"))
                        (rule "mul_literals" (formula "13") (term "0,1,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,0,1,0,0"))
                        (rule "add_literals" (formula "13") (term "0,1,0,1,0,0"))
                        (rule "add_zero_left" (formula "13") (term "1,0,1,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "1,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,1,0,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "13") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "13") (term "0,0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "0,0,0,0,0,0"))
                        (rule "add_zero_left" (formula "13") (term "0,0,0,0,0"))
                        (rule "polySimp_pullOutFactor1" (formula "13") (term "0,0,0,0"))
                        (rule "add_literals" (formula "13") (term "1,0,0,0,0"))
                        (rule "times_zero_1" (formula "13") (term "0,0,0,0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "nnf_notAnd" (formula "12") (term "0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_or_antiSymm0" (formula "12") (term "0,0,1"))
                        (rule "polySimp_homoEq" (formula "12") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,0,0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0,0,0,1"))
                        (rule "mul_literals" (formula "12") (term "0,1,1,0,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0,1,0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,1,0,1,0,0,1"))
                        (rule "add_zero_left" (formula "12") (term "1,0,1,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,1,0,0,0,0,1"))
                        (rule "polySimp_addAssoc" (formula "12") (term "0,0,0,0,1"))
                        (rule "polySimp_addComm1" (formula "12") (term "0,0,0,0,0,1"))
                        (rule "add_literals" (formula "12") (term "0,0,0,0,0,0,1"))
                        (rule "add_zero_left" (formula "12") (term "0,0,0,0,0,1"))
                        (rule "polySimp_pullOutFactor1" (formula "12") (term "0,0,0,0,1"))
                        (rule "add_literals" (formula "12") (term "1,0,0,0,0,1"))
                        (rule "times_zero_1" (formula "12") (term "0,0,0,0,1"))
                        (builtin "One Step Simplification" (formula "12"))
                        (rule "commute_or" (formula "13") (term "0"))
                        (builtin "One Step Simplification" (formula "13"))
                        (rule "inEqSimp_commuteLeq" (formula "13"))
                        (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "13"))
                        (rule "andLeft" (formula "1"))
                        (rule "inEqSimp_homoInEq1" (formula "1"))
                        (rule "polySimp_mulComm0" (formula "1") (term "1,0"))
                        (rule "polySimp_rightDist" (formula "1") (term "1,0"))
                        (rule "mul_literals" (formula "1") (term "0,1,0"))
                        (rule "polySimp_addAssoc" (formula "1") (term "0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_pullOutFactor1b" (formula "1") (term "0"))
                        (rule "add_literals" (formula "1") (term "1,1,0"))
                        (rule "times_zero_1" (formula "1") (term "1,0"))
                        (rule "add_zero_right" (formula "1") (term "0"))
                        (rule "leq_literals" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch
                        (builtin "One Step Simplification" (formula "14"))
                        (rule "inEqSimp_ltRight" (formula "11"))
                        (rule "polySimp_mulComm0" (formula "1") (term "0,0"))
                        (rule "polySimp_addComm0" (formula "1") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "9"))
                        (rule "polySimp_mulComm0" (formula "9") (term "1,0,0"))
                        (rule "polySimp_addComm1" (formula "9") (term "0"))
                        (rule "inEqSimp_ltToLeq" (formula "11") (term "0"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0"))
                        (rule "polySimp_addAssoc" (formula "11") (term "0,0,0"))
                        (rule "add_literals" (formula "11") (term "0,0,0,0"))
                        (rule "polySimp_addComm1" (formula "11") (term "0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "10") (term "0"))
                        (rule "times_zero_1" (formula "10") (term "1,0,0,0"))
                        (rule "add_literals" (formula "10") (term "0,0,0"))
                        (rule "inEqSimp_gtToGeq" (formula "10") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,1"))
                        (rule "inEqSimp_sepNegMonomial1" (formula "1"))
                        (rule "polySimp_mulLiterals" (formula "1") (term "0"))
                        (rule "polySimp_elimOne" (formula "1") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "9"))
                        (rule "polySimp_mulLiterals" (formula "9") (term "0"))
                        (rule "polySimp_elimOne" (formula "9") (term "0"))
                        (rule "inEqSimp_sepNegMonomial0" (formula "11") (term "0"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "0,0"))
                        (rule "polySimp_elimOne" (formula "11") (term "0,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "0"))
                        (rule "mul_literals" (formula "10") (term "1,0"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,1"))
                        (rule "nnf_imp2or" (formula "11") (term "0,1"))
                        (rule "nnf_imp2or" (formula "10") (term "0,1"))
                        (rule "nnf_notAnd" (formula "11") (term "0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,0,0,0,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "11") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0,1"))
                        (rule "nnf_notAnd" (formula "10") (term "0,0,1"))
                        (rule "inEqSimp_notGeq" (formula "10") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial0" (formula "10") (term "0,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,0,0,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,0,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,0,0,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,0,0,0,1"))
                        (rule "inEqSimp_notLeq" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,0,0,1,0,0,1"))
                        (rule "inEqSimp_sepPosMonomial1" (formula "10") (term "1,0,0,1"))
                        (rule "polySimp_mulComm0" (formula "10") (term "1,1,0,0,1"))
                        (rule "polySimp_rightDist" (formula "10") (term "1,1,0,0,1"))
                        (rule "polySimp_mulLiterals" (formula "10") (term "1,1,1,0,0,1"))
                        (rule "mul_literals" (formula "10") (term "0,1,1,0,0,1"))
                        (rule "polySimp_elimOne" (formula "10") (term "1,1,1,0,0,1"))
                        (rule "Class_invariant_axiom_for_Quicksort" (formula "14") (inst "sk=sk_1") (ifseqformula "4"))
                        (branch "Use Axiom"
                           (rule "closeTrue" (formula "14"))
                        )
                        (branch "Show Axiom Satisfiability"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "closeTrue" (formula "14"))
                        )
                     )
                  )
               )
            )
         )
         (branch
            (builtin "One Step Simplification" (formula "14"))
            (rule "closeTrue" (formula "14"))
         )
      )
      (branch
         (builtin "One Step Simplification" (formula "14"))
         (rule "closeTrue" (formula "14"))
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "11"))
   (rule "closeTrue" (formula "11"))
)
)

}
