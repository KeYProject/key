# This file is part of KeY - Integrated Deductive Software Design
# Copyright (C) 2001-2011 Universitaet Karlsruhe Germany
#                         Universitaet Koblenz-Landau, Germany
#                         and Chalmers University of Technology, Sweden
#
# The KeY system is protected by the GNU General Public License.
# See LICENSE.TXT for details.

#
# This file describes the benchmark problems.
# Files marked as provable should be closed automatically.
# Files marked as nonprovable should be not closable.
#
# It is used by bin/runAllProofs.pl.
#

/*
 * Defines a base directory.
 * All paths in this file are treated relative to base directory (except path for base directory itself).
 */
baseDirectory = ../

/*
 * Defines a statistics file.
 * Path is relative to base directory.
 */
statisticsFile = ../../key.core.test/testresults/runallproofs/runStatistics_infflow.csv

/*
 * Fork mode setting, can be declared to create subprocesses while running tests declared in this file.
 * Possible modes: noFork - all files are proven within a single process
 *                 perGroup - one subprocess is created for each group
 *                 perFile - one subprocess is created for each file
 */
forkMode = noFork

/*
 * Enable or disable proof reloading.
 * If enabled, closed proofs will be saved and reloaded after prover is finished.
 */
reloadEnabled = false

/*
 * Temporary directory, which is used for inter process communication when using forked mode.
 * The given path is relative to baseDirectory.
 */
tempDir = ../../key.core.test/runallproofs_infflow_tmp

/*
 * If the fork mode is not set to noFork, the launched subprocesses are terminated as
 * soon as the timeout specified here has elapsed. No timeout occurs if not specified.
 *
 * Timeout per subprocess in seconds
 */
forkTimeout = 1000

/*
 * If the fork mode is not set to noFork, the launched subprocesses
 * get the specified amount of heap memory.
 *
 * Heap memory for subprocesses (like 500m or 2G)
 */
# forkMemory = 1000m

/*
 * By default runAllProofs does not print a lot of information.
 * Set this to true to get more output.
 */
verboseOutput = true

/*
 * By default, runAllProofs runs all groups in this file.
 * By naming a comma separated list of groups here, the
 * test can be restricted to these groups (for debugging).
 */
# runOnlyOn = group1,group2

# # Tests for information flow

group ToyBanking_nomacro {
  provable "./InformationFlow/ToyBanking/banking_example.BankAccount(banking_example.BankAccount__depositMoney(int)).Non-interference contract.0.key"
  provable "./InformationFlow/ToyBanking/banking_example.BankAccount(banking_example.BankAccount__getBalance()).Non-interference contract.0.key"
  provable "./InformationFlow/ToyBanking/banking_example.BankAccount(banking_example.BankAccount__getId()).Non-interference contract.0.key"
  notprovable "./InformationFlow/ToyBanking/banking_example.Bank(banking_example.Bank__login(int,(C)).Non-interference contract.0.key"
}


# End -- please do not remove this line.
