# This file is part of KeY - Integrated Deductive Software Design
# Copyright (C) 2001-2011 Universitaet Karlsruhe Germany
#                         Universitaet Koblenz-Landau, Germany
#                         and Chalmers University of Technology, Sweden
#
# The KeY system is protected by the GNU General Public License. 
# See LICENSE.TXT for details.

#
# This file describes the benchmark problems.
# Files marked as provable should be closed automatically.
# Files marked as nonprovable should be not closable.
#
# RunAllProofs documentation can be found at: key/doc/README.runAllProofs
#

/*
 * Defines a base directory.
 * All paths in this file are treated relative to base directory (except path for base directory itself).
 */
baseDirectory = ../

/*
 * Defines a statistics file.
 * Path is relative to base directory.
 */
statisticsFile = ../../key.core.test/testresults/runallproofs/runStatistics.csv

/*
 * Fork mode setting, can be declared to create subprocesses while running tests declared in this file.
 * Possible modes: noFork - all files are proven within a single process
 *                 perGroup - one subprocess is created for each group
 *                 perFile - one subprocess is created for each file
 */
forkMode = perGroup

/*
 * Enable or disable proof reloading.
 * If enabled, closed proofs will be saved and reloaded after prover is finished.
 */
reloadEnabled = true

/*
 * Temporary directory, which is used for inter process communication when using forked mode.
 * The given path is relative to baseDirectory.
 */
tempDir = ../../key.core.test/runallproofs_tmp

/*
 * If the fork mode is not set to noFork, the launched subprocesses are terminated as
 * soon as the timeout specified here has elapsed. No timeout occurs if not specified.
 * 
 * Timeout per subprocess in seconds
 */
forkTimeout = 2000

/*
 * If the fork mode is not set to noFork, the launched subprocesses 
 * get the specified amount of heap memory.
 * 
 * Heap memory for subprocesses (like 500m or 2G)
 */
# forkMemory = 1000m

/*
 * To run the forked JVM in debug mode, set the TCP port to listen to here.
 * You can prefix the port with "wait:" to make the JVM suspend till the
 * process has connected.
 *
 * Examples:  forkDebugPort = "8000"
 *            forkDebugPort = "wait:1234"
 */
# forkDebugPort = "wait:1234"

/*
 * By default runAllProofs does not print a lot of information.
 * Set this to true to get more output.
 */
 verboseOutput = true

/*
 * By default, runAllProofs runs all groups in this file.
 * By naming a comma separated list of groups here, the
 * test can be restricted to these groups (for debugging).
 */
# runOnlyOn = group1,group2

keySettings = "#Proof-Settings-Config-File
#Mon Aug 03 16:58:18 CEST 2009
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
# The 'Defaults' are ON for the following:
[StrategyProperty]DEP_OPTIONS_KEY=DEP_OFF
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]SYMBOLIC_EXECUTION_ALIAS_CHECK_OPTIONS_KEY=SYMBOLIC_EXECUTION_ALIAS_CHECK_NEVER
[StrategyProperty]SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OPTIONS_KEY=SYMBOLIC_EXECUTION_NON_EXECUTION_BRANCH_HIDING_OFF
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_SCOPE_INVARIANT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
# The 'Defaults' are NONE for the following.
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_DEF_OPS
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT_INTERNAL
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[StrategyProperty]OSS_OPTIONS_KEY=OSS_ON
[DecisionProcedure]Timeout=60
[Strategy]Timeout=-1
[Strategy]MaximumNumberOfAutomaticApplications=10000
[SMTSettings]integersMaximum=2147483645
[SMTSettings]integersMinimum=-2147483645
[SMTSettings]invariantForall=false
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[SMTSettings]useUninterpretedMultiplication=true
[SMTSettings]SelectedTaclets=
[Choice]DefaultChoices=assertions-assertions:on , intRules-intRules:arithmeticSemanticsIgnoringOF , initialisation-initialisation:disableStaticInitialisation , programRules-programRules:Java , runtimeExceptions-runtimeExceptions:ban , JavaCard-JavaCard:on , Strings-Strings:on , modelFields-modelFields:showSatisfiability , bigint-bigint:on , sequences-sequences:on , reach-reach:on , integerSimplificationRules-integerSimplificationRules:full , wdOperator-wdOperator:L , wdChecks-wdChecks:off , permissions-permissions:off , moreSeqRules-moreSeqRules:off , mergeGenerateIsWeakeningGoal-mergeGenerateIsWeakeningGoal:off
[Strategy]ActiveStrategy=JavaCardDLStrategy

"

# Examples used in the new book
group newBook {
   provable ./newBook/09.list_modelfield/ArrayList.add.key
   provable ./newBook/09.list_modelfield/ArrayList.remFirst.key
   provable ./newBook/09.list_modelfield/ArrayList.empty.key
   provable ./newBook/09.list_modelfield/ArrayList.size.key
   provable ./newBook/09.list_modelfield/ArrayList.get.key
}

group oldBook {
   provable ./standard_key/BookExamples/02FirstOrderLogic/Ex2.58.key
   provable ./standard_key/BookExamples/03DynamicLogic/Sect3.3.1.key
}

# Comprehension Tests
group comprehensions {
   provable ./heap/comprehensions/general_sum.key
   provable ./heap/comprehensions/sum0.key
   provable ./heap/comprehensions/sum1.key
   provable ./heap/comprehensions/sum2.key
   provable ./heap/comprehensions/sum3.key
   provable ./heap/comprehensions/segsum.key
   provable ./heap/comprehensions/bsum_negative.key
   provable ./heap/comprehensions/bsum_neg2.key
   provable ./heap/comprehensions/bsumSplit.key
   provable ./heap/comprehensions/bprodSplit.key
   notprovable ./heap/comprehensions/bsumSplitInvalid.key
}

# Performance tests
group performance {
   provable ./performance-test/Disjoint(Disjoint__disjoint_08()).JML_operation_contract.0.key
   provable ./performance-test/Disjoint(Disjoint__disjoint2_08()).JML_operation_contract.0.key
   provable ./performance-test/AccessChain1(AccessChain1__foo_08()).JML_operation_contract.0.key
   provable ./performance-test/AccessChain4(AccessChain4__foo_08()).JML_operation_contract.0.key
   provable ./performance-test/Disjoint(Disjoint__xZero_08()).JML_operation_contract.0.key
   provable ./performance-test/Dynamic(Dynamic__foo_08()).JML_operation_contract.0.key
   provable ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_08()).JML_normal_behavior_operation_contract.0.key
   provable ./performance-test/GhostFrame(GhostFrame__foo_08()).JML_operation_contract.0.key
   provable ./performance-test/Modelfield(Modelfield__foo_08()).JML_operation_contract.0.key
}

# Test performance of PO construction
group performancePOConstruction {
   provable ./performance-test/Test(Test__a0(int)).JML_normal_behavior_operation_contract.0.key
   provable ./performance-test/Test(Test__a1(int)).JML_normal_behavior_operation_contract.0.key
   provable ./performance-test/Test(Test__f1(int)).JML_normal_behavior_operation_contract.0.key
}

# Tests for rule application restrictions
group applicationRestrictions {
   provable ./heap/polarity_tests/wellformed1.key
   notprovable ./heap/polarity_tests/wellformed2.key
   provable ./heap/polarity_tests/wellformed3.key
   notprovable ./heap/polarity_tests/wellformed4.key
   provable ./heap/polarity_tests/wellformed5.key
   notprovable ./heap/polarity_tests/wellformed6.key
   provable ./heap/polarity_tests/wellformed7.key
   notprovable ./heap/polarity_tests/wellformed8.key
   provable ./heap/polarity_tests/wellformed9.key
   notprovable ./heap/polarity_tests/wellformed10.key
   notprovable ./heap/polarity_tests/wellformed11.key
}

# Tests for block & loop contracts:
group blockContracts {
   provable ./heap/block_contracts/Simple__add.key
   provable ./heap/block_contracts/Simple__addAbsoluteValues.key
   provable ./heap/block_contracts/Simple__addWithJump.key
   provable ./heap/block_contracts/Simple__addWithTwoBlockContracts.key
   provable ./heap/block_contracts/Simple__generateByteArray.key
   provable ./heap/block_contracts/Simple__getLength.key
   provable ./heap/block_contracts/Simple__square.key
   provable ./heap/block_contracts/Simple__unnecessaryBlockContract.key
   provable ./heap/block_contracts/Simple__unnecessaryLoopInvariant.key
# the following test has a reload problem probably caused by the one-step-simplifier
# provable: ./heap/block_contracts/GreatestCommonDivisor.key
   provable ./standard_key/java_dl/jml-assert/assert.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_external.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_internal.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_loop.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_external.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_internal.key
   provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_loop.key
   notprovable ./heap/block_loop_contracts/Finally/block_finally.key
   notprovable ./heap/block_loop_contracts/Finally/loop_finally.key
}

# Tests for Java Card (should also include the API, pending fix to bug #1475)
group javaCard {
   provable ./heap/javacard/updateBalance0.key
   provable ./heap/javacard/updateBalance1.key
   provable ./heap/javacard/setArray1.key
   provable ./heap/javacard/setArray2.key
# For this only "half" of the proof is done (see bug #1475), but it makes sure that the PO with two subproofs is initialisable:
   provable ./heap/javacard/arrayFillNonAtomic.key
}

# Other tests:
   provable ./heap/coincidence_count/project.key
   provable ./heap/verifyThis11_1_Maximum/project.key
   provable ./heap/fm12_01_LRS/lcp.key
   provable ./heap/SemanticSlicing/project.key
   provable ./heap/information_flow/ArrayList_contains.key
   provable ./heap/information_flow/ArrayList_get.key
   provable ./heap/information_flow/ArrayList_size.key
   provable ./heap/information_flow/UpdateAbstraction_ex7_3_secure.key
   provable ./heap/information_flow/UpdateAbstraction_ex7_4_secure.key
   provable ./heap/information_flow/UpdateAbstraction_ex7_5_secure.key
   provable ./heap/information_flow/UpdateAbstraction_ex7_6_secure.key
   provable ./heap/information_flow/UpdateAbstraction_ex9_secure.key

group list {
   provable ./heap/list/ArrayList_add.key
   provable ./heap/list/ArrayList_ArrayList.key
   provable ./heap/list/ArrayList_concatenate.key
   provable ./heap/list/ArrayList_contains_dep.key
   provable ./heap/list/ArrayList_enlarge.key
   provable ./heap/list/ArrayList_footprint.key
   provable ./heap/list/ArrayList_get_dep.key
   provable ./heap/list/ArrayList_get_exceptional.key
   provable ./heap/list/ArrayList_get_normal.key
   provable ./heap/list/ArrayList_inv.key
   provable ./heap/list/ArrayList_iterator.key
   provable ./heap/list/ArrayList_size_dep.key
   provable ./heap/list/ArrayList_size.key
   provable ./heap/list/ArrayList.ArrayListIterator_ArrayListIterator.key
   provable ./heap/list/ArrayList.ArrayListIterator_hasNext_dep.key
   provable ./heap/list/ArrayList.ArrayListIterator_hasNext.key
   provable ./heap/list/ArrayList.ArrayListIterator_inv.key
   provable ./heap/list/ArrayList.ArrayListIterator_list.key
   provable ./heap/list/ArrayList.ArrayListIterator_next_exceptional.key
   provable ./heap/list/ArrayList.ArrayListIterator_next_normal.key
   provable ./heap/list/ArrayList.ArrayListIterator_pos.key
   provable ./heap/list/Client_m.key
   provable ./heap/list/Client_n.key
   provable ./heap/list/LinkedList_get_exceptional.key
   provable ./heap/list/LinkedList_get_normal.key
   provable ./heap/list/LinkedList_LinkedList.key
   provable ./heap/list/LinkedList_size_dep.key
   provable ./heap/list/LinkedList_size.key
   provable ./heap/list/MySet_footprint.key
   provable ./heap/list/MySet_MySet.key
}

group list_ghost {
   provable ./heap/list_ghost/ArrayList_add.key
   provable ./heap/list_ghost/ArrayList_ArrayList.key
   provable ./heap/list_ghost/ArrayList_enlarge.key
   provable ./heap/list_ghost/ArrayList_get_dep.key
   provable ./heap/list_ghost/ArrayList_get_exceptional.key
   provable ./heap/list_ghost/ArrayList_get_normal.key
   provable ./heap/list_ghost/ArrayList_inv.key
   provable ./heap/list_ghost/ArrayList_size_dep.key
   provable ./heap/list_ghost/ArrayList_size.key
}

group list_recursive {
   provable ./heap/list_recursiveSpec/ListOperationsNonNull_getNextNN_normal_behavior.key
   provable ./heap/list_recursiveSpec/ListOperationsNonNull_setValueAt_normal_behavior.key
   provable ./heap/list_recursiveSpec/ListOperationsNonNull_remove_normal_behavior.key
}

group list_seq {
   provable ./heap/list_seq/SimplifiedLinkedList.remove.key
   provable ./heap/list_seq/ArrayList.ArrayList.key
   provable ./heap/list_seq/ArrayList.add.key
   provable ./heap/list_seq/ArrayList.contains.key
   provable ./heap/list_seq/ArrayList.enlarge.key
   provable ./heap/list_seq/ArrayList.get.key
   provable ./heap/list_seq/ArrayList.newArray.key
   provable ./heap/list_seq/ArrayList.remove.0.key
   provable ./heap/list_seq/ArrayList.remove.1.key
}

group observer {
   provable ./heap/observer/ExampleObserver_ExampleObserver.key
   provable ./heap/observer/ExampleObserver_inv.key
   provable ./heap/observer/ExampleObserver_subject.key
   provable ./heap/observer/ExampleObserver_update.key
   provable ./heap/observer/ExampleObserver_upToDate.key
   provable ./heap/observer/ExampleObserver_value.key
   provable ./heap/observer/ExampleSubject_addObserver.key
   provable ./heap/observer/ExampleSubject_change.key
   provable ./heap/observer/ExampleSubject_ExampleSubject.key
   provable ./heap/observer/ExampleSubject_footprint.key
   provable ./heap/observer/ExampleSubject_inv.key
   provable ./heap/observer/ExampleSubject_notifyObservers.key
   provable ./heap/observer/ExampleSubject_value_dep.key
   provable ./heap/observer/ExampleSubject_value.key
}

group removeDups {
   provable ./heap/removeDups/arrayPart.key
   provable ./heap/removeDups/contains.key
   provable ./heap/removeDups/removeDup.key
}

provable ./heap/saddleback_search/Saddleback_search.key

group quicksort {
   localSettings="
     [Choice]DefaultChoices=moreSeqRules-moreSeqRules:on
   "
   directory = ./heap/quicksort

   provable toplevel.key
   provable sort.key
   provable split.key
}

/*
 * These are simpler regression tests that show a certain feature works
 * fine.
 */
group simpleTests {
   provable ./heap/simple/anonymise_datagroup.key
   provable ./heap/simple/array_creation.key
   provable ./heap/simple/arrays_with_disjoint_sorts.key
   provable ./heap/simple/arrays.key
   provable ./heap/simple/attributes.key
   provable ./heap/simple/constructor_contracts.key
   provable ./heap/simple/dependencies.key
   provable ./heap/simple/dependency_contracts.key
   provable ./heap/simple/invariant_preservation.key
   provable ./heap/simple/locsets.key
   provable ./heap/simple/loop1.key
   provable ./heap/simple/loop2.key
   provable ./heap/simple/modifies_datagroup.key
   provable ./heap/simple/modifies.key
   provable ./heap/simple/object_creation.key
   provable ./heap/simple/operation_contracts.key
   provable ./heap/simple/select_store.key
   provable ./heap/simple/selection_sort.key
   provable ./heap/simple/seq.key
   provable ./heap/simple/oldForParams.key
   provable ./heap/simple/parse_lmtd.key
   provable ./heap/strictly_pure/strictlyPureMethod.key
   provable ./heap/strictly_pure/useStrictlyPureMethod.key
   provable ./heap/Wellfounded/ackermann.key
   provable ./standard_key/unicode_test.key
   provable ./heap/strictlyModular/mayExpand.key
   notprovable ./heap/strictlyModular/modularOnly.key
}

group SmansEtAl {
   provable ./heap/SmansEtAl/ArrayList_add.key
   provable ./heap/SmansEtAl/ArrayList_ArrayList.key
   provable ./heap/SmansEtAl/ArrayList_footprint.key
   provable ./heap/SmansEtAl/ArrayList_get_dep.key
   provable ./heap/SmansEtAl/ArrayList_get.key
   provable ./heap/SmansEtAl/ArrayList_inv.key
   provable ./heap/SmansEtAl/ArrayList_size_dep.key
   provable ./heap/SmansEtAl/ArrayList_size.key
   provable ./heap/SmansEtAl/Cell_Cell.key
   provable ./heap/SmansEtAl/Cell_footprint.key
   provable ./heap/SmansEtAl/Cell_getX_dep.key
   provable ./heap/SmansEtAl/Cell_getX.key
   provable ./heap/SmansEtAl/Cell_inv.key
   provable ./heap/SmansEtAl/Cell_setX.key
   provable ./heap/SmansEtAl/CellClient_m.key
   provable ./heap/SmansEtAl/Iterator_footprint.key
   provable ./heap/SmansEtAl/Iterator_hasNext_dep.key
   provable ./heap/SmansEtAl/Iterator_hasNext.key
   provable ./heap/SmansEtAl/Iterator_inv.key
   provable ./heap/SmansEtAl/Iterator_Iterator.key
   provable ./heap/SmansEtAl/Iterator_list_dep.key
   provable ./heap/SmansEtAl/Iterator_list.key
   provable ./heap/SmansEtAl/Iterator_next.key
   provable ./heap/SmansEtAl/Stack_footprint.key
   provable ./heap/SmansEtAl/Stack_inv.key
   provable ./heap/SmansEtAl/Stack_push.key
   provable ./heap/SmansEtAl/Stack_size.key
   provable ./heap/SmansEtAl/Stack_Stack.key
   provable ./heap/SmansEtAl/Stack_switchContents.key
}

group VACID0 {
   provable ./heap/vacid0_01_SparseArray/Harness_sparseArrayTestHarness1.key
   provable ./heap/vacid0_01_SparseArray/Harness_sparseArrayTestHarness2.key
   provable ./heap/vacid0_01_SparseArray/MemoryAllocator_alloc_unsigned.key
   provable ./heap/vacid0_01_SparseArray/MemoryAllocator_alloc.key
   provable ./heap/vacid0_01_SparseArray/SparseArray_get_dep.key
   provable ./heap/vacid0_01_SparseArray/SparseArray_get.key
   provable ./heap/vacid0_01_SparseArray/SparseArray_inv.key
   provable ./heap/vacid0_01_SparseArray/SparseArray_SparseArray.key
}

group VSTTE10 {
   provable ./heap/vstte10_01_SumAndMax/SumAndMax_sumAndMax.key
   provable ./heap/vstte10_03_LinkedList/Node_cons.key
   provable ./heap/vstte10_03_LinkedList/Node_inv.key
   provable ./heap/vstte10_03_LinkedList/Node_search.key
   provable ./heap/vstte10_04_Queens/Queens_isConsistent.key
   provable ./heap/vstte10_04_Queens/Queens_nQueens.key
   provable ./heap/vstte10_05_Queue/AmortizedQueue_AmortizedQueue.key
   provable ./heap/vstte10_05_Queue/AmortizedQueue_front.key
   provable ./heap/vstte10_05_Queue/LinkedList_concat.key
   provable ./heap/vstte10_05_Queue/LinkedList_cons.key
   provable ./heap/vstte10_05_Queue/LinkedList_head.key
   provable ./heap/vstte10_05_Queue/LinkedList_inv.key
   provable ./heap/vstte10_05_Queue/LinkedList_length.key
   provable ./heap/vstte10_05_Queue/LinkedList_LinkedList1.key
   provable ./heap/vstte10_05_Queue/LinkedList_LinkedList2.key
   provable ./heap/vstte10_05_Queue/LinkedList_LinkedList3.key
   provable ./heap/vstte10_05_Queue/LinkedList_reverse.key
   provable ./heap/vstte10_05_Queue/LinkedList_tail.key
}

group WeideEtAl {
   provable ./heap/WeideEtAl_01_AddAndMultiply/AddAndMultiply_add.key
   provable ./heap/WeideEtAl_01_AddAndMultiply/AddAndMultiply_mul.key
   provable ./heap/WeideEtAl_02_BinarySearch/BinarySearch_search.key
}

# this file contains Unicode symbols for logic operators
group arithmetic {
   provable ./standard_key/arith/binomial1.key
   provable ./standard_key/arith/binomial2.key
   provable ./standard_key/arith/check_jdiv.key
   provable ./standard_key/arith/check_jdiv_concrete.key
   provable ./standard_key/arith/check_jdiv_instantiated.key
   provable ./standard_key/arith/check_jmod.key
   provable ./standard_key/arith/complexExpressions.key
   provable ./standard_key/arith/compound_unaryMinus.key
   provable ./standard_key/arith/computation.key
   provable ./standard_key/arith/cubicSum.key
   provable ./standard_key/arith/divByZero.key
   provable ./standard_key/arith/divisionAssoc.key
   provable ./standard_key/arith/divisionBy2.key
   provable ./standard_key/arith/euclidean/gcdHelp-post.key
   provable ./standard_key/arith/gemplusDecimal/add.key
   provable ./standard_key/arith/jdivevenodd.key
   provable ./standard_key/arith/median.key
   provable ./standard_key/arith/mod1.key
   provable ./standard_key/arith/mod2.key
   provable ./standard_key/arith/mod7.key
   provable ./standard_key/arith/overflow_hija.key
   provable ./standard_key/arith/poly_division0.key
   provable ./standard_key/arith/poly_division1.key
   provable ./standard_key/inEqSimp/division.key
   provable ./standard_key/inEqSimp/inequations0.key
   provable ./standard_key/inEqSimp/inequations1.key
   provable ./standard_key/inEqSimp/inequations2.key
   provable ./standard_key/inEqSimp/linApprox.key
   provable ./standard_key/inEqSimp/nonLinInEqExample0.key
   provable ./standard_key/inEqSimp/nonLinInEqExample2.key
   provable ./standard_key/inEqSimp/nonLinInEqExample3.key
   provable ./standard_key/inEqSimp/nonLinInEqExample4.key
   provable ./standard_key/inEqSimp/quadraticInEq.key
   provable ./standard_key/inEqSimp/quadraticInEq10.key
   provable ./standard_key/inEqSimp/quadraticInEq13.key
   provable ./standard_key/inEqSimp/quadraticInEq14.key
   provable ./standard_key/inEqSimp/quadraticInEq2.key
   provable ./standard_key/inEqSimp/quadraticInEq3.key
   provable ./standard_key/inEqSimp/quadraticInEq4.key
   provable ./standard_key/inEqSimp/quadraticInEq5.key
   provable ./standard_key/inEqSimp/quadraticInEq6.key
   provable ./standard_key/inEqSimp/quadraticInEq7.key
   provable ./standard_key/inEqSimp/quadraticInEq8.key
   provable ./standard_key/inEqSimp/simplify0.key
   provable ./standard_key/inEqSimp/simplify1.key
   provable ./standard_key/inEqSimp/simplify2.key
   provable ./standard_key/inEqSimp/simplify3.key
   provable ./standard_key/inEqSimp/simplify4.key
   provable ./standard_key/inEqSimp/simplify5.key
   provable ./standard_key/inEqSimp/subsumptionExample.key
   provable ./standard_key/polySimp/simplify0.key
   provable ./standard_key/polySimp/simplify1.key
   provable ./standard_key/polySimp/simplify10.key
   provable ./standard_key/polySimp/simplify11.key
   provable ./standard_key/polySimp/simplify12.key
   provable ./standard_key/polySimp/simplify13.key
   provable ./standard_key/polySimp/simplify14.key
   provable ./standard_key/polySimp/simplify15.key
   provable ./standard_key/polySimp/simplify16.key
   provable ./standard_key/polySimp/simplify17.key
   provable ./standard_key/polySimp/simplify18.key
   provable ./standard_key/polySimp/simplify19.key
   provable ./standard_key/polySimp/simplify2.key
   provable ./standard_key/polySimp/simplify20.key
   provable ./standard_key/polySimp/simplify21.key
   provable ./standard_key/polySimp/simplify22.key
   provable ./standard_key/polySimp/simplify23.key
   provable ./standard_key/polySimp/simplify24.key
   provable ./standard_key/polySimp/simplify25.key
   provable ./standard_key/polySimp/simplify3.key
   provable ./standard_key/polySimp/simplify4.key
   provable ./standard_key/polySimp/simplify5.key
   provable ./standard_key/polySimp/simplify6.key
   provable ./standard_key/polySimp/simplify7.key
   provable ./standard_key/polySimp/simplify8.key
   provable ./standard_key/polySimp/simplify9.key
}

group arrays {
   provable ./standard_key/arrays/arrayStoreException/array2DimPrim.key
   provable ./standard_key/arrays/arrayStoreException/arrayStoreKnownDynType.key
   provable ./standard_key/arrays/arrayStoreException/reverseArray.key
   provable ./standard_key/arrays/arrayStoreException/throwArrayStoreException.key
   provable ./standard_key/arrays/creation/arrayCreation1.key
   notprovable ./standard_key/arrays/arrayStoreException/array2Dim.key
   notprovable ./standard_key/arrays/arrayStoreException/array2DimClose.key
   notprovable ./standard_key/arrays/arrayStoreException/throwASEForPrim.key
}

group javadl {
   provable ./standard_key/instanceCreation/instanceCreation1.key
   provable ./standard_key/instanceCreation/instanceCreation2.key
   provable ./standard_key/instanceCreation/interfacesAndAbstractClassesHaveNoInstances.key
   provable ./standard_key/instanceCreation/successiveCreatedObjectsAreDistinct.key
   provable ./standard_key/instanceCreation/testOverloadingConstructors.key
   provable ./standard_key/java_dl/SimpleAttributes.key
   provable ./standard_key/java_dl/arrayMax.key
   provable ./standard_key/java_dl/arrayUpdateSimp.key
   provable ./standard_key/java_dl/attributes.key
   provable ./standard_key/java_dl/break.key
   provable ./standard_key/java_dl/char.key
   provable ./standard_key/java_dl/compileTimeConstants.key
   provable ./standard_key/java_dl/constructorException/test.key
   notprovable ./standard_key/java_dl/constructorException/regressionTestBug1333.key
   provable ./standard_key/java_dl/continue1.key
   provable ./standard_key/java_dl/continue2.key
   provable ./standard_key/java_dl/complexAssignment.key
   provable ./standard_key/java_dl/danglingElseSolution1.key
   provable ./standard_key/java_dl/danglingElseSolution2.key
   provable ./standard_key/java_dl/deepNonNull/deepNonNull0.key
   provable ./standard_key/java_dl/deepNonNull/deepNonNull1.key
   notprovable ./standard_key/java_dl/deepNonNull/deepNonNull2.key
   provable ./standard_key/java_dl/deepNonNull/deepNonNull3.key
   provable ./standard_key/java_dl/exceptions.key
   provable ./standard_key/java_dl/exceptions1.key
   provable ./standard_key/java_dl/exceptions2.key
   provable ./standard_key/java_dl/exceptions3.key
   provable ./standard_key/java_dl/exchange.key
   provable ./standard_key/java_dl/if.key
   provable ./standard_key/java_dl/incrementcounter.key
   notprovable ./standard_key/java_dl/danglingElse.key
   # commented out - in the current handling of this references (from branch mostThisRef)
   # inner classes do not work. According to Richard, there is a bug in handling inner classes
   # that needs a non-trivial fix.
   # provable: ./standard_key/java_dl/innerClasses/inner.key
   provable ./standard_key/java_dl/iteratedAssignment.key
   notprovable ./standard_key/java_dl/assert/assert1.key
   provable ./standard_key/java_dl/assert/assert2.key
   notprovable ./standard_key/java_dl/assert/assert3.key
   provable ./standard_key/java_dl/java5/vararg.key
   provable ./standard_key/java_dl/java5/for_Array.key
   provable ./standard_key/java_dl/java5/for_Iterable.key
   provable ./standard_key/java_dl/java5/for_ReferenceArray.key
   provable ./standard_key/java_dl/jml-bigint/cast.key
   provable ./standard_key/java_dl/jml-free/loopInvFree.key
   provable ./standard_key/java_dl/jml-free/ensuresFree.key
# proof gets very long
# requires further investigations
   provable ./standard_key/java_dl/jml-information-flow.key
   notprovable ./standard_key/java_dl/jml-min/min-unprovable1.key
   notprovable ./standard_key/java_dl/jml-min/min-unprovable2.key
   provable ./standard_key/java_dl/methodCall.key
   provable ./standard_key/java_dl/methodCall1.key
   provable ./standard_key/java_dl/methodCall1box.key
## Commented out as this can not be proved modularly sound (See !183 which is related)
#  provable ./standard_key/java_dl/methodCall2.key
   provable ./standard_key/java_dl/methodCall3.key
   provable ./standard_key/java_dl/polishFlagSort.key
   provable ./standard_key/java_dl/postConditionTaclets1.key
   provable ./standard_key/java_dl/postConditionTaclets2.key
   provable ./standard_key/java_dl/quantifiedQuery.key
   provable ./standard_key/java_dl/recursion/triangular.key
   provable ./standard_key/java_dl/reverseArray.key
   provable ./standard_key/java_dl/reverseArray2.key
   provable ./standard_key/java_dl/simpleAssignment.key
   provable ./standard_key/java_dl/simpleAssignment2.key
   provable ./standard_key/java_dl/splittingWithQueries.key
   provable ./standard_key/java_dl/strassen/strassen.key
   provable ./standard_key/java_dl/symmArray.key
   provable ./standard_key/java_dl/testcontext.key
   provable ./standard_key/staticInitialisation/cascadeStaticInitialisation.key
   provable ./standard_key/staticInitialisation/erroneousClassImpliesErroneousSubclass.key
   provable ./standard_key/staticInitialisation/initializedSubclassImpliesInitializedSuperclass.key
   provable ./standard_key/staticInitialisation/localDeclared.key
   provable ./standard_key/staticInitialisation/localDeclaredMethod.key
   provable ./standard_key/staticInitialisation/objectOfErroneousClass.key
   provable ./standard_key/staticInitialisation/staticInitialisersAreNonSimple.key
   provable ./standard_key/types/disjoint.key
   provable ../../key.core/src/test/resources/testcase/classpath/classpath.key
   notprovable ./heap/inconsistent_represents/MyClass_m.key
   notprovable ./heap/inconsistent_represents/MyClass_n.key
}

group FOL {
   provable ./standard_key/pred_log/count.key
   provable ./standard_key/pred_log/count2.key
   provable ./standard_key/pred_log/count3.key
   provable ./standard_key/pred_log/equalities.key
   provable ./standard_key/pred_log/equalities2.key
   provable ./standard_key/pred_log/equalities3.key
   # cannot be proven automatically (see bug #1248)
   # provable: ./standard_key/pred_log/exist1.key
   provable ./standard_key/pred_log/functions.key
   provable ./standard_key/pred_log/mv1.key
   provable ./standard_key/pred_log/mv2.key
   provable ./standard_key/pred_log/quantifiers.key
   provable ./standard_key/pred_log/simpleEps.key
   provable ./standard_key/pred_log/steam1.key
   provable ./standard_key/pred_log/tptp/PUZ/PUZ001p1.key
   provable ./standard_key/pred_log/tptp/PUZ/PUZ001p1-eq.key
   provable ./standard_key/pred_log/tptp/PUZ/PUZ031p1.key
   provable ./standard_key/pred_log/tptp/SET/SET027p3.key
   provable ./standard_key/pred_log/tptp/SET/SET043p1.key
   # cannot be proven automatically (see bug #1248)
   # provable: ./standard_key/pred_log/tptp/SET/SET044p1.key
   provable ./standard_key/pred_log/tptp/SET/SET045p1.key
   provable ./standard_key/pred_log/tptp/SET/SET062p3.key
   provable ./standard_key/pred_log/tptp/SET/SET063p3.key
   # cannot be proven automatically (see bug #1248)
   # provable: ./standard_key/pred_log/tptp/SYN/SYN002m1.007.008.key
   provable ./standard_key/pred_log/tptp/SYN/SYN036p2.key
   # cannot be proven automatically (timeout, possibly due to bug #1248)
   # provable: ./standard_key/pred_log/tptp/SYN/SYN548p1.key
   provable ./standard_key/pred_log/tptp/SYN/SYN550p1.key
   notprovable ./standard_key/prop_log/reallySimple.key
   notprovable ./standard_key/pred_log/sameName1.key
   provable ./standard_key/pred_log/jbyteIfEx.key
   provable ./standard_key/prop_log/allClausesLength4.key
   provable ./standard_key/prop_log/allClausesLength5.key
   provable ./standard_key/prop_log/doubleNeg.key
   provable ./standard_key/prop_log/liarsville.key
   provable ./standard_key/prop_log/simplest.key
   provable ./standard_key/prop_log/contraposition.key
   provable ./standard_key/quantifiers/elimination0.key
   provable ./standard_key/quantifiers/heuristic_PUZ001p1-eq.key
   provable ./standard_key/quantifiers/heuristic_PUZ001p1.key
   provable ./standard_key/quantifiers/heuristic_PUZ031p1.key
   provable ./standard_key/quantifiers/heuristic_SYN036p2.key
   provable ./standard_key/quantifiers/injectivity.key
   provable ./standard_key/quantifiers/normalisation0.key
   provable ./standard_key/quantifiers/normalisation1.key
   provable ./standard_key/quantifiers/normalisation2.key
   provable ./standard_key/quantifiers/normalisation3.key
   provable ./standard_key/quantifiers/normalisation4.key
   provable ./standard_key/quantifiers/normalisation5.key
   provable ./standard_key/quantifiers/normalisation6.key
   provable ./standard_key/quantifiers/normalisation7.key
   provable ./standard_key/quantifiers/normalisation8.key
   provable ./standard_key/quantifiers/normalisation9.key
   provable ./standard_key/quantifiers/normalisation10.key
   #removed as long as we do not have a rule safely removing identical updates
   #provable: ./standard_key/quantifiers/normalisation11.key
   provable ./standard_key/quantifiers/normalisation12.key
   provable ./standard_key/quantifiers/normalisation13.key
   provable ./standard_key/quantifiers/triggers0.key
}

group strings {
   provable ./standard_key/strings/charAt0.key
   provable ./standard_key/strings/charAt1.key
   provable ./standard_key/strings/concat1.key
   provable ./standard_key/strings/concat2.key
   provable ./standard_key/strings/deriveLength1.key
   provable ./standard_key/strings/emptyStringLengthZero.key
   provable ./standard_key/strings/implicitBooleanStringConversion.key
   provable ./standard_key/strings/implicitBooleanStringConversion2.key
   provable ./standard_key/strings/implicitIntStringConversion.key
   provable ./standard_key/strings/implicitNullStringConversion.key
   provable ./standard_key/strings/implicitNullStringConversion2.key
   provable ./standard_key/strings/implicitObjectStringConversion.key
   provable ./standard_key/strings/literalEquality.key
   provable ./standard_key/strings/replace0.key
   provable ./standard_key/strings/replace1.key
   provable ./standard_key/strings/simpleAssignment.key
   provable ./standard_key/strings/simpleLengthComp.key
   provable ./standard_key/strings/stringCompileTimeConstant1.key
   provable ./standard_key/strings/stringCompileTimeConstant2.key
   provable ./standard_key/strings/stringEquality1.key
   provable ./standard_key/strings/stringEquality2.key
   provable ./standard_key/strings/substring0.key
   provable ./standard_key/strings/substring1.key
   provable ./standard_key/strings/substring2.key
   provable ./standard_key/strings/substring3.key
   provable ./standard_key/strings/substring4.key
   provable ./standard_key/strings/substring5.key
}

group simple_info_flow {
   notprovable ./heap/information_flow/UpdateAbstraction_ex7_1_insecure.key
   notprovable ./heap/information_flow/UpdateAbstraction_ex7_2_insecure.key
}

# Model methods tests:
# (Note: some of the problems are trivial, but they should be kept
# here as these problems provide the only test base for model methods)
group modelMethods {
   provable ./heap/model_methods/Cell_footprint_acc.key
   provable ./heap/model_methods/Cell_footprint.key
   provable ./heap/model_methods/Cell_get_acc.key
   provable ./heap/model_methods/Cell_get.key
   provable ./heap/model_methods/Cell_post_set.key
   provable ./heap/model_methods/Cell_set.key
   provable ./heap/model_methods/CellTest_callSet.key
   provable ./heap/model_methods/CellTest_test2.key
   provable ./heap/model_methods/CellTest_test.key
   provable ./heap/model_methods/Coll1_add.key
   provable ./heap/model_methods/Coll1_Coll1_add_pre.key
   provable ./heap/model_methods/Coll1_Coll_add_pre.key
   provable ./heap/model_methods/Coll2_add.key
   provable ./heap/model_methods/Coll2_Coll2_add_pre.key
   provable ./heap/model_methods/Coll2_Coll_add_pre.key
   provable ./heap/model_methods/Coll_add.key
   provable ./heap/model_methods/Coll_add_pre.key
   provable ./heap/model_methods/Indirect_callAdd.key
   provable ./heap/model_methods/Indirect_test.key
   provable ./heap/model_methods/Recell_Cell_footprint.key
   provable ./heap/model_methods/Recell_Cell_post_set.key
   provable ./heap/model_methods/Recell_footprint_acc.key
   provable ./heap/model_methods/Recell_get_acc.key
   provable ./heap/model_methods/Recell_get.key
   provable ./heap/model_methods/Recell_Recell_footprint.key
   provable ./heap/model_methods/Recell_Recell_post_set.key
   provable ./heap/model_methods/Recell_set.key
   provable ./heap/model_methods/Recell_undo.key
}

# Well-Definedness check problems:
# FIXME: Needs to be commented out for now
#        as loading different taclet options
#        does currently not work
#group wdChecks {
#   provable ./heap/vstte10_01_SumAndMax/SumAndMax_sumAndMaxWD.key
#   provable ./heap/vstte10_01_SumAndMax/SumAndMax_sumAndMaxWithWDLoop.key
#   provable ./heap/vstte10_03_LinkedList/Node_consWD.key
#   provable ./heap/vstte10_03_LinkedList/Node_invWD.key
#   provable ./heap/vstte10_03_LinkedList/Node_searchWD.key
#   notprovable ./firstTouch/05-ReverseArray/reverse2WD.key
#   provable ./firstTouch/05-ReverseArray/reverse2WD_Y.key
#   notprovable ./firstTouch/06-BinarySearch/searchWD.key
#   notprovable ./firstTouch/07-Cell/CellClient_mWD.key
#   provable ./firstTouch/07-Cell/Cell_CellWD.key
#   provable ./firstTouch/07-Cell/Cell_getXWD.key
#   provable ./firstTouch/07-Cell/Cell_setXWD.key
#   provable ./firstTouch/08-Java5/For_infiniteLoopWD.key
#   provable ./firstTouch/08-Java5/For_infiniteLoopWithWDLoop.key
#   provable ./firstTouch/08-Java5/For_invariantWD.key
#   provable ./firstTouch/08-Java5/For_sumWD.key
#   notprovable ./firstTouch/08-Java5/For_sumWithWDLoop.key
#   provable ./firstTouch/09-Quicktour/CardException_getCauseWD.key
#   provable ./firstTouch/09-Quicktour/CardException_getMessageWD.key
#   provable ./firstTouch/09-Quicktour/CardException_initCauseWD.key
#   provable ./firstTouch/09-Quicktour/LogFile_LogFileWD.key
#   provable ./firstTouch/09-Quicktour/LogFile_LogFileWithWDLoop.key
#   provable ./firstTouch/09-Quicktour/LogFile_addRecordWD.key
#   provable ./firstTouch/09-Quicktour/LogFile_getMaximumRecordWD.key
#   provable ./firstTouch/09-Quicktour/LogFile_getMaximumRecordWithWDLoop.key
#   provable ./firstTouch/09-Quicktour/LogFile_invariantWD.key
#   provable ./firstTouch/09-Quicktour/LogRecord_getBalanceWD.key
#   provable ./firstTouch/09-Quicktour/LogRecord_getTransactionIdWD.key
#   provable ./firstTouch/09-Quicktour/LogRecord_invariantWD.key
#   provable ./firstTouch/09-Quicktour/LogRecord_setRecordWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_PayCardWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_PayCardintWD.key
#   provable ./firstTouch/09-Quicktour/PayCard__chargeExcWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_chargeAndRecordWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_chargeWD.0.key
#   provable ./firstTouch/09-Quicktour/PayCard_chargeWD.1.key
#   provable ./firstTouch/09-Quicktour/PayCard_createJuniorCardWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_invariantWD.key
#   provable ./firstTouch/09-Quicktour/PayCard_isValidWD.key
#   provable ./firstTouch/10-SITA/SITA3_commonEntryWD.key
#   provable ./firstTouch/10-SITA/SITA3_commonEntryWithWDLoop.key
#   provable ./firstTouch/10-SITA/SITA3_invariantWD.key
#   provable ./firstTouch/10-SITA/SITA3_rearrangeWD.key
#   provable ./firstTouch/10-SITA/SITA3_rearrangeWithWDLoop.key
#   provable ./firstTouch/10-SITA/SITA3_swapWD.key
#   notprovable ./heap/block_contracts/GreatestCommonDivisor_ofWithWD.key
#   notprovable ./heap/fm12_01_LRS/LCP_lcpWD.key
#   notprovable ./heap/fm12_01_LRS/LRS_doLRSWD.key
#   notprovable ./heap/fm12_01_LRS/SuffixArray_invariantWD.key
#   notprovable ./heap/fm12_02_PrefixSum/PrefixSumRec_minWD.key
#   notprovable ./heap/list_recursiveSpec/ListOperationsNonNull_getNextNNWD.key
#   notprovable ./heap/list_seq/ArrayList_newArrayWD.key
#   provable ./heap/list_seq/ArrayList_newArrayWD_Y.key
#   notprovable ./heap/list_seq/SimplifiedLinkedList_getNextWD.key
#   notprovable ./heap/list_seq/SimplifiedLinkedList_invariantWD.key
#   notprovable ./heap/list_seq/TestLists_appendWD.key
#   notprovable ./heap/observer/ExampleSubject_valueWD.key
#   notprovable ./heap/saddleback_search/Saddleback_searchWD.key
#   provable ./heap/saddleback_search/Saddleback_searchWithWDLoop.key
#   notprovable ./heap/vacid0_01_SparseArray/Harness_sparseArrayTestHarness1WD.key
#   notprovable ./heap/vstte10_04_Queens/Queens_nQueensWD.key
#   notprovable ./heap/vstte10_04_Queens/Queens_searchWD.key
#   notprovable ./heap/vstte10_05_Queue/LinkedList_tailWD.key
#}

# Permission heap problems:
group permissionHeap {
   provable ./heap/permissions/permissions_method0.key
   provable ./heap/permissions/permissions_method1.key
   provable ./heap/permissions/permissions_method3.key
   provable ./heap/permissions/permissions_setAB.key
   provable ./heap/permissions/permissionProperties.key

   provable ./heap/permissions/threads/AFilter_AFilter.key
   provable ./heap/permissions/threads/AFilter_initPost_accessible.key
   provable ./heap/permissions/threads/AFilter_inv_accessible1.key
   provable ./heap/permissions/threads/AFilter_inv_accessible2.key
   provable ./heap/permissions/threads/AFilter_joinTransfer_accessible.key
   provable ./heap/permissions/threads/AFilter_joinTransfer_contract.key
   provable ./heap/permissions/threads/AFilter_postJoin_accessible.key
   provable ./heap/permissions/threads/AFilter_preStart_accessible.key
   provable ./heap/permissions/threads/AFilter_startTransfer_accessible.key
   provable ./heap/permissions/threads/AFilter_startTransfer_contract.key
   provable ./heap/permissions/threads/AFilter_stateInv_accessible.key
   provable ./heap/permissions/threads/AFilter_staticPermissions_accessible.key
   provable ./heap/permissions/threads/AFilter_workingPermissions_accessible.key
   provable ./heap/permissions/threads/BFilter_BFilter.key
   provable ./heap/permissions/threads/BFilter_initPost_accessible.key
   provable ./heap/permissions/threads/BFilter_inv_accessible1.key
   provable ./heap/permissions/threads/BFilter_inv_accessible2.key
   provable ./heap/permissions/threads/BFilter_joinTransfer_accessible.key
   provable ./heap/permissions/threads/BFilter_joinTransfer_contract.key
   provable ./heap/permissions/threads/BFilter_postJoin_accessible.key
   provable ./heap/permissions/threads/BFilter_preStart_accessible.key
   provable ./heap/permissions/threads/BFilter_startTransfer_accessible.key
   provable ./heap/permissions/threads/BFilter_startTransfer_contract.key
   provable ./heap/permissions/threads/BFilter_stateInv_accessible.key
   provable ./heap/permissions/threads/BFilter_staticPermissions_accessible.key
   provable ./heap/permissions/threads/BFilter_workingPermissions_accessible.key
   provable ./heap/permissions/threads/Fib_Fib.key
   provable ./heap/permissions/threads/Fib_initPost_accessible.key
   provable ./heap/permissions/threads/Fib_inv1_accessible.key
   provable ./heap/permissions/threads/Fib_inv2_accessible.key
   provable ./heap/permissions/threads/Fib_joinTransfer_accessible.key
   provable ./heap/permissions/threads/Fib_joinTransfer_contract.key
   provable ./heap/permissions/threads/Fib_postJoin_accessible.key
   provable ./heap/permissions/threads/Fib_preStart_accessible.key
   provable ./heap/permissions/threads/Fib_startTransfer_accessible.key
   provable ./heap/permissions/threads/Fib_startTransfer_contract.key
   provable ./heap/permissions/threads/Fib_workingPermissions_accessible.key
   provable ./heap/permissions/threads/Plotter_initPost_accessible.key
   provable ./heap/permissions/threads/Plotter_inv_accessible1.key
   provable ./heap/permissions/threads/Plotter_inv_accessible2.key
   provable ./heap/permissions/threads/Plotter_joinTransfer_accessible.key
   provable ./heap/permissions/threads/Plotter_joinTransfer_contract.key
   provable ./heap/permissions/threads/Plotter_Plotter.key
   provable ./heap/permissions/threads/Plotter_postJoin_accessible.key
   provable ./heap/permissions/threads/Plotter_preStart_accessible.key
   provable ./heap/permissions/threads/Plotter_startTransfer_accessible.key
   provable ./heap/permissions/threads/Plotter_stateInv_accessible.key
   provable ./heap/permissions/threads/Plotter_workingPermissions_accessible.key
   provable ./heap/permissions/threads/Sampler_initPost_accessible.key
   provable ./heap/permissions/threads/Sampler_inv_accessible1.key
   provable ./heap/permissions/threads/Sampler_inv_accessible2.key
   provable ./heap/permissions/threads/Sampler_joinTransfer_accessible.key
   provable ./heap/permissions/threads/Sampler_joinTransfer_contract.key
   provable ./heap/permissions/threads/Sampler_postJoin_accessible.key
   provable ./heap/permissions/threads/Sampler_preStart_accessible.key
   provable ./heap/permissions/threads/Sampler_run.key
   provable ./heap/permissions/threads/Sampler_Sampler.key
   provable ./heap/permissions/threads/Sampler_startTransfer_accessible.key
   provable ./heap/permissions/threads/Sampler_startTransfer_contract.key
   provable ./heap/permissions/threads/Sampler_stateInv_accessible.key
   provable ./heap/permissions/threads/Sampler_staticPermissions_accessible.key
   provable ./heap/permissions/threads/Sampler_workingPermissions_accessible.key

   # Müller et al example
   provable ./heap/permissions/mulleretal/ReadWrite_doRead_contract.key
   provable ./heap/permissions/mulleretal/ReadWrite_doWrite_contract.key
   provable ./heap/permissions/mulleretal/ReadWrite_read_contract.key
   provable ./heap/permissions/mulleretal/ReadWrite_write_contract.key
   provable ./heap/permissions/mulleretal/ReadWrite_inv1_accessible.key
   provable ./heap/permissions/mulleretal/ReadWrite_inv2_accessible.key

   # The LockSpec example (permissions & model methods)
   provable ./heap/permissions/lockspec/Counter_lockConsistent_contract.key
   provable ./heap/permissions/lockspec/Counter_increase_contract.key
   provable ./heap/permissions/lockspec/Counter_fp_accessible.key
   provable ./heap/permissions/lockspec/Counter_fpLock_accessible.key
   provable ./heap/permissions/lockspec/Counter_fpPerm_accessible.key
   provable ./heap/permissions/lockspec/Counter_inv_accessible1.key
   provable ./heap/permissions/lockspec/Counter_inv_accessible2.key
   provable ./heap/permissions/lockspec/Counter_lockRef_accessible.key
   provable ./heap/permissions/lockspec/Counter_lockRef_contract1.key
   provable ./heap/permissions/lockspec/Counter_lockRef_contract2.key
   provable ./heap/permissions/lockspec/Counter_lockState_accessible.key
   provable ./heap/permissions/lockspec/Counter_lockStatus_accessible.key
   provable ./heap/permissions/lockspec/Counter_lockTransfer_accessible.key
   provable ./heap/permissions/lockspec/Counter_unlockTransfer_accessible.key

   # These need (a lot of) interaction at the moment:
   # provable: ./heap/permissions/threads/AFilter_run.key
   # provable: ./heap/permissions/threads/BFilter_run.key
   # provable: ./heap/permissions/threads/Fib_run.key
   # provable: ./heap/permissions/threads/Plotter_run.key
   # provable: ./heap/permissions/threads/Main_main.key

   # Should be provable, but isn't at the moment:
   # provable: ./heap/permissions/threads/Plotter_staticPermissions_accessible.key
   # Is provable, but very heavy (~400000 steps)
   # provable: ./heap/permissions/threads/Plotter_startTransfer_contract.key
}

# These are the proof files which can be loaded from the examples menu.
# They must work with the current version.
group reload_examples {
   provable ./firstTouch/05-ReverseArray/reverseArray.key

   # This is a reload regression test. Since it is the only one
   # it goes here with the sibling reload tests
   loadable ./standard_key/arith/saveProofTest.key.proof
   loadable ./heap/permutedSum/perm.proof
   loadable ./firstTouch/05-ReverseArray/reverseArray.proof
   loadable ./heap/verifyThis15_1_RelaxedPrefix/relax.proof
   loadable ./heap/verifyThis15_3_DLL/doUndo.proof
   loadable ./heap/verifyThis15_2_ParallelGcd/parallelGcd.proof
   loadable ./heap/verifyThis17_1_PairInsertionSort/sort.proof.gz
}
