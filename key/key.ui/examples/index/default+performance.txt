# This file is part of KeY - Integrated Deductive Software Design
# Copyright (C) 2001-2011 Universitaet Karlsruhe Germany
#                         Universitaet Koblenz-Landau, Germany
#                         and Chalmers University of Technology, Sweden
#
# The KeY system is protected by the GNU General Public License. 
# See LICENSE.TXT for details.

#
# This file describes the benchmark problems.
# Files marked as provable should be closed automatically.
# Files marked as nonprovable should be not closable.
#
# It is used by bin/runAllProofs.pl.
#
# This file contains both the default test cases from automaticJAVADL
# and the performance tests from performance-tests.txt

# Examples used in the new book
provable: ./newBook/09.list_modelfield/ArrayList.add.key
provable: ./newBook/09.list_modelfield/ArrayList.remFirst.key
provable: ./newBook/09.list_modelfield/ArrayList.empty.key
provable: ./newBook/09.list_modelfield/ArrayList.size.key
provable: ./newBook/09.list_modelfield/ArrayList.get.key

# Comprehension Tests
provable: ./heap/comprehensions/general_sum.key
provable: ./heap/comprehensions/sum0.key
provable: ./heap/comprehensions/sum1.key
provable: ./heap/comprehensions/sum2.key
provable: ./heap/comprehensions/sum3.key
provable: ./heap/comprehensions/segsum.key
provable: ./heap/comprehensions/bsum_negative.key
provable: ./heap/comprehensions/bsum_neg2.key
provable: ./heap/comprehensions/bsumSplit.key
provable: ./heap/comprehensions/bprodSplit.key
notprovable: ./heap/comprehensions/bsumSplitInvalid.key

# Tests for rule application restrictions
provable: ./heap/polarity_tests/wellformed1.key
notprovable: ./heap/polarity_tests/wellformed2.key
provable: ./heap/polarity_tests/wellformed3.key
notprovable: ./heap/polarity_tests/wellformed4.key
provable: ./heap/polarity_tests/wellformed5.key
notprovable: ./heap/polarity_tests/wellformed6.key
provable: ./heap/polarity_tests/wellformed7.key
notprovable: ./heap/polarity_tests/wellformed8.key
provable: ./heap/polarity_tests/wellformed9.key
notprovable: ./heap/polarity_tests/wellformed10.key
notprovable: ./heap/polarity_tests/wellformed11.key


# Tests for block & loop contracts:
provable: ./heap/block_contracts/Simple__add.key
provable: ./heap/block_contracts/Simple__addAbsoluteValues.key
provable: ./heap/block_contracts/Simple__addWithJump.key
provable: ./heap/block_contracts/Simple__addWithTwoBlockContracts.key
provable: ./heap/block_contracts/Simple__generateByteArray.key
provable: ./heap/block_contracts/Simple__getLength.key
provable: ./heap/block_contracts/Simple__square.key
provable: ./heap/block_contracts/Simple__unnecessaryBlockContract.key
provable: ./heap/block_contracts/Simple__unnecessaryLoopInvariant.key
# the following test has a reload problem probably caused by the one-step-simplifier
# provable: ./heap/block_contracts/GreatestCommonDivisor.key
provable: ./standard_key/java_dl/jml-assert/assert.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_external.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_internal.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onBlock_loop.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_external.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_internal.key
provable ./heap/block_loop_contracts/SimpleVariants/sum_onLoop_loop.key
notprovable ./heap/block_loop_contracts/Finally/block_finally.key
notprovable ./heap/block_loop_contracts/Finally/loop_finally.key

# Other tests:
provable: ./heap/fm12_01_LRS/lcp.key
provable: ./heap/SemanticSlicing/project.key
provable: ./heap/information_flow/ArrayList_contains.key
provable: ./heap/information_flow/ArrayList_get.key
provable: ./heap/information_flow/ArrayList_size.key
provable: ./heap/information_flow/UpdateAbstraction_ex7_3_secure.key
provable: ./heap/information_flow/UpdateAbstraction_ex7_4_secure.key
provable: ./heap/information_flow/UpdateAbstraction_ex7_5_secure.key
provable: ./heap/information_flow/UpdateAbstraction_ex7_6_secure.key
provable: ./heap/information_flow/UpdateAbstraction_ex9_secure.key
provable: ./heap/list/ArrayList_add.key
provable: ./heap/list/ArrayList_ArrayList.key
provable: ./heap/list/ArrayList_concatenate.key
provable: ./heap/list/ArrayList_contains_dep.key
provable: ./heap/list/ArrayList_enlarge.key
provable: ./heap/list/ArrayList_footprint.key
provable: ./heap/list/ArrayList_get_dep.key
provable: ./heap/list/ArrayList_get_exceptional.key
provable: ./heap/list/ArrayList_get_normal.key
provable: ./heap/list/ArrayList_inv.key
provable: ./heap/list/ArrayList_iterator.key
provable: ./heap/list/ArrayList_size_dep.key
provable: ./heap/list/ArrayList_size.key
provable: ./heap/list/ArrayList.ArrayListIterator_ArrayListIterator.key
provable: ./heap/list/ArrayList.ArrayListIterator_hasNext_dep.key
provable: ./heap/list/ArrayList.ArrayListIterator_hasNext.key
provable: ./heap/list/ArrayList.ArrayListIterator_inv.key
provable: ./heap/list/ArrayList.ArrayListIterator_list.key
provable: ./heap/list/ArrayList.ArrayListIterator_next_exceptional.key
provable: ./heap/list/ArrayList.ArrayListIterator_next_normal.key
provable: ./heap/list/ArrayList.ArrayListIterator_pos.key
provable: ./heap/list/Client_m.key
provable: ./heap/list/Client_n.key
provable: ./heap/list/LinkedList_get_exceptional.key
provable: ./heap/list/LinkedList_get_normal.key
provable: ./heap/list/LinkedList_LinkedList.key
provable: ./heap/list/LinkedList_size_dep.key
provable: ./heap/list/LinkedList_size.key
provable: ./heap/list/MySet_footprint.key
provable: ./heap/list/MySet_MySet.key
provable: ./heap/list_ghost/ArrayList_add.key
provable: ./heap/list_ghost/ArrayList_ArrayList.key
provable: ./heap/list_ghost/ArrayList_enlarge.key
provable: ./heap/list_ghost/ArrayList_get_dep.key
provable: ./heap/list_ghost/ArrayList_get_exceptional.key
provable: ./heap/list_ghost/ArrayList_get_normal.key
provable: ./heap/list_ghost/ArrayList_inv.key
provable: ./heap/list_ghost/ArrayList_size_dep.key
provable: ./heap/list_ghost/ArrayList_size.key
provable: ./heap/list_recursiveSpec/ListOperationsNonNull_getNextNN_normal_behavior.key
provable: ./heap/list_recursiveSpec/ListOperationsNonNull_setValueAt_normal_behavior.key
provable: ./heap/list_recursiveSpec/ListOperationsNonNull_remove_normal_behavior.key
provable: ./heap/list_seq/SimplifiedLinkedList.remove.key
provable: ./heap/observer/ExampleObserver_ExampleObserver.key
provable: ./heap/observer/ExampleObserver_inv.key
provable: ./heap/observer/ExampleObserver_subject.key
provable: ./heap/observer/ExampleObserver_update.key
provable: ./heap/observer/ExampleObserver_upToDate.key
provable: ./heap/observer/ExampleObserver_value.key
provable: ./heap/observer/ExampleSubject_addObserver.key
provable: ./heap/observer/ExampleSubject_change.key
provable: ./heap/observer/ExampleSubject_ExampleSubject.key
provable: ./heap/observer/ExampleSubject_footprint.key
provable: ./heap/observer/ExampleSubject_inv.key
provable: ./heap/observer/ExampleSubject_notifyObservers.key
provable: ./heap/observer/ExampleSubject_value_dep.key
provable: ./heap/observer/ExampleSubject_value.key
provable: ./heap/removeDups/arrayPart.key
provable: ./heap/removeDups/contains.key
provable: ./heap/removeDups/removeDup.key
provable: ./heap/saddleback_search/Saddleback_search.key
provable: ./heap/simple/anonymise_datagroup.key
provable: ./heap/simple/array_creation.key
provable: ./heap/simple/arrays_with_disjoint_sorts.key
provable: ./heap/simple/arrays.key
provable: ./heap/simple/attributes.key
provable: ./heap/simple/constructor_contracts.key
provable: ./heap/simple/dependencies.key
provable: ./heap/simple/dependency_contracts.key
provable: ./heap/simple/invariant_preservation.key
provable: ./heap/simple/locsets.key
provable: ./heap/simple/loop1.key
provable: ./heap/simple/loop2.key
provable: ./heap/simple/modifies_datagroup.key
provable: ./heap/simple/modifies.key
provable: ./heap/simple/object_creation.key
provable: ./heap/simple/operation_contracts.key
provable: ./heap/simple/select_store.key
provable: ./heap/simple/selection_sort.key
provable: ./heap/simple/seq.key
provable: ./heap/SmansEtAl/ArrayList_add.key
provable: ./heap/SmansEtAl/ArrayList_ArrayList.key
provable: ./heap/SmansEtAl/ArrayList_footprint.key
provable: ./heap/SmansEtAl/ArrayList_get_dep.key
provable: ./heap/SmansEtAl/ArrayList_get.key
provable: ./heap/SmansEtAl/ArrayList_inv.key
provable: ./heap/SmansEtAl/ArrayList_size_dep.key
provable: ./heap/SmansEtAl/ArrayList_size.key
provable: ./heap/SmansEtAl/Cell_Cell.key
provable: ./heap/SmansEtAl/Cell_footprint.key
provable: ./heap/SmansEtAl/Cell_getX_dep.key
provable: ./heap/SmansEtAl/Cell_getX.key
provable: ./heap/SmansEtAl/Cell_inv.key
provable: ./heap/SmansEtAl/Cell_setX.key
provable: ./heap/SmansEtAl/CellClient_m.key
provable: ./heap/SmansEtAl/Iterator_footprint.key
provable: ./heap/SmansEtAl/Iterator_hasNext_dep.key
provable: ./heap/SmansEtAl/Iterator_hasNext.key
provable: ./heap/SmansEtAl/Iterator_inv.key
provable: ./heap/SmansEtAl/Iterator_Iterator.key
provable: ./heap/SmansEtAl/Iterator_list_dep.key
provable: ./heap/SmansEtAl/Iterator_list.key
provable: ./heap/SmansEtAl/Iterator_next.key
provable: ./heap/SmansEtAl/Stack_footprint.key
provable: ./heap/SmansEtAl/Stack_inv.key
provable: ./heap/SmansEtAl/Stack_push.key
provable: ./heap/SmansEtAl/Stack_size.key
provable: ./heap/SmansEtAl/Stack_Stack.key
provable: ./heap/SmansEtAl/Stack_switchContents.key
provable: ./heap/vacid0_01_SparseArray/Harness_sparseArrayTestHarness1.key
provable: ./heap/vacid0_01_SparseArray/Harness_sparseArrayTestHarness2.key
provable: ./heap/vacid0_01_SparseArray/MemoryAllocator_alloc_unsigned.key
provable: ./heap/vacid0_01_SparseArray/MemoryAllocator_alloc.key
provable: ./heap/vacid0_01_SparseArray/SparseArray_get_dep.key
provable: ./heap/vacid0_01_SparseArray/SparseArray_get.key
provable: ./heap/vacid0_01_SparseArray/SparseArray_inv.key
provable: ./heap/vacid0_01_SparseArray/SparseArray_SparseArray.key
provable: ./heap/vstte10_01_SumAndMax/SumAndMax_sumAndMax.key
provable: ./heap/vstte10_03_LinkedList/Node_cons.key
provable: ./heap/vstte10_03_LinkedList/Node_inv.key
provable: ./heap/vstte10_03_LinkedList/Node_search.key
provable: ./heap/vstte10_04_Queens/Queens_isConsistent.key
provable: ./heap/vstte10_04_Queens/Queens_nQueens.key
provable: ./heap/vstte10_05_Queue/AmortizedQueue_AmortizedQueue.key
provable: ./heap/vstte10_05_Queue/AmortizedQueue_front.key
provable: ./heap/vstte10_05_Queue/LinkedList_concat.key
provable: ./heap/vstte10_05_Queue/LinkedList_cons.key
provable: ./heap/vstte10_05_Queue/LinkedList_head.key
provable: ./heap/vstte10_05_Queue/LinkedList_inv.key
provable: ./heap/vstte10_05_Queue/LinkedList_length.key
provable: ./heap/vstte10_05_Queue/LinkedList_LinkedList1.key
provable: ./heap/vstte10_05_Queue/LinkedList_LinkedList2.key
provable: ./heap/vstte10_05_Queue/LinkedList_LinkedList3.key
provable: ./heap/vstte10_05_Queue/LinkedList_reverse.key
provable: ./heap/vstte10_05_Queue/LinkedList_tail.key
provable: ./heap/WeideEtAl_01_AddAndMultiply/AddAndMultiply_add.key
provable: ./heap/WeideEtAl_01_AddAndMultiply/AddAndMultiply_mul.key
provable: ./heap/WeideEtAl_02_BinarySearch/BinarySearch_search.key
provable: ./heap/Wellfounded/ackermann.key
provable: ./heap/strictly_pure/strictlyPureMethod.key
provable: ./heap/strictly_pure/useStrictlyPureMethod.key
# this file contains Unicode symbols for logic operators
provable: ./standard_key/unicode_test.key
provable: ./standard_key/arith/binomial1.key
provable: ./standard_key/arith/binomial2.key
provable: ./standard_key/arith/check_jdiv.key
provable: ./standard_key/arith/check_jdiv_concrete.key
provable: ./standard_key/arith/check_jdiv_instantiated.key
provable: ./standard_key/arith/check_jmod.key
provable: ./standard_key/arith/complexExpressions.key
provable: ./standard_key/arith/compound_unaryMinus.key
provable: ./standard_key/arith/computation.key
provable: ./standard_key/arith/cubicSum.key
provable: ./standard_key/arith/divByZero.key
provable: ./standard_key/arith/divisionAssoc.key
provable: ./standard_key/arith/divisionBy2.key
provable: ./standard_key/arith/euclidean/gcdHelp-post.key
provable: ./standard_key/arith/gemplusDecimal/add.key
provable: ./standard_key/arith/jdivevenodd.key
provable: ./standard_key/arith/median.key
provable: ./standard_key/arith/mod1.key
provable: ./standard_key/arith/mod2.key
provable: ./standard_key/arith/mod7.key
provable: ./standard_key/arith/overflow_hija.key
provable: ./standard_key/arith/poly_division0.key
provable: ./standard_key/arith/poly_division1.key
provable: ./standard_key/arrays/arrayStoreException/array2DimPrim.key
provable: ./standard_key/arrays/arrayStoreException/arrayStoreKnownDynType.key
provable: ./standard_key/arrays/arrayStoreException/reverseArray.key
provable: ./standard_key/arrays/arrayStoreException/throwArrayStoreException.key
provable: ./standard_key/arrays/creation/arrayCreation1.key
provable: ./standard_key/BookExamples/02FirstOrderLogic/Ex2.58.key
provable: ./standard_key/BookExamples/03DynamicLogic/Sect3.3.1.key
provable: ./standard_key/inEqSimp/division.key
provable: ./standard_key/inEqSimp/inequations0.key
provable: ./standard_key/inEqSimp/inequations1.key
provable: ./standard_key/inEqSimp/inequations2.key
provable: ./standard_key/inEqSimp/linApprox.key
provable: ./standard_key/inEqSimp/nonLinInEqExample0.key
provable: ./standard_key/inEqSimp/nonLinInEqExample2.key
provable: ./standard_key/inEqSimp/nonLinInEqExample3.key
provable: ./standard_key/inEqSimp/nonLinInEqExample4.key
provable: ./standard_key/inEqSimp/quadraticInEq.key
provable: ./standard_key/inEqSimp/quadraticInEq10.key
provable: ./standard_key/inEqSimp/quadraticInEq13.key
provable: ./standard_key/inEqSimp/quadraticInEq14.key
provable: ./standard_key/inEqSimp/quadraticInEq2.key
provable: ./standard_key/inEqSimp/quadraticInEq3.key
provable: ./standard_key/inEqSimp/quadraticInEq4.key
provable: ./standard_key/inEqSimp/quadraticInEq5.key
provable: ./standard_key/inEqSimp/quadraticInEq6.key
provable: ./standard_key/inEqSimp/quadraticInEq7.key
provable: ./standard_key/inEqSimp/quadraticInEq8.key
provable: ./standard_key/inEqSimp/simplify0.key
provable: ./standard_key/inEqSimp/simplify1.key
provable: ./standard_key/inEqSimp/simplify2.key
provable: ./standard_key/inEqSimp/simplify3.key
provable: ./standard_key/inEqSimp/simplify4.key
provable: ./standard_key/inEqSimp/simplify5.key
provable: ./standard_key/inEqSimp/subsumptionExample.key
provable: ./standard_key/instanceCreation/instanceCreation1.key
provable: ./standard_key/instanceCreation/instanceCreation2.key
provable: ./standard_key/instanceCreation/interfacesAndAbstractClassesHaveNoInstances.key
provable: ./standard_key/instanceCreation/successiveCreatedObjectsAreDistinct.key
provable: ./standard_key/instanceCreation/testOverloadingConstructors.key
provable: ./standard_key/java_dl/SimpleAttributes.key
provable: ./standard_key/java_dl/arrayMax.key
provable: ./standard_key/java_dl/arrayUpdateSimp.key
provable: ./standard_key/java_dl/attributes.key
provable: ./standard_key/java_dl/break.key
provable: ./standard_key/java_dl/char.key
provable: ./standard_key/java_dl/compileTimeConstants.key
provable: ./standard_key/java_dl/constructorException/test.key
notprovable: ./standard_key/java_dl/constructorException/regressionTestBug1333.key
provable: ./standard_key/java_dl/continue1.key
provable: ./standard_key/java_dl/continue2.key
provable: ./standard_key/java_dl/complexAssignment.key
provable: ./standard_key/java_dl/danglingElseSolution1.key
provable: ./standard_key/java_dl/danglingElseSolution2.key
provable: ./standard_key/java_dl/deepNonNull/deepNonNull0.key
provable: ./standard_key/java_dl/deepNonNull/deepNonNull1.key
notprovable: ./standard_key/java_dl/deepNonNull/deepNonNull2.key
provable: ./standard_key/java_dl/deepNonNull/deepNonNull3.key
provable: ./standard_key/java_dl/exceptions.key
provable: ./standard_key/java_dl/exceptions1.key
provable: ./standard_key/java_dl/exceptions2.key
provable: ./standard_key/java_dl/exceptions3.key
provable: ./standard_key/java_dl/exchange.key
provable: ./standard_key/java_dl/if.key
provable: ./standard_key/java_dl/incrementcounter.key
# commented out - in the current handling of this references (from branch mostThisRef)
# inner classes do not work. According to Richard, there is a bug in handling inner classes
# that needs a non-trivial fix.
# provable: ./standard_key/java_dl/innerClasses/inner.key
provable: ./standard_key/java_dl/iteratedAssignment.key
notprovable: ./standard_key/java_dl/assert/assert1.key
provable: ./standard_key/java_dl/assert/assert2.key
notprovable: ./standard_key/java_dl/assert/assert3.key
provable: ./standard_key/java_dl/java5/vararg.key
provable: ./standard_key/java_dl/java5/for_Array.key
provable: ./standard_key/java_dl/java5/for_Iterable.key
provable: ./standard_key/java_dl/java5/for_ReferenceArray.key
provable: ./standard_key/java_dl/jml-bigint/cast.key
# proof gets very long
# requires further investigations
provable: ./standard_key/java_dl/jml-information-flow.key
notprovable: ./standard_key/java_dl/jml-min/min-unprovable1.key
notprovable: ./standard_key/java_dl/jml-min/min-unprovable2.key
provable: ./standard_key/java_dl/methodCall.key
provable: ./standard_key/java_dl/methodCall1.key
provable: ./standard_key/java_dl/methodCall1box.key
provable: ./standard_key/java_dl/methodCall2.key
provable: ./standard_key/java_dl/methodCall3.key
provable: ./standard_key/java_dl/polishFlagSort.key
provable: ./standard_key/java_dl/postConditionTaclets1.key
provable: ./standard_key/java_dl/postConditionTaclets2.key
provable: ./standard_key/java_dl/quantifiedQuery.key
provable: ./standard_key/java_dl/reverseArray.key
provable: ./standard_key/java_dl/reverseArray2.key
provable: ./standard_key/java_dl/simpleAssignment.key
provable: ./standard_key/java_dl/simpleAssignment2.key
provable: ./standard_key/java_dl/splittingWithQueries.key
provable: ./standard_key/java_dl/strassen/strassen.key
provable: ./standard_key/java_dl/symmArray.key
provable: ./standard_key/java_dl/testcontext.key
provable: ./standard_key/polySimp/simplify0.key
provable: ./standard_key/polySimp/simplify1.key
provable: ./standard_key/polySimp/simplify10.key
provable: ./standard_key/polySimp/simplify11.key
provable: ./standard_key/polySimp/simplify12.key
provable: ./standard_key/polySimp/simplify13.key
provable: ./standard_key/polySimp/simplify14.key
provable: ./standard_key/polySimp/simplify15.key
provable: ./standard_key/polySimp/simplify16.key
provable: ./standard_key/polySimp/simplify17.key
provable: ./standard_key/polySimp/simplify18.key
provable: ./standard_key/polySimp/simplify19.key
provable: ./standard_key/polySimp/simplify2.key
provable: ./standard_key/polySimp/simplify20.key
provable: ./standard_key/polySimp/simplify21.key
provable: ./standard_key/polySimp/simplify22.key
provable: ./standard_key/polySimp/simplify23.key
provable: ./standard_key/polySimp/simplify24.key
provable: ./standard_key/polySimp/simplify25.key
provable: ./standard_key/polySimp/simplify3.key
provable: ./standard_key/polySimp/simplify4.key
provable: ./standard_key/polySimp/simplify5.key
provable: ./standard_key/polySimp/simplify6.key
provable: ./standard_key/polySimp/simplify7.key
provable: ./standard_key/polySimp/simplify8.key
provable: ./standard_key/polySimp/simplify9.key
provable: ./standard_key/pred_log/count.key
provable: ./standard_key/pred_log/count2.key
provable: ./standard_key/pred_log/count3.key
provable: ./standard_key/pred_log/equalities.key
provable: ./standard_key/pred_log/equalities2.key
provable: ./standard_key/pred_log/equalities3.key
# cannot be proven automatically (see bug #1248)
# provable: ./standard_key/pred_log/exist1.key
provable: ./standard_key/pred_log/functions.key
provable: ./standard_key/pred_log/mv1.key
provable: ./standard_key/pred_log/mv2.key
provable: ./standard_key/pred_log/quantifiers.key
provable: ./standard_key/pred_log/simpleEps.key
provable: ./standard_key/pred_log/steam1.key
provable: ./standard_key/pred_log/tptp/PUZ/PUZ001p1.key
provable: ./standard_key/pred_log/tptp/PUZ/PUZ001p1-eq.key
provable: ./standard_key/pred_log/tptp/PUZ/PUZ031p1.key
provable: ./standard_key/pred_log/tptp/SET/SET027p3.key
provable: ./standard_key/pred_log/tptp/SET/SET043p1.key
# cannot be proven automatically (see bug #1248)
# provable: ./standard_key/pred_log/tptp/SET/SET044p1.key
provable: ./standard_key/pred_log/tptp/SET/SET045p1.key
provable: ./standard_key/pred_log/tptp/SET/SET062p3.key
provable: ./standard_key/pred_log/tptp/SET/SET063p3.key
# cannot be proven automatically (see bug #1248)
# provable: ./standard_key/pred_log/tptp/SYN/SYN002m1.007.008.key
provable: ./standard_key/pred_log/tptp/SYN/SYN036p2.key
# cannot be proven automatically (timeout, possibly due to bug #1248)
# provable: ./standard_key/pred_log/tptp/SYN/SYN548p1.key
provable: ./standard_key/pred_log/tptp/SYN/SYN550p1.key
notprovable: ./standard_key/prop_log/reallySimple.key
notprovable: ./standard_key/pred_log/sameName1.key
provable: ./standard_key/pred_log/jbyteIfEx.key
provable: ./standard_key/prop_log/allClausesLength4.key
provable: ./standard_key/prop_log/allClausesLength5.key
provable: ./standard_key/prop_log/doubleNeg.key
provable: ./standard_key/prop_log/simplest.key
provable: ./standard_key/prop_log/contraposition.key
provable: ./standard_key/quantifiers/elimination0.key
provable: ./standard_key/quantifiers/heuristic_PUZ001p1-eq.key
provable: ./standard_key/quantifiers/heuristic_PUZ001p1.key
provable: ./standard_key/quantifiers/heuristic_PUZ031p1.key
provable: ./standard_key/quantifiers/heuristic_SYN036p2.key
provable: ./standard_key/quantifiers/injectivity.key
provable: ./standard_key/quantifiers/normalisation0.key
# commented out, does not prove on Jenkins, seems nondeterminism issue
# provable: ./standard_key/quantifiers/normalisation1.key
provable: ./standard_key/quantifiers/normalisation2.key
provable: ./standard_key/quantifiers/normalisation3.key
provable: ./standard_key/quantifiers/normalisation4.key
provable: ./standard_key/quantifiers/normalisation5.key
provable: ./standard_key/quantifiers/normalisation6.key
provable: ./standard_key/quantifiers/normalisation7.key
provable: ./standard_key/quantifiers/normalisation8.key
provable: ./standard_key/quantifiers/normalisation9.key
provable: ./standard_key/quantifiers/normalisation10.key
#removed as long as we do not have a rule safely removing identical updates
#provable: ./standard_key/quantifiers/normalisation11.key
provable: ./standard_key/quantifiers/normalisation12.key
provable: ./standard_key/quantifiers/normalisation13.key
provable: ./standard_key/quantifiers/triggers0.key
provable: ./standard_key/staticInitialisation/cascadeStaticInitialisation.key
provable: ./standard_key/staticInitialisation/erroneousClassImpliesErroneousSubclass.key
provable: ./standard_key/staticInitialisation/initializedSubclassImpliesInitializedSuperclass.key
provable: ./standard_key/staticInitialisation/localDeclared.key
provable: ./standard_key/staticInitialisation/localDeclaredMethod.key
provable: ./standard_key/staticInitialisation/objectOfErroneousClass.key
provable: ./standard_key/staticInitialisation/staticInitialisersAreNonSimple.key
provable: ./standard_key/strings/charAt0.key
provable: ./standard_key/strings/charAt1.key
provable: ./standard_key/strings/concat1.key
provable: ./standard_key/strings/concat2.key
provable: ./standard_key/strings/deriveLength1.key
provable: ./standard_key/strings/emptyStringLengthZero.key
provable: ./standard_key/strings/implicitBooleanStringConversion.key
provable: ./standard_key/strings/implicitBooleanStringConversion2.key
provable: ./standard_key/strings/implicitIntStringConversion.key
provable: ./standard_key/strings/implicitNullStringConversion.key
provable: ./standard_key/strings/implicitNullStringConversion2.key
provable: ./standard_key/strings/implicitObjectStringConversion.key
provable: ./standard_key/strings/literalEquality.key
provable: ./standard_key/strings/replace0.key
provable: ./standard_key/strings/replace1.key
provable: ./standard_key/strings/simpleAssignment.key
provable: ./standard_key/strings/simpleLengthComp.key
provable: ./standard_key/strings/stringCompileTimeConstant1.key
provable: ./standard_key/strings/stringCompileTimeConstant2.key
provable: ./standard_key/strings/stringEquality1.key
provable: ./standard_key/strings/stringEquality2.key
provable: ./standard_key/strings/substring0.key
provable: ./standard_key/strings/substring1.key
provable: ./standard_key/strings/substring2.key
provable: ./standard_key/strings/substring3.key
provable: ./standard_key/strings/substring4.key
provable: ./standard_key/strings/substring5.key
provable: ./_testcase/classpath/classpath.key

notprovable: ./heap/inconsistent_represents/MyClass_m.key
notprovable: ./heap/inconsistent_represents/MyClass_n.key
notprovable: ./heap/information_flow/UpdateAbstraction_ex7_1_insecure.key
notprovable: ./heap/information_flow/UpdateAbstraction_ex7_2_insecure.key
notprovable: ./standard_key/arrays/arrayStoreException/array2Dim.key
notprovable: ./standard_key/arrays/arrayStoreException/array2DimClose.key
notprovable: ./standard_key/arrays/arrayStoreException/throwASEForPrim.key
notprovable: ./standard_key/java_dl/danglingElse.key

# Model methods tests:
# (Note: some of the problems are trivial, but they should be kept
# here as these problems provide the only test base for model methods)

provable: ./heap/model_methods/Cell_footprint_acc.key
provable: ./heap/model_methods/Cell_footprint.key
provable: ./heap/model_methods/Cell_get_acc.key
provable: ./heap/model_methods/Cell_get.key
provable: ./heap/model_methods/Cell_post_set.key
provable: ./heap/model_methods/Cell_set.key
provable: ./heap/model_methods/CellTest_callSet.key
provable: ./heap/model_methods/CellTest_test2.key
provable: ./heap/model_methods/CellTest_test.key
provable: ./heap/model_methods/Coll1_add.key
provable: ./heap/model_methods/Coll1_Coll1_add_pre.key
provable: ./heap/model_methods/Coll1_Coll_add_pre.key
provable: ./heap/model_methods/Coll2_add.key
provable: ./heap/model_methods/Coll2_Coll2_add_pre.key
provable: ./heap/model_methods/Coll2_Coll_add_pre.key
provable: ./heap/model_methods/Coll_add.key
provable: ./heap/model_methods/Coll_add_pre.key
provable: ./heap/model_methods/Indirect_callAdd.key
provable: ./heap/model_methods/Indirect_test.key
provable: ./heap/model_methods/Recell_Cell_footprint.key
provable: ./heap/model_methods/Recell_Cell_post_set.key
provable: ./heap/model_methods/Recell_footprint_acc.key
provable: ./heap/model_methods/Recell_get_acc.key
provable: ./heap/model_methods/Recell_get.key
provable: ./heap/model_methods/Recell_Recell_footprint.key
provable: ./heap/model_methods/Recell_Recell_post_set.key
provable: ./heap/model_methods/Recell_set.key
provable: ./heap/model_methods/Recell_undo.key

# End -- please do not remove this line.
provable: ./performance-test/AccessChain1(AccessChain1__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain1(AccessChain1__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain2(AccessChain2__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/AccessChain4(AccessChain4__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_01()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_02()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_03()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_04()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_05()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_06()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_07()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_08()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_09()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_10()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint_20()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_01()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_02()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_03()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_04()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_05()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_06()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_07()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_08()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_09()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_10()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__disjoint2_20()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_01()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_02()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_03()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_04()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_05()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_06()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_07()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_08()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_09()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_10()).JML_operation_contract.0.key
provable: ./performance-test/Disjoint(Disjoint__xZero_20()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic2(Dynamic2__foo_06()).JML_operation_contract.0.key
# these cannot be proven within 100,000 steps currently
#provable: ./performance-test/Dynamic2(Dynamic2__foo_07()).JML_operation_contract.0.key
#provable: ./performance-test/Dynamic2(Dynamic2__foo_08()).JML_operation_contract.0.key
#provable: ./performance-test/Dynamic2(Dynamic2__foo_09()).JML_operation_contract.0.key
#provable: ./performance-test/Dynamic2(Dynamic2__foo_10()).JML_operation_contract.0.key
#provable: ./performance-test/Dynamic2(Dynamic2__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/Dynamic(Dynamic__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_01()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_02()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_03()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_04()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_05()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_06()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_07()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_08()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_09()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_10()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/DynamicGhost(DynamicGhost__dynamicGhost_20()).JML_normal_behavior_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/GhostFrame(GhostFrame__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/Inc2(Inc2__foo_40()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/Inc(Inc__foo_20()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_01()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_02()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_03()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_04()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_05()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_06()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_07()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_08()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_09()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_10()).JML_operation_contract.0.key
provable: ./performance-test/Modelfield(Modelfield__foo_20()).JML_operation_contract.0.key
