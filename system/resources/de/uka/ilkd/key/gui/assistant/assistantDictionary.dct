[rules]
andLeft  = "Here could stand your slogan. Edit <tt>assistantDictionary.dct</tt>"
andRight = "Splitting goals is fun."

orLeft   =  "Here could stand your slogan. Edit <tt>assistantDictionary.dct</tt>"
orRight  =  "Alpha rules are boring, am I right?"

allLeft  =  "You applied rule all_left. Do you know that you do not necessary need to enter an instantiation. Just press Apply. You can also apply this rule via drag and drop, just drag the quantified formula on the term you want it to instantiate with."
exRight  =  "You applied rule ex_right. Do you know that you do not necessary need to enter an instantiation. Just press Apply. You can also apply this rule via drag and drop, just drag the quantified formula on the term you want it to instantiate with."

allLeftHide = "The quantified formula has been hidden. Add it to the sequent again by applying rule 'insertHidden'. You can also apply this rule via drag and drop, just drag the quantified formula on the term you want it to instantiate with."
exRightHide = "The quantified formula has been hidden. Add it to the sequent again by applying rule 'insertHidden'. You can also apply this rule via drag and drop, just drag the quantified formula on the term you want it to instantiate with."

instAll  =  "You have instantiated a quantifier. Next time try to drag the term on the quantifier."
instEx   =  "You have instantiated a quantifier. Next time try to drag the term on the quantifier."

int_induction  = "It looks like you are trying to prove a loop. Do you want to:
	    <ul> <li> bite into your desk </li>
    		 <li> postpone till tomorrow </li>
    		 <li> despair and give up now? </li> </ul>" 

applyEqRigid = "Alternatively you can drag and drop the equation on the term you want to replace."
applyEq = "Alternatively you can drag and drop the equation on the term you want to replace."

make_insert_eq = "Alternatively, you can click on the term where you want to apply the equation and use rule <tt>apply_eq</tt>"
make_insert_eq_nonrigid = "Alternatively, you can click on the term where you want to apply the equation and use rule <tt>apply_eq</tt>"

cut_direct_r = "This rule is rather useless. You may looking for rule <tt>cut</tt> which can be found by clicking on the sequent arrow."
cut_direct_l = "This rule is rather useless. You may looking for rule <tt>cut</tt> which can be found by clicking on the sequent arrow."


methodCall = "You have executed a method call. The if cascade is used to resolve the dynamical binding of methods."
methodCallWithAssignment = "You have executed a method call. The if-cascade is used to resolve the dynamical binding of methods."

loopUnwind = "This rule unwinds a while loop exactly once. Breaks and continues are handled accordingly by introducing up to two new labels."

whileInvBox = "When you have annotated the loop invariant in the source code, you do not need to enter the invariant manually. Further you can then set the strategy option 'Loop Treatment' to 'Invariant', which causes the invariant rule to be applied automatically." 
whileInvDiamond = "When you have annotated the loop invariant in the source code, you do not need to enter the invariant manually. Using this rule will most probably urge you to do an induction. It is often easier to use a variant (non-negative, steady decreasing expression), so you should consider using the rule 'whileInvDiamondDec' instead." 
whileInvDiamondDec = "When you have annotated the loop invariant in the source code, you do not need to enter the invariant manually. Further you can then set the strategy option 'Loop Treatment' to 'Invariant', which causes the invariant rule to be applied automatically." 

[toolbar]
goalBack = "You have set back a goal. For pruning complete subtrees, right click on the node above the subtree in the proof tree view and select Prune Proof."
applyHeuristics = "The strategies can be focused on subtrees or formulas. Highlight the sequent or formula and perform a SHIFT+left mouse click."
runSIMPLIFY = "KeY supports different decision procedures. You can select them in <tt>Options</tt> menu."
runICS = "KeY supports different decision procedures. You can select them in <tt>Options</tt> menu."
runYICES = "KeY supports different decision procedures. You can select them in <tt>Options</tt> menu."
reuse = "You have started reuse of proofs. Switching between single and multi step mode is possible by right clicking on the button."

[menu]
file = "File extensions 
	<ul> <li> <tt>.key</tt>: Problem Files (load)</li> 
             <li> <tt>.proof</tt> Proof Files (load or save)</li>
             <li> <tt>.tex</tt> Save proof tree as TeX file (save) </li> </ul>"
view = "<tt>Use pretty syntax</tt> prints function symbols like <tt>+,-,&gt;</tt> infix."
proof = "Abandon task, proof statistics, active taclet options, etc."
options = "Configure KeY for your purposes. Minimize interaction reduces user interactions considerably."
tools = "Extract specification, specification browsers etc."

