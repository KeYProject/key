\rules {

	/*
	TODO: these rules are needed when using external decision procedures
	
	introduceStorageEq_ST_TRAP {
		\find(ST_TRAP)
		\add( !(ST_TRAP = ST_AUTOMATIC), !(ST_TRAP = ST_ALLOCATED), !(ST_TRAP = ST_STATIC) ==>)
		\heuristics(infer_heap)
	};

	introduceStorageEq_ST_AUTOMATIC {
		\find(ST_AUTOMATIC)
		\add( !(ST_AUTOMATIC = ST_TRAP), !(ST_AUTOMATIC = ST_ALLOCATED), !(ST_AUTOMATIC = ST_STATIC) ==>)
		\heuristics(infer_heap)
	};

	introduceStorageEq_ST_ALLOCATED {
		\find(ST_ALLOCATED)
		\add( !(ST_ALLOCATED = ST_TRAP), !(ST_ALLOCATED = ST_AUTOMATIC), !(ST_ALLOCATED = ST_STATIC) ==>)
		\heuristics(infer_heap)
	};

	introduceStorageEq_ST_STATIC {
		\find(ST_STATIC)
		\add( !(ST_STATIC = ST_TRAP), !(ST_STATIC = ST_AUTOMATIC), !(ST_STATIC = ST_ALLOCATED) ==>)
		\heuristics(infer_heap)
	};
	*/

	elimStorageEq_ST_TRAP__ST_AUTOMATIC {
		\find( ST_TRAP = ST_AUTOMATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_TRAP__ST_ALLOCATED {
		\find( ST_TRAP = ST_ALLOCATED )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_TRAP__ST_STATIC {
		\find( ST_TRAP = ST_STATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_AUTOMATIC__ST_TRAP {
		\find( ST_AUTOMATIC = ST_TRAP )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_AUTOMATIC__ST_ALLOCATED {
		\find( ST_AUTOMATIC = ST_ALLOCATED )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_AUTOMATIC__ST_STATIC {
		\find( ST_AUTOMATIC = ST_STATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_ALLOCATED__ST_TRAP {
		\find( ST_ALLOCATED = ST_TRAP )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_ALLOCATED__ST_AUTOMATIC {
		\find( ST_ALLOCATED = ST_AUTOMATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_ALLOCATED__ST_STATIC {
		\find( ST_ALLOCATED = ST_STATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_STATIC__ST_TRAP {
		\find( ST_STATIC = ST_TRAP )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_STATIC__ST_AUTOMATIC {
		\find( ST_STATIC = ST_AUTOMATIC )
		\replacewith( false )
		\heuristics(simplify_heap)
	};

	elimStorageEq_ST_STATIC__ST_ALLOCATED {
		\find( ST_STATIC = ST_ALLOCATED )
		\replacewith( false )
		\heuristics(simplify_heap)
	};
		
	// Bounds of "size_t"
	addBounds_SIZE_T {
		\add(
			SIZE_T_MAX >= 65535 ==>
			)
	};	
	
	introduceBounds_SIZE_T_MAX {
		\find ( SIZE_T_MAX )
		\add(
			SIZE_T_MAX >= 65535 ==>
			)
		\heuristics(infer_heap)			
	};	
	
	// Bounds of "ptrdiff_t"
	addBounds_PTRDIFF_T {
		\add(
			PTRDIFF_T_MAX >= 65535, PTRDIFF_T_MIN <= -65535 ==>
			)
	};	
	
	introduceBounds_PTRDIFF_T_MIN {
		\find( PTRDIFF_T_MIN )
		\add(
			PTRDIFF_T_MIN <= -65535 ==>
			)
		\heuristics(infer_heap)			
	};	
	
	introduceBounds_PTRDIFF_T_MAX {
		\find( PTRDIFF_T_MAX )
		\add(
			PTRDIFF_T_MAX >= 65535 ==>
			)
		\heuristics(infer_heap)			
	};		
	
}