// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
//
//

/* Generated by Together */

package de.uka.ilkd.key.logic.op;

import de.uka.ilkd.key.logic.Name;
import de.uka.ilkd.key.logic.Term;
import de.uka.ilkd.key.logic.sort.Sort;

public class Junctor extends Op {

    private final int arity;

    /** 
     * Visibility set to protected as needs to be subclassed in ASMKeY.
     * Creates a Junctor operator of the given name and arity.
     */
    protected Junctor(Name name, int arity) {
	super(name);
	this.arity=arity;
    }

    public int arity() {
	return arity;
    }

    /** @return true iff all of the subterms of the given subterms 
     * have Sort.FORMULA
     */
    public boolean validTopLevel(Term term){
	if (arity()!=term.arity()) return false;
        for (int i = 0; i<term.arity(); i++){
            if (!term.sub(i).sort().equals(Sort.FORMULA)) return false;
	}
        return true;    
    }

    /** 
     * 
     * @return Sort.FORMULA
     */
    public Sort sort(Term[] term) {
	return Sort.FORMULA;
    }
}
