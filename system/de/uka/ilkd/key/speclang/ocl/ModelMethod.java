// This file is part of KeY - Integrated Deductive Software Design
// Copyright (C) 2001-2009 Universitaet Karlsruhe, Germany
//                         Universitaet Koblenz-Landau, Germany
//                         Chalmers University of Technology, Sweden
//
// The KeY system is protected by the GNU General Public License. 
// See LICENSE.TXT for details.
//
//

/* Generated by Together */

package de.uka.ilkd.key.speclang.ocl;


public interface ModelMethod {


    ModelClass getContainingClass();

    String getContainingClassName();

    String getContainingPackage();
    
    // return signature of form name(arg1: type1; arg2: type2 ...)
    // and translates Java types to OCL types
    String getCallSignature();

    // return signature of form name(arg1: type1; arg2: type2 ...)
    String getCallSignature(boolean translateJavaType2OCLTypes);

    int getNumParameters();
    String getParameterNameAt(int i);
    String getParameterTypeAt(int i);
    
    String getResultType();

    String getName();

    boolean isVoid();

    boolean isConstructor();

    boolean isPrivate();

    // returns precondition if any, else ""
    String getMyPreCond();

    // returns modifies clause if any, else ""
    String getMyModifClause();

    // set modifies clause
    void setMyModifClause(String modifClause);

    boolean isQuery();

    // set precondition
    void setMyPreCond(String precond);

    // returns precondition of parent if any, else ""
    String getParentPreCond();

    String getMyPostCond();

    ModelMethod getParentMethod();

    void setMyPostCond(String postcond);

    String getParentPostCond();

    boolean hasOrigParent();
}
