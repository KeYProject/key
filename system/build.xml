<?xml version="1.0"?>
<project name="key" default="compile" basedir=".">

  <property environment="env" /> <!-- include environment variables -->

  <property name="src.dir"   value="${basedir}" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="dist.dir"  value="${basedir}/binary" />
  <property name="gen.dir"  value="${basedir}/genSrc" />
  <property name="docs.dir"  value="${basedir}/doc"   />
  <property name="ext.dir"   value="${basedir}/../key-ext-jars"   />
  <property name="instrument.dir" value="${basedir}/instrumented/" />
  <property name="junit.jar"  value="${ext.dir}/junit.jar"  />

  <property name="jcoverage.jar" value="${ext.dir}/jcoverage.jar" />

  <property file="local.properties" />

  <path id="jcoverage">
    <fileset dir="${ext.dir}">
      <include name="jcoverage.jar"/>
    </fileset>
  </path>

  <target name="info">
    <echo message="Target info is obsolete, use ant -projecthelp instead." />
  </target>

  <target name="prepare">
    <echo message="JDK ${java.version} found, make sure, it is at least 1.3." />
    <echo message="${ant.version} found, make sure it is at least 1.4." />
    <echo message="Compiler is ${build.compiler}, dependency check is ${build.depend}" />
  </target>

  <taskdef classpathref="jcoverage" resource="tasks.properties"/>

  <target name="test" depends="compile">
     <exec executable="${basedir}/../bin/runTests">
    </exec>
  </target>  

  <target name="instrument" description="Add jcoverage instrumentation" depends="compile">
   <instrument todir="${instrument.dir}">
    <fileset dir="${dist.dir}">
      <include name="**/*.class" />
      <include name="**/collection/*.class" />
      <exclude name="**/Test*.class" />
      <exclude name="**/ArrayOf*.class" />
      <exclude name="**/ListOf*.class" />
      <exclude name="**/SLListOf*.class" />
      <exclude name="**/SetOf*.class" />
      <exclude name="**/SetAsListOf*.class" />
      <exclude name="**/IteratorOf*.class" />
      <exclude name="**/MapAs*.class" />
      <exclude name="**/MapFrom*.class" />
      <exclude name="**/HashMapFrom*.class" />
      <exclude name="**/VectorOf*.class" />
      <exclude name="**/TacletForTests.class" />
     </fileset>
    </instrument>
  </target>
	
  <target name="compile" depends="keyparser, schemajava, diffparser"
          description="Compiles all java files into the source directory.">
<!--          depends="sablecc"> -->
    <javac srcdir= "${src.dir}"
           destdir="${dist.dir}"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="off">
      <include name="de/**" />
      <classpath>
        <pathelement location="${ext.dir}/antlr.jar" />
        <pathelement location="${ext.dir}/recoderKey.jar" />
        <pathelement location="${ext.dir}/log4j.jar" />
        <pathelement location="${ext.dir}/javacc.jar" />
        <pathelement location="${ext.dir}/junit.jar" />
      </classpath>
    </javac>
  </target>


<!--  <taskdef name="javacc"
           classname="org.apache.tools.ant.taskdefs.optional.javacc.JavaCC">
    <classpath>
      <pathelement location="${ant.home}/lib"/>
    </classpath>
  </taskdef>-->

  <target name="compile.clean">
  </target>


  <target name="keylexer">
     <antlr
         target="de/uka/ilkd/key/parser/lexer.g"
         outputdirectory="${gen.dir}/de/uka/ilkd/key/parser">
        <classpath>
           <pathelement location="${ext.dir}/antlr.jar" />
        </classpath>
     </antlr>
  </target>


  <target name="diffparser">
     <javacc
         target="de/uka/ilkd/key/parser/diffparser/DiffParser.jj"
         outputdirectory="${gen.dir}/de/uka/ilkd/key/parser/diffparser"
         javacchome="${ext.dir}" />
  </target>




  <target name="keyparser"  depends="keylexer">
     <antlr
         target="de/uka/ilkd/key/parser/keyparser.g"
         outputdirectory="${gen.dir}/de/uka/ilkd/key/parser">
        <classpath>
           <pathelement location="${ext.dir}/antlr.jar" />
        </classpath>
     </antlr>
  </target>


  <target name="schemajava"> 
     <javacc
         target="de/uka/ilkd/key/parser/schemajava/SchemaJavaParser.jj"
         outputdirectory="${gen.dir}/de/uka/ilkd/key/parser/schemajava"
         javacchome="${ext.dir}" />
  </target>



  <target name="build.dir" depends="prepare">
    <mkdir dir="${build.dir}"/>
  </target>

<target name="pmd">
    <pmd rulesetfiles="rulesets/basic.xml,rulesets/strings.xml, rulesets/codesize.xml, rulesets/strictexception.xml">
        <formatter type="html" toFile="pmd_report.html"/>
        <fileset dir="${src.dir}">
<!--            <include name="**/*.java"/> -->
        </fileset>
    </pmd>
</target>

</project>
