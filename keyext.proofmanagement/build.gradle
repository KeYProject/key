plugins {
    id 'application'
    id 'com.gradleup.shadow' version "9.1.0"
}

description = "Management of larger verification with KeY."

dependencies {
    implementation project(':key.core')
    implementation project(':key.ui')

    implementation("org.freemarker:freemarker:2.3.34")
}

application {
    mainClass = "org.key_project.proofmanagement.Main"
    // for start script generated with createStartScripts
    applicationName = "pm"
}


def testIntegrationReport = tasks.register('testIntegrationReport', JavaExec) {
    group = "verification"
    mainClass.set(application.mainClass)
    classpath = sourceSets.main.runtimeClasspath

    args('check', '--missing', '--settings', '--report', 'proofManagementReport.html', '--replay', '--dependency',
            'proofBundle/simpleBundleGeneration')
}

def testIntegrationReport2 = tasks.register('testIntegrationReport2', JavaExec) {
    group = "verification"
    mainClass.set(application.mainClass)
    classpath = sourceSets.main.runtimeClasspath

    args('check', '--missing', '--settings', '--report', 'proofManagementReport.html', '--replay', '--dependency',
            'src/test/pmexample2')
}
check.dependsOn(testIntegrationReport, testIntegrationReport2)

run {
    // for debugging, something like this can be used:
    //args('check', '--missing', '--settings', '--report', 'proofManagementReport.html', '--replay', '--dependency', 'pmexample2')
    //args('merge', 'bundle1', 'bundle2.zip', 'output.zproof')

    // not necessary any more with the workaround in HTMLReport
    // needed for access of Node.getValue in string template
    // jvmArgs += ['--add-opens', 'java.base/java.util=ALL-UNNAMED']
}

shadowJar {
    archiveClassifier = "exe"
    archiveBaseName = "keyext.proofmanagement"
}



checkerFramework {
    if(System.getProperty("ENABLE_NULLNESS")) {
        checkers = [
                "org.checkerframework.checker.nullness.NullnessChecker",
        ]
        extraJavacArgs = [
                "-AonlyDefs=^org\\.key_project\\.proofmanagement",
                "-Xmaxerrs", "10000",
                "-Astubs=$projectDir/src/main/checkerframework:permit-nullness-assertion-exception.astub:checker.jar/junit-assertions.astub",
                "-AstubNoWarnIfNotFound",
                //"-Werror",
                "-Aversion",
        ]
    }
}
